<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>metagenomic on Cao&#39;s blog</title>
        <link>https://jb-cao.github.io/Cao-blog/categories/metagenomic/</link>
        <description>Recent content in metagenomic on Cao&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 31 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jb-cao.github.io/Cao-blog/categories/metagenomic/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>25年最新的一些Nature环境微生物研究文章（4）</title>
        <link>https://jb-cao.github.io/Cao-blog/p/25-nature-4/</link>
        <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/25-nature-4/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/25-nature-4/images/1-2.png" alt="Featured image of post 25年最新的一些Nature环境微生物研究文章（4）" /&gt;&lt;p&gt;学习一些2025年最新的Nature环境微生物研究文章，了解一下当前较新的研究思路和方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Knight, C.G., Nicolitch, O., Griffiths, R.I., Goodall, T., Jones, B., Weser, C., Langridge, H., Davison, J., Dellavalle, A., Eisenhauer, N., et al. (2024). Soil microbiomes show consistent and predictable responses to extreme events. Nature 636, 690–696. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41586-024-08185-3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41586-024-08185-3&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章通过统一设计的大规模模拟实验，在草地土壤中施加干旱、洪水、冻结和高温等极端气候事件，系统比较微生物群落的结构与功能响应，发现其响应具有高度一致性和系统发育保守性，并提出微生物响应强度可由土壤原生环境预测，建立了土壤微生物对极端气候冲击的普适响应框架。&lt;/p&gt;
&lt;h2 id=&#34;土壤微生物组对极端气候事件的响应模式&#34;&gt;土壤微生物组对极端气候事件的响应模式&lt;/h2&gt;
&lt;p&gt;随着全球气候变迁，极端气候事件（Extreme Climatic Events, ECEs）发生频率显著增加，对陆地生态系统功能带来前所未有的挑战。土壤微生物作为生态系统功能的核心，其对极端事件的响应机制仍不清晰。本研究统一实验设计，在欧洲10个国家的30个草地土壤中模拟干旱、洪水、冻结和热浪，系统评估微生物群落的结构和功能变化。结果显示微生物响应具有高度一致性，并受系统发育约束。这一发现为全球尺度预测极端气候对微生物群落和生态功能的影响提供了理论基础。&lt;/p&gt;
&lt;p&gt;极端气候事件正以前所未有的频率和强度冲击地表生态系统。在陆地生态系统中，土壤微生物群落通过有机质分解、碳氮循环等过程维持生态功能。然而，我们尚不清楚：这些微生物是否存在通用的应对模式？是否可以通过系统发育特征或环境背景来预测群落响应？&lt;/p&gt;
&lt;p&gt;为回答上述问题，本研究设计了一项大规模跨气候区实验，在严格控制条件下施加四种典型极端气候事件，系统比较微生物响应的一致性、系统发育保守性和可预测性。&lt;/p&gt;
&lt;h2 id=&#34;研究设计与方法&#34;&gt;研究设计与方法&lt;/h2&gt;
&lt;p&gt;研究采集自欧洲30个草地土壤（涵盖高山、温带、地中海、寒带等气候区），每个土壤样本在实验室中分别接受五种处理：对照、干旱、洪水、冻结和高温（热浪）。处理持续时间依据生态学合理尺度设定。随后，对样品进行宏基因组测序和代谢活性检测，以揭示微生物群落的组成和功能变化。&lt;/p&gt;
&lt;img src=&#34;images/1-1.png&#34; title=&#34;&#34;/&gt;
&lt;h2 id=&#34;微生物群落响应的整体趋势&#34;&gt;微生物群落响应的整体趋势&lt;/h2&gt;
&lt;p&gt;所有四类极端气候事件都能显著改变微生物群落结构，特别是高温和干旱处理。高温引起α多样性降低，β多样性增大，群落组成趋于简化和重组。通过主坐标分析（PCoA）和距离分析，研究者发现同类事件下不同土壤样本的微生物变化方向高度一致，说明响应具有普遍性和可预测性。&lt;/p&gt;
&lt;p&gt;其中，高温处理不仅改变了群落结构，还显著增强了孢子形成菌（如芽孢杆菌、放线菌）的相对丰度，而洪水和冻结引发的变化则相对温和。&lt;/p&gt;
&lt;img src=&#34;images/1-2.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;&lt;em&gt;展示不同极端事件下土壤微生物群落组成、β多样性和代谢基因群的变化趋势。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;微生物响应具有系统发育保守性&#34;&gt;微生物响应具有系统发育保守性&lt;/h2&gt;
&lt;p&gt;群落组成变化中，具有相近系统发育位置的微生物对同一事件表现出相似的响应。例如，在高温处理中，某些放线菌门和芽孢杆菌表现出显著富集，暗示其具备特有的耐热机制。
将响应信号投射到系统发育树中，发现微生物的响应具有明显的系统发育保守性：亲缘关系近的物种对同一事件表现出相似反应。例如，在热浪处理中，许多革兰氏阳性菌表现出一致的耐受或优势扩张趋势，而革兰氏阴性菌（如变形菌门）则整体下调。这种保守性使得基于系统发育信息可以对不同微生物类群的响应趋势进行合理预测。&lt;/p&gt;
&lt;img src=&#34;images/2.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;&lt;em&gt;展示微生物群落中不同门类的响应差异及其系统发育树状图对比。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;功能响应热胁迫引发休眠化&#34;&gt;功能响应：热胁迫引发“休眠化”&lt;/h2&gt;
&lt;p&gt;高温处理显著上调了与休眠和孢子形成相关的基因表达，如&lt;strong&gt;spo0A、sigF、relA&lt;/strong&gt;等。这种“休眠化”策略降低了微生物的代谢活跃度，同时也可能限制其生态功能输出。&lt;/p&gt;
&lt;p&gt;代谢多样性分析显示，干扰事件总体降低了群落功能多样性，尤其是高温处理，表明微生物进入功能压制状态以应对胁迫。&lt;/p&gt;
&lt;img src=&#34;images/3.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;&lt;em&gt;展示关键应激基因表达热图、代谢通路富集分析结果等。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;响应强度与原生环境有关&#34;&gt;响应强度与原生环境有关&lt;/h2&gt;
&lt;p&gt;土壤历史气候背景和理化性质能部分预测其对某类事件的响应强度。例如，地中海气候土壤对干旱反应较弱，而寒带土壤对高温异常敏感。&lt;/p&gt;
&lt;p&gt;构建响应强度与环境因子之间的回归模型，发现年均降水、气温波动性、有机质含量等是重要预测因子。&lt;/p&gt;
&lt;img src=&#34;images/4.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;&lt;em&gt;展示响应强度与历史气候和土壤特性之间的相关性图表、建模残差分析等。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;结论与展望&#34;&gt;结论与展望&lt;/h2&gt;
&lt;p&gt;本研究首次在泛欧洲尺度上、通过统一设计系统考察土壤微生物群落对极端气候事件的响应，揭示出如下关键发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;响应一致性强&lt;/strong&gt;：不同地点、不同背景的土壤微生物群落对同类事件反应方向一致；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统发育保守性&lt;/strong&gt;：群落变化受微生物亲缘关系影响，具备进化学上的一致模式；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能趋同&lt;/strong&gt;：高温诱导休眠与代谢抑制是主要功能响应路径；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;敏感性可预测&lt;/strong&gt;：土壤历史环境决定其对未来气候冲击的敏感度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些发现为未来构建气候事件风险图谱、开展生态恢复和土地管理提供了科学基础。下一步研究可进一步结合代谢组学、稳定同位素追踪等手段，以更全面揭示“微生物–生态功能”之间的耦合响应机制。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>25年最新的一些Nature环境微生物研究文章（3）</title>
        <link>https://jb-cao.github.io/Cao-blog/p/25-nature-3/</link>
        <pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/25-nature-3/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/25-nature-3/images/fig1.png" alt="Featured image of post 25年最新的一些Nature环境微生物研究文章（3）" /&gt;&lt;p&gt;学习一些2025年最新的Nature环境微生物研究文章，了解一下当前较新的研究思路和方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lee, K.K., Liu, S., Crocker, K., Wang, J., Huggins, D.R., Tikhonov, M., Mani, M., and Kuehn, S. (2025). Functional regimes define soil microbiome response to environmental change. Nature, 1–11. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41586-025-09264-9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41586-025-09264-9&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章做了大量的土壤微宇宙（microcosms）扰动实验，测量硝酸盐利用和微生物组，工作量很大。还在此基础上构建了数学模型并实验验证，为理解复杂微生物群落如何应对环境扰动提供了新视角。&lt;/p&gt;
&lt;h2 id=&#34;功能机制定义土壤微生物组对环境变化的响应&#34;&gt;功能机制定义土壤微生物组对环境变化的响应&lt;/h2&gt;
&lt;p&gt;土壤微生物组的代谢活动在全球养分循环中起着核心作用。理解土壤代谢活动如何响应气候驱动的环境扰动是一个关键挑战。然而，土壤的生态、空间和化学复杂性阻碍了本文对这些群落如何响应扰动的理解。微生物组代谢响应环境变化的机制问题，由于自然微生物组的复杂性而变得尤为困难。这种复杂性在土壤中表现得最为明显，土壤具有巨大的分类多样性、空间异质性和化学多样性环境。&lt;/p&gt;
&lt;p&gt;传统的大规模调查方法通过量化野外环境变化、群落组成和代谢过程之间的相关性来研究这个问题。虽然调查揭示了稳健的相关性，但它们在揭示决定群落对环境变化响应的机制方面面临两个挑战：首先，调查无法控制混杂因素；其次，很难在野外大规模量化代谢动态。因此，调查在确定控制自然群落对环境变化代谢响应的机制方面能力有限。&lt;/p&gt;
&lt;h2 id=&#34;研究方法与实验设计&#34;&gt;研究方法与实验设计&lt;/h2&gt;
&lt;p&gt;为了控制混杂因素并获得机制性见解，研究团队采用了土壤微宇宙实验方法。这种方法消除了相关的环境波动，并允许在实验室中进行受控扰动。研究选择了美国华盛顿州Cook Agronomy Farm(CAF)的土壤作为研究对象，该地点表现出较大的自然pH变化，但其他环境因素变化最小。重要的是，土壤微宇宙能够高通量量化对环境扰动的代谢物动态。&lt;/p&gt;
&lt;p&gt;研究团队采集了20个表层土壤样品，这些样品的原生pH值从4.7到8.3不等。通过创建土壤-水混合物（浆液），并添加2mM硝酸盐和不同水平的强酸或强碱来扰动每个土壤的pH值至3到9之间的13个不同值。为了将预先存在的硝酸盐利用者的活性与每种条件下的生长分开，研究包括了用氯霉素处理的对照组，氯霉素抑制蛋白质合成。&lt;/p&gt;
&lt;img src=&#34;images/fig1.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图1a显示了在长期pH梯度(n=20个土壤，pH 4.7至8.3)上进行短期pH扰动(n=13)的实验室条件下野外采样示意图。图1b展示了3种不同原生pH土壤在酸性或碱性pH扰动下的硝酸盐浓度随时间变化。图1c是功能机制的示意图。&lt;/p&gt;
&lt;h3 id=&#34;三种功能机制的发现&#34;&gt;三种功能机制的发现&lt;/h3&gt;
&lt;p&gt;通过测量分析，研究发现了三种不同的硝酸盐利用机制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;酸性死亡机制(Regime I)&lt;/strong&gt;：在强酸性扰动(pH≤4)下，氯霉素处理和未处理条件下的硝酸盐还原都很小，表明几乎没有预先存在的硝酸盐还原生物量，也没有生长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;养分限制机制(Regime II)&lt;/strong&gt;：在接近原生pH的pH水平(4≤pH≤8)下，即使是非氯霉素样品中，硝酸盐也呈线性下降，但速率比氯霉素处理的对照组快。这表明在非氯霉素条件下发生了一些生长，但可能受到硝酸盐以外的养分缺乏的抑制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;复苏生长机制(Regime III)&lt;/strong&gt;：在强碱性条件下(pH&amp;gt;8)，非氯霉素样品显示硝酸盐还原加速，而氯霉素处理的样品显示很少的活性。这表明土著硝酸盐利用种群很小，但这个稀有种群迅速扩大，在非氯霉素条件下耗尽硝酸盐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;images/fig2.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图2左列展示了描述群落水平代谢的消费者-资源模型，包括单一功能生物量(x)、硝酸盐浓度(A)和限制性养分浓度(C)。中间和右列展示了两种机制下x(t)、A(t)和C(t)的动态。&lt;/p&gt;
&lt;h3 id=&#34;模型建立与验证&#34;&gt;模型建立与验证&lt;/h3&gt;
&lt;p&gt;为了描述硝酸盐动态，研究团队使用了消费者-资源模型。该模型将土壤微生物组的生态复杂性归结为单一有效生物量，而不是明确考虑多种类群及其相互作用。模型包括三个变量：功能性硝酸盐利用生物量(x)、硝酸盐浓度(A)和碳养分(C)，以及五个参数：消耗速率(rA和rC)、亲和力(KA和KC)和生物量生长速率(γ)。&lt;/p&gt;
&lt;p&gt;模型有两个关键特性：首先，硝酸盐利用率(Ạ)与功能生物量(x)的数量成正比，即使在没有生长的情况下也是如此；其次，功能生物量对A和C的吸收遵循共同限制的Monod形式，因此任何一种资源的耗尽都会停止生长。这些特性意味着当C耗尽时，生长停止，硝酸盐(A)以与x成正比的恒定速率被消耗。&lt;/p&gt;
&lt;p&gt;研究团队将这个模型拟合到所有20种土壤和13种pH扰动的硝酸盐利用动态中，无论是否使用氯霉素处理。通过固定生长率γ和亲和力参数(KA和KC)，并改变两个重新调整的参数：x̃(0)=x(0)rA和γC̃(0)=γC(0)rA/rC，这些参数保留了与x和C相同的解释：x̃(0)反映了在给定条件下所有可以进行硝酸盐还原的类群的土著代谢活性，γC̃(0)反映了可用的限制性养分。&lt;/p&gt;
&lt;img src=&#34;images/fig3.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图3a展示了从所有样品的硝酸盐动态推断出的两个模型参数——土著生物量活性(x̃(0))和限制性养分浓度(γC̃(0))的散点图。图3b展示了每种机制下中性和酸性土壤的硝酸盐动态示例。图3c和3d分别展示了不同原生pH和扰动pH值下土著生物量和限制性养分的热图。&lt;/p&gt;
&lt;h3 id=&#34;分类学模式与机制验证&#34;&gt;分类学模式与机制验证&lt;/h3&gt;
&lt;p&gt;为了开始确定控制跨机制代谢变化的主导机制，研究团队通过测序量化了组成变化。研究测量了在氯霉素处理和未处理条件下孵育四天后的绝对丰度，计算了门水平的生长倍数，并使用非负矩阵分解(NMF)来分解所有土壤和pH扰动下门水平生长的变化。&lt;/p&gt;
&lt;p&gt;分析表明，大多数生长可以用两个变化轴来捕捉：一个轴包括假单胞菌门和拟杆菌门的组合，另一个轴仅包括芽孢杆菌门。在机制II中，假单胞菌门和拟杆菌门随着pH的增加而增加生长，随后在机制III开始附近下降。这与模型在机制II中揭示的土著生物量活性(x̃(0))的行为相匹配。芽孢杆菌门直到pH阈值在7到8.5之间才开始生长，这与机制III中指数硝酸盐利用动态的开始相匹配。&lt;/p&gt;
&lt;img src=&#34;images/fig4.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图4a和4b分别展示了假单胞菌门和拟杆菌门组合以及芽孢杆菌门在不同pH条件下的生长倍数。图4c展示了假单胞菌门和拟杆菌门与芽孢杆菌门生长倍数的散点图。图4d展示了x̃(0)与γC̃(0)的散点图，其中标出了机制，红色轮廓表示接近机制III边界的机制II条件。&lt;/p&gt;
&lt;h3 id=&#34;机制ii中碳释放促进生长&#34;&gt;机制II中碳释放促进生长&lt;/h3&gt;
&lt;p&gt;在养分限制机制II中，无论是否使用氯霉素，硝酸盐还原速率都保持恒定，但在不使用药物时速率更高。模型将无药物时速率增加归因于养分(C(0))的快速初始利用。此外，随着扰动pH的增加，无氯霉素条件下的硝酸盐还原速率增加。模型提出，随着pH增加的限制性养分可用性(γC̃(0))推动了增加硝酸盐还原速率的生长。&lt;/p&gt;
&lt;p&gt;pH增加可以通过粘土颗粒上离子交换位点的取代反应增强土壤中有机碳的可用性。由于养分是通过交换反应释放的，研究假设生物量的增加，因此硝酸盐还原速率应该与添加到系统中的酸或碱的量成正比。在所有土壤中都观察到了这一趋势，表现为硝酸盐还原速率随NaOH一致增加（浅蓝色区域）。如果硝酸盐利用率随NaOH增加是由于限制性养分可用性(γC̃(0))增加推动了硝酸盐还原者的生长，那么预计它们的丰度会随着NaOH的增加而上升。正如预期的那样，通过16S rRNA扩增子测序测量的绝对丰度与添加到系统中的NaOH量呈线性关系。&lt;/p&gt;
&lt;img src=&#34;images/fig5.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图5a展示了硝酸盐还原速率（无氯霉素/氯霉素处理）随添加到土壤中的NaOH量的变化。图5b展示了养分释放的假设机制示意图。图5c展示了模型推断的可用限制性养分(C̃(0))与测量的水溶性有机碳(WSOC)的散点图。图5d和5e展示了在养分限制机制下未扰动pH(5.4)土壤的修正实验结果。&lt;/p&gt;
&lt;h3 id=&#34;机制i中生物量减少与细胞死亡相关&#34;&gt;机制I中生物量减少与细胞死亡相关&lt;/h3&gt;
&lt;p&gt;在酸性pH扰动响应中，模型显示土著生物量活性(x̃(0))减少和限制性养分可用性降低。为了测试土著生物量活性(x̃(0))随pH下降是否与细菌丰度相关，研究计算了在氯霉素处理条件下每个门终点绝对丰度相对于初始时间点T0的倍数变化(&amp;ldquo;存活倍数&amp;rdquo;)。存活倍数反映了在没有生长的情况下丰度的变化，因此本文将其视为死亡的代理。&lt;/p&gt;
&lt;p&gt;除了芽孢杆菌门外，所有门在酸性扰动下都表现出存活倍数的一致下降。存活倍数与x̃(0)近似线性下降，表明生物量活性的降低可能与细胞死亡有关。然而，存活倍数的变化也可能源于pH依赖性残留DNA的降解。为了测试细胞死亡减少机制I中生物量活性的假设，研究使用了从本文的土壤或代表图4中三个门的菌株集合中分离的菌株。使用这些分离株，测量了pH值从3到7范围内的DNA降解和细胞死亡率。结合这些速率和模型使本文能够得出结论，通过测序测量的丰度变化必须至少部分源于细胞死亡。&lt;/p&gt;
&lt;img src=&#34;images/fig6.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;图6a展示了土壤质地（沙、粘土和淤泥的比例）的三元图。图6b展示了来自LaBagh(IL, USA)、Pinhook(IN, USA)和Sedgwick CLG13和ELG13(CA, USA)土壤样品的拟合模型参数(x̃(0)和γC̃(0))的散点图。图6c展示了来自捷克共和国三种土壤的早期反硝化速率(反硝化酶活性(DEA，等同于x̃(0)))和DEA与长期反硝化速率(反硝化潜力(DP，等同于γC̃(0)))差异的散点图。图6d展示了来自LaBagh(IL)、Pinhook(IN)和Sedgwick CLG13和ELG13(CA)土壤样品在不同pH水平下芽孢杆菌门以及假单胞菌门和拟杆菌门组合的生长倍数。图6e展示了Anderson等人研究中pH扰动后门水平相对丰度随时间变化。图6f展示了来自四项研究的土壤在酸性或碱性pH扰动下土著生物量活性(x̃(0))下降。图6g展示了先前研究中土壤在接近原生pH下氮利用的恒定速率。&lt;/p&gt;
&lt;h3 id=&#34;长期ph对机制边界的影响&#34;&gt;长期pH对机制边界的影响&lt;/h3&gt;
&lt;p&gt;研究观察到，土壤的原生(长期)pH决定了在机制之间转变的pH阈值，酸性土壤在比中性土壤更小的酸性扰动后从机制II转变为机制I。这种行为可能是由群落过去暴露于pH波动所塑造的。虽然本文缺乏历史pH波动的直接记录，但本文可以使用滴定曲线来描述土壤对pH扰动的响应。&lt;/p&gt;
&lt;p&gt;在所有土壤中，这些曲线显示出一致的形状：在高(pH 9)和低(pH 3)pH值处的平台由陡峭的非线性转变连接。土壤的原生pH决定了其在无扰动时沿曲线的位置。酸性土壤位于较低平台附近，因此对pH变化有很强的缓冲作用。相比之下，更多的中性土壤位于陡峭区域，在那里小的酸或碱添加会导致大的pH变化。本文推测这种缓冲能力的差异使得来自酸性土壤的群落对pH波动的耐受性较差，这可能解释了它们在更小的扰动后从机制II转变为机制I。&lt;/p&gt;
&lt;p&gt;此外，本文的测序数据支持微生物组组成反映对原生pH的特定适应，有助于解释跨土壤的机制边界变化。在更酸的土壤中，假单胞菌门和拟杆菌门在较低pH下表现出更大的存活率。相反，芽孢杆菌门开始在机制III中生长的pH随原生土壤pH增加而增加。此外，在机制III中生长的菌株的身份预测了土壤的原生pH。这些发现表明，长期暴露于特定的pH条件会选择特定的类群，可能塑造群落转变功能机制之间的pH阈值。&lt;/p&gt;
&lt;h2 id=&#34;讨论与展望&#34;&gt;讨论与展望&lt;/h2&gt;
&lt;p&gt;这项研究对理论微生物生态学和微生物组代谢的实证研究具有重要意义。首先，本文的模型将整个群落抽象为单一有效生物量的成功与捕捉许多相互作用物种的复杂生态系统模型形成鲜明对比。这种对比表明，自然群落可能更适合通过粗粒度描述来理解，这种描述捕捉了群落中少数代谢相关的群体或行会。这种生态系统的低维图景尊重潜在机制，并与群落可观察的功能特性紧密相连。将这一成功扩展到更复杂的代谢过程，并将有效生物量变量如x̃与基础丰度动态联系起来，是未来工作的关键方向。&lt;/p&gt;
&lt;p&gt;其次，理解微生物群落代谢如何响应环境扰动仍然是应用微生物组科学的核心问题。这一挑战源于由许多具有不同代谢特征和生态相互作用的物种组成的群落的复杂性，这些相互作用发生在化学复杂的环境中。群落的复杂性促使测量越来越复杂，从宏基因组学和转录组学到单细胞代谢组学和定量稳定同位素探针。然而，将这些数据与群落代谢及其对环境扰动的响应联系起来仍然很困难。本文的研究结果表明，与其单独关注微观过程，不如首先进行定量、系统级的观察，如硝酸盐通量，并使用简单模型描述这些通量。然后，模型提出组织群落代谢的机制，如养分限制或生物量活性的变化。反过来，可以研究这些提出的机制的生理、化学或生态起源。&lt;/p&gt;
&lt;p&gt;本文的分析揭示了与功能机制相关的保守门水平关联。在强碱性扰动下，稀有芽孢杆菌门扩大，而优势假单胞菌门和拟杆菌门在接近原生pH下茁壮成长。这些模式表明，适应瞬时胁迫的稀有类群和适应稳定条件的优势类群，突出了波动在维持多样性中的作用。理解这些分类学模式需要将动态与生理学联系起来。尽管最近的工作已经对平衡生长的生理学产生了定量见解，但本文对波动在决定微生物特征中的作用的理解仍然有限。即使在缺乏生理学见解的情况下，本文的方法也能够从测序和养分测量中预测硝酸盐动态。使用从16S数据推断的硝酸盐还原酶基因丰度和WSOC测量，本文训练了回归来预测模型参数x̃(0)和γC̃(0)。这使本文能够仅从pH、WSOC和扩增子数据预测硝酸盐通量，证明功能机制即使在复杂群落中也能连接结构和功能。&lt;/p&gt;
&lt;p&gt;本文的研究有几个局限性。首先，土壤浆液缺乏完整土壤的物理结构和自然环境波动；特别是，原位硝酸盐利用发生在动态变化条件下。其次，自然pH变化通常很小(小于1个单位)，这意味着大多数土壤可能保持在机制II，除非在肥料或尿液输入等大型外源扰动下。第三，尽管本文的土壤合理地涵盖了全球分类多样性，但它们对高度碱性(pH&amp;gt;8)或强酸性(pH&amp;lt;4)土壤的代表性不足。高度缓冲的碱性土壤可能完全抵抗pH诱导的机制转变。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>25年最新的一些Nature环境微生物研究文章（2）</title>
        <link>https://jb-cao.github.io/Cao-blog/p/25-nature-2/</link>
        <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/25-nature-2/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/25-nature-2/images/2-1-2.png" alt="Featured image of post 25年最新的一些Nature环境微生物研究文章（2）" /&gt;&lt;p&gt;学习一些2025年最新的Nature环境微生物研究文章，了解一下当前较新的研究思路和方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Borton, M.A., McGivern, B.B., Willi, K.R., Woodcroft, B.J., Mosier, A.C., Singleton, D.M., Bambakidis, T., Pelly, A., Daly, R.A., Liu, F., et al. (2025). A functional microbiome catalogue crowdsourced from north american rivers. Nature 637, 103–112. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41586-024-08240-z&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41586-024-08240-z&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章跟上一篇那个类似，采样贡献很大，同时有数据资源性贡献。然后测了宏基因组+宏转录组（所以可以自信的说功能数据库），还提出了河流连续体概念（这种思想可以借鉴）。最终也是没有做验证实验发表在Nature上。&lt;/p&gt;
&lt;h2 id=&#34;北美河流微生物组功能数据库growdb&#34;&gt;北美河流微生物组功能数据库（GROWdb）&lt;/h2&gt;
&lt;p&gt;在全球气候变化与人类活动加剧的背景下，河流生态系统作为陆地与水生环境的关键连接点，其微生物群落的结构与功能对元素循环、水质维持及生态系统稳定性具有决定性作用。该文章通过创新的众包采样模式与基因组解析技术，构建了首个覆盖北美大陆尺度的河流微生物组功能数据库（GROWdb），为理解河流微生物的生物地理学特征与生态功能提供了突破性视角。&lt;/p&gt;
&lt;p&gt;河流是地球表层物质循环的核心枢纽，承担着营养传输、碳氮转化等关键生态功能，同时直接影响人类的水资源安全与生态健康。尽管海洋微生物组已通过全球联盟（如Tara Oceans）得到深入研究，但河流微生物组的研究仍存在显著不足：多数研究依赖16S rRNA基因测序，难以解析功能潜力；宏基因组研究较少恢复宏基因组组装基因组（MAGs），掩盖了未知类群的贡献；采样范围局限于单一河流或流域，缺乏跨系统的普适性结论。&lt;/p&gt;
&lt;p&gt;针对这些缺口，本研究旨在通过&lt;strong&gt;众包协作&lt;/strong&gt;与&lt;strong&gt;基因组分辨率分析&lt;/strong&gt;，构建一个覆盖北美主要流域的河流微生物组功能数据库（GROWdb）。其核心目标包括：（1）解析河流微生物的分类与功能多样性，识别核心类群及其代谢潜力；（2）揭示微生物群落结构与功能的空间驱动因素（如地理、土地利用、溪流等级）；（3）验证河流连续体概念（RCC）在微生物功能层面的适用性；（4）建立微生物组与新兴污染物转化的关联，为水质管理提供依据。&lt;/p&gt;
&lt;h3 id=&#34;研究方法&#34;&gt;研究方法&lt;/h3&gt;
&lt;h4 id=&#34;众包采样与数据整合&#34;&gt;众包采样与数据整合&lt;/h4&gt;
&lt;p&gt;研究采用“网络中的网络”模式，联合超过100个团队在北美106个站点采集163个表层水样本，覆盖美国90%的流域（21个水文单元），涵盖不同生态区、溪流等级与流域规模。采样同步记录287项地理空间参数（如土地利用、溪流等级、流域面积）和地球化学数据（如水温、营养盐浓度），确保环境变量的全面性。&lt;/p&gt;
&lt;img src=&#34;images/2-1-1.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;测序与分析技术&#34;&gt;测序与分析技术&lt;/h4&gt;
&lt;p&gt;对样本进行宏基因组和宏转录组测序，获得约3.8Tb数据。通过三种组装方法（MEGAHIT、IDBA-UD、metaSPAdes）生成重叠群，结合MetaBAT2进行分箱，最终获得3825个中高质量MAGs，去重后保留2093个（99%序列一致性）。采用GTDB-tk进行分类注释，DRAM进行功能注释，并通过Bowtie2将测序 reads 映射到MAGs以量化丰度与表达量。&lt;/p&gt;
&lt;img src=&#34;images/2-1-2.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;数据库构建&#34;&gt;数据库构建&lt;/h4&gt;
&lt;p&gt;GROWdb通过多平台开放访问：NCBI存储原始测序数据与MAGs；国家微生物组数据协作网（NMDC）链接多组学数据；KBase提供基因组注释与代谢模型；GROWdb Explorer提供交互式可视化工具，实现跨学科数据复用。&lt;/p&gt;
&lt;h3 id=&#34;growdb的核心特征&#34;&gt;GROWdb的核心特征&lt;/h3&gt;
&lt;p&gt;GROWdb包含2093个去重MAGs，覆盖27个门，其中10个科、128个属为新分类单元，大量类群仅通过字母数字命名（如未培养细菌UBA类群），凸显河流微生物的未知多样性。与现有淡水MAGs对比，河流与湖泊微生物组成差异显著，且河流样本的基因组覆盖率更高，表明GROWdb填补了河流微生物基因组资源的空白。&lt;/p&gt;
&lt;p&gt;通过分析全球266,764个公开宏基因组数据，发现GROWdb的MAGs存在于90%的河流样本和46%的淡水样本中，且在废水、土壤等环境中也有检出，印证了河流作为“景观整合者”的角色——其微生物群落整合了陆地、水生等多源输入。&lt;/p&gt;
&lt;h3 id=&#34;核心河流微生物组的功能特征&#34;&gt;核心河流微生物组的功能特征&lt;/h3&gt;
&lt;p&gt;宏基因组分析显示，放线菌门（Actinobacteriota）、变形菌门（Proteobacteria）、拟杆菌门（Bacteroidota）和疣微菌门（Verrucomicrobiota）为优势类群，占所有样本相对丰度的主导地位。其中，&lt;em&gt;Planktophilia&lt;/em&gt;属（放线菌门）在70%的样本中存在，平均相对丰度达12%，是分布最广且最丰富的类群；&lt;em&gt;Limnohabitans_A&lt;/em&gt;、&lt;em&gt;Polynucleobacter&lt;/em&gt;等5个属也存在于50%以上的样本中。&lt;/p&gt;
&lt;p&gt;宏转录组分析进一步识别出25个高表达属，其中&lt;em&gt;Methylopumilus&lt;/em&gt;、&lt;em&gt;Polynucleobacter&lt;/em&gt;、&lt;em&gt;Planktophilia&lt;/em&gt;等6个属在所有转录组样本中均有活性（核心活性属）。这些类群普遍具备&lt;strong&gt;有氧呼吸&lt;/strong&gt;（编码电子传递链复合体）和&lt;strong&gt;光驱动代谢&lt;/strong&gt;（光合系统、视紫红质）能力，部分还能降解硫、甲烷或参与氮还原，体现了代谢冗余——这是河流微生物应对环境波动的关键策略。&lt;/p&gt;
&lt;p&gt;硝化作用是河流氮循环的核心环节，GROWdb识别出1个&lt;em&gt;Nitrosomonas&lt;/em&gt;属MAG（氨氧化）和2个&lt;em&gt;Nitrospiraceae&lt;/em&gt;科MAG（亚硝酸盐氧化），均编码抗紫外线损伤和抗氧化应激的基因（如光解酶、超氧化物歧化酶），适应表层水环境。此外，检测到17个&lt;em&gt;Patescibacteria&lt;/em&gt;门MAGs，虽为专性发酵菌（无法呼吸），但在表层水中通过生物膜或低氧微生境存活，且其丰度随河流规模增加而降低，暗示与河床交换的关联。&lt;/p&gt;
&lt;img src=&#34;images/2-2.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;新兴污染物的微生物响应&#34;&gt;新兴污染物的微生物响应&lt;/h3&gt;
&lt;p&gt;河流作为人类活动的“受体”，持续暴露于抗生素、微塑料等新兴污染物。GROWdb分析显示，54.3%的MAGs（1135个）编码25类抗生素抗性基因（ARGs），其中糖肽抗性基因（&lt;em&gt;van&lt;/em&gt;）数量最多（1219个），但多数不位于典型抗性基因簇中，功能待验证。30%的ARGs在转录组中表达，且污水处理厂（WWTP）影响的站点中，外排泵和ARGs的表达量显著更高，表明人类活动驱动抗性基因的活跃传播。&lt;/p&gt;
&lt;p&gt;此外，微生物还编码微塑料（如 terephthalate）、氟化物等污染物的转化基因。例如，&lt;em&gt;Limnohabitans_A&lt;/em&gt;表达PET降解通路的下游基因，&lt;em&gt;Polynucleobacter&lt;/em&gt;表达脱卤酶（参与脱氟），且这些基因的表达与城市用地比例正相关，揭示微生物对人为污染的适应性代谢潜力。&lt;/p&gt;
&lt;h3 id=&#34;大陆尺度的微生物地理模式&#34;&gt;大陆尺度的微生物地理模式&lt;/h3&gt;
&lt;p&gt;通过Mantel检验与方差分解分析，发现&lt;strong&gt;溪流等级&lt;/strong&gt;（反映河流规模）是微生物组成的最强驱动因素，其影响超过纬度、总碳等传统变量。宏基因组和宏转录组组成均随溪流等级显著变化：基因组丰富度在6级溪流达到峰值，转录组丰富度随等级升高持续增加，表明功能活性的调控机制与基因存在性不同。&lt;/p&gt;
&lt;p&gt;温度也是关键驱动因素，光驱动代谢（如光合系统、视紫红质）的基因表达与流域最高温度显著相关，核心类群（如&lt;em&gt;Methylopumilus&lt;/em&gt;）通过光捕获适应温度变化，暗示气候对河流微生物功能的潜在影响。&lt;/p&gt;
&lt;p&gt;微生物群落组成在Omernik生态区和水文单元（HUC）尺度上存在显著分异——干旱草原区与湿润亚热带区的群落结构差异明显，印证了陆地输入对河流微生物的“接种”效应。但功能组成未表现出地理分异，表明分类水平的变化被功能冗余补偿，这为跨区域的微生物管理指标开发提供了依据。&lt;/p&gt;
&lt;img src=&#34;images/2-3.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;河流连续体概念的功能扩展&#34;&gt;河流连续体概念的功能扩展&lt;/h3&gt;
&lt;p&gt;河流连续体概念（RCC）预测：随河流规模增大，陆地输入影响减弱，生物多样性先增后减。本研究首次将RCC扩展至微生物功能层面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多样性模式&lt;/strong&gt;：基因组丰富度在6级溪流达峰，符合RCC中“中等规模河流生物多样性最高”的预测；但转录组丰富度随等级升高而增加，反映功能活性对河流规模的独特响应。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;碳利用策略&lt;/strong&gt;：低等级溪流中，微生物高表达聚合物、芳香族化合物降解基因（依赖陆地输入）；高等级河流中，甲基营养基因（如甲醇氧化）表达增强（依赖自生源碳），印证RCC中“陆地碳输入随河流规模降低”的预测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;光代谢梯度&lt;/strong&gt;：高等级河流中光驱动代谢基因表达显著增加，与RCC中“大型河流光照更充足”的特征一致，且光合/呼吸（P/R）比在6-8级溪流最高，支持RCC的能量流动模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;images/2-4.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;研究结论&#34;&gt;研究结论&lt;/h3&gt;
&lt;p&gt;GROWdb通过众包模式与基因组解析，首次系统揭示了北美河流微生物的功能多样性与地理驱动机制，其创新点包括：（1）建立首个跨大陆尺度的河流微生物基因组资源，填补分类与功能研究的缺口；（2）阐明微生物对新兴污染物的代谢潜力，为水质监测提供生物标志物；（3）验证RCC在微生物功能层面的适用性，为生态预测模型提供框架。&lt;/p&gt;
&lt;p&gt;未来研究可基于GROWdb探索：（1）长期气候变化对河流微生物功能的影响；（2）污染物转化基因的水平转移机制；（3）跨大陆河流微生物的对比分析。作为开放数据库，GROWdb为 watershed 预测模型与微生物组管理实践提供了基础，助力应对水资源可持续性与环境变化的挑战。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>25年最新的一些Nature环境微生物研究文章（1）</title>
        <link>https://jb-cao.github.io/Cao-blog/p/25-nature/</link>
        <pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/25-nature/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/25-nature/images/1-1-1.png" alt="Featured image of post 25年最新的一些Nature环境微生物研究文章（1）" /&gt;&lt;p&gt;学习一些2025年最新的Nature环境微生物研究文章，了解一下当前较新的研究思路和方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ezzat, L., Peter, H., Bourquin, M., Busi, S.B., Michoud, G., Fodelianakis, S., Kohler, T.J., Lamy, T., Geers, A., Pramateftaki, P., et al. (2025). Diversity and biogeography of the bacterial microbiome in glacier-fed streams. Nature, 1–9. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41586-024-08313-z&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41586-024-08313-z&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇文章采样贡献很大，全球尺度的，然后冰川补给溪流（Glacier-fed Streams, GFSs）在讲故事时和气候变化联系起来，还有一些生态方面的讨论，最终也是没有做实验发表在Nature上。&lt;/p&gt;
&lt;h2 id=&#34;冰川补给溪流中细菌微生物组的多样性和生物地理学&#34;&gt;冰川补给溪流中细菌微生物组的多样性和生物地理学&lt;/h2&gt;
&lt;p&gt;气候变化正以前所未有的速度改变着地球的生态系统，其中山地冰川的快速融化尤为显著。冰川补给溪流（Glacier-fed Streams, GFSs）作为受冰川融化直接影响的生态系统，正面临着深刻的变革。GFSs 是寒冷、寡营养且不稳定的生态系统，其中生命主要由微生物生物膜主导。然而，在过往很长一段时间里，我们对 GFSs 微生物组的了解犹如雾里看花，极为匮乏。这种认知的不足严重阻碍了我们准确理解其对冰川退缩的响应机制。因此，开展一项全面且系统的全球范围调查，揭示 GFSs 微生物群的生物多样性和生物地理分布特征，以及驱动其形成的生态和进化过程，显得尤为迫切。这不仅有助于我们深入认识这一独特生态系统的内在运行规律，更能为应对气候变化对 GFSs 生态系统的影响提供关键的科学依据。&lt;/p&gt;
&lt;h3 id=&#34;研究方法&#34;&gt;研究方法&lt;/h3&gt;
&lt;p&gt;为了达成研究目标，研究团队踏上了一场跨越全球的科研征程。他们从地球上主要山脉的 152 个 GFSs 采集底栖微生物组样本，这其中涵盖了新西兰、俄罗斯高加索、喜马拉雅、帕米尔、天山、非洲、欧洲、阿拉斯加、格陵兰、厄瓜多尔和智利等地的山脉。在采集微生物样本的同时，研究人员还仔细记录了溪流水化学、冰川特性和地理等多方面的互补数据。回到实验室后，运用宏条码和宏基因组学等先进技术对样本进行分析。通过这些技术，能够精准地识别和分析微生物的种类及基因信息。随后，利用基于距离的冗余分析（db - RDAs）和多尺度方差分配等多种模型对数据进行深入挖掘，以探究微生物组组成与环境因素、空间因素之间的复杂关系。&lt;/p&gt;
&lt;h3 id=&#34;gfss-的环境特征&#34;&gt;GFSs 的环境特征&lt;/h3&gt;
&lt;p&gt;GFSs 拥有一系列独特的环境特征。其水温常年接近冰点，这对大多数生物来说是一个极具挑战性的低温环境。沉积物由于受到冰川融水的强大冲刷力影响，结构松散且不稳定。夏季时，冰川融水携带大量泥沙等颗粒物，使得水体浑浊不堪，光照难以穿透，严重限制了光自养生物的光合作用。而到了冬季，冰和雪的覆盖进一步减少了光照时间和强度，让这里成为一个近乎黑暗的世界。不仅如此，GFSs 整体处于寡营养状态，有机碳和无机营养物质极度匮乏，微生物在这样的环境中面临着食物短缺的严峻考验。不过，不同区域的 GFSs 也存在一定差异，流域地质及相关的沉积矿物学在区域尺度上会对溪流水的地球化学特性产生影响，包括 pH 值和离子组成等，这些因素又会进一步影响微生物的氧化还原反应和生存策略。&lt;/p&gt;
&lt;img src=&#34;images/1-1-1.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;细菌微生物组的特性&#34;&gt;细菌微生物组的特性&lt;/h3&gt;
&lt;p&gt;研究发现，GFSs 细菌微生物组在分类和功能上与其他冰冻圈微生物组（如冰川冰尘、冰前湖和永久冻土土壤中的微生物组）有着显著差异。从功能潜力来看，基于 KEGG 通路分析，GFSs 微生物组在生物膜形成相关通路方面表现突出，例如分泌系统和双组分系统。这些通路对于细菌在 GFSs 中生存至关重要，它们帮助细菌对抗水流的侵蚀，以及在资源稀缺的环境中更好地获取和利用有限资源。在能量获取和代谢途径上，GFSs 中的细菌展现出了多样化的能力。它们能够在春季和秋季藻类渗出物脉冲期间，通过氨基酸、糖类和异生物质化合物的降解以及硫和氮代谢等途径，抓住短暂的资源丰富期，为自身的生存和繁衍积累能量。&lt;/p&gt;
&lt;img src=&#34;images/1-1-2.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;生物多样性模式&#34;&gt;生物多样性模式&lt;/h3&gt;
&lt;p&gt;在全球多样性方面，研究人员在 GFSs 中发现了跨越 44 个门的细菌，其中存在大量未分类的物种，这表明 GFSs 中蕴含着丰富的未知细菌多样性。尽管 GFSs 资源可用性低，但令人意外的是，其 alpha 多样性指标（观察到的丰富度和 Shannon H 值）介于其他冰冻圈生态系统和全球分布土壤之间，这意味着 GFSs 沉积物能够支持与这些系统相似水平的细菌多样性。进一步研究发现，ASV 丰富度随海拔升高和冰川覆盖度增加而降低，然而功能多样性却并未遵循这一海拔梯度变化规律，这可能是由于冰川影响下复杂且独特的环境选择压力所致。从群落间差异来看，GFSs 细菌微生物组的 β 多样性在山脉内部和之间均较高，细菌组成呈现出明显的生物地理格局。南方和北方半球间的细菌组成存在显著分离，不同山脉间的聚类也十分明显，这种差异主要是由众多指示 ASV 驱动的。但有趣的是，功能组成的空间格局并不明显，这暗示着 GFSs 细菌微生物组的结构与功能潜力可能存在解耦现象。&lt;/p&gt;
&lt;img src=&#34;images/1-2.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;微生物组的特异性与核心&#34;&gt;微生物组的特异性与核心&lt;/h3&gt;
&lt;p&gt;研究深入探究了 GFSs 细菌微生物组的特异性。通过严谨的数据预处理和去噪方法，确定了 62.2% 的 ASVs 为山脉特异性，尽管它们的相对丰度较低，仅占 9.0%，但对 beta 多样性的贡献却高达 20.9%，这充分凸显了它们在整体 GFSs 细菌生物多样性中的重要地位。此外，25.2% 的 ASVs 被认定为 “独特” 的，即仅在一个 GFSs 的多个沉积样本中发现，其中 6.4% 的独特 ASVs 出现在某一特定 GFSs 的所有沉积样本中。这种特异性在不同地区的分布并不均匀，新西兰南阿尔卑斯山和厄瓜多尔安第斯山脉的特异性最高，这一现象符合岛屿生物地理学理论，深刻反映了空间隔离、选择压力及长期气候稳定性对物种形成和特有性的重要影响。尽管 GFSs 细菌微生物组存在高度的山脉间及内部相异性，但研究人员还是成功识别出 165 个核心 ASVs，它们仅占总 ASVs 数量的 0.42%，但相对丰度却达到了 28.3%。这表明即使是在小核心微生物组中，也存在着相对丰富的分类单元。这些核心分类单元在竞争中可能具有明显优势，并且与特定和指示 ASVs 在分类学上存在重叠，主要由假单胞菌门、拟杆菌门、疣微菌门以及丛毛单胞菌科、甲基嗜菌科和几丁质杆菌科主导，在属水平上则以甲基营养菌属、极单胞菌属和红游动菌属为主。这些属不仅在 GFSs 中广泛存在，在其他冰冻圈生态系统中也能发现它们的身影，彰显了它们强大的适应极端环境的能力。&lt;/p&gt;
&lt;img src=&#34;images/1-3.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;微生物组组成的驱动因素&#34;&gt;微生物组组成的驱动因素&lt;/h3&gt;
&lt;p&gt;GFSs 微生物组在空间上呈现出明显的结构化特征，距离衰减模式（DDPs）清晰可见，这表明即使在相距遥远的 GFSs 之间，也存在着系统发育相似的类群，反映出少数分类单元在其中占据主导地位。通过基于距离的冗余分析（db - RDAs）和多尺度方差分配等分析手段，研究揭示了 GFSs 细菌微生物组组成的 54.9% 可被解释，其中空间过程（地理隔离和扩散限制）对 β 多样性的影响占比高达 23.6%，而纯且空间结构化的环境过程占 15.4%，这有力地强调了地理隔离和扩散限制在塑造 GFSs 微生物组结构中的关键作用。此外，流域地质与大气过程对 GFSs 细菌的影响也不容忽视，这进一步说明了地球多样性（地质、地貌和水文过程）在山区生物多样性形成中扮演着重要角色。与 GFSs 细菌组成相比，其功能潜力（以 KOs 表示）并未显示出强烈的生物地理模式，这在一定程度上支持了群落层面功能冗余的观点，但仍需要更多的研究，特别是借助蛋白质组学等技术，深入探讨细菌基因组的进化变化如何影响其功能冗余，以进一步验证这一结论。&lt;/p&gt;
&lt;img src=&#34;images/1-4.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;微生物组的系统发育地理&#34;&gt;微生物组的系统发育地理&lt;/h3&gt;
&lt;p&gt;对 GFSs 细菌微生物组的系统地理学分析，为我们揭示了其进化和生态特征中确定性与随机性装配过程的作用。研究明确指出，扩散限制是最主要的装配过程，在群落对中占比高达 59.4%，其次是生态漂变（30.0%）和同质选择（11.7%）。扩散限制不仅广泛影响系统发育树上的多个支系，而且在每个山脉范围内，其对相对丰度的贡献约为 45.4%。受同质选择影响的支系在不同山脉间的贡献差异较大，例如在高加索山脉和新西兰分别贡献了 43.9% 和 30.4% 的相对丰度，而在智利安第斯山脉和西南格陵兰则分别为 16.6% 和 18.8%。这些支系中既包含全球分布的甲基营养菌属和极单胞菌属，也有较少见的皮雷拉属和铁细菌属。尽管同质环境选择的作用在地理距离上保持相对稳定，但在同一山脉内，随着地理距离的增加，扩散限制的重要性愈发凸显。此外，β 多样性主要发生在系统发育树末端密切相关的类群间，一些属存在微多样性，这种微多样性对生态位空间的优化以及生物地理格局的形成都有着重要贡献。&lt;/p&gt;
&lt;img src=&#34;images/1-5.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;研究结论&#34;&gt;研究结论&lt;/h3&gt;
&lt;p&gt;这项研究全面而深入地揭示了 GFSs 细菌微生物组在分类和功能上的独特性，以及其高度的区域特异性和局部独特性。其结构主要受扩散限制和环境选择的双重影响，核心微生物组虽小但相对丰富。生物地理格局的形成源于少数优势但微多样的类群内变化，功能冗余可能是细菌应对环境波动的重要策略。然而，令人担忧的是，随着全球气候变暖，冰川退缩的速度不断加快，这一独特的微生物组正面临着前所未有的威胁。许多特定的 ASV 可能会因为环境的改变而消失，这将对 GFSs 生态系统的结构和功能产生深远影响。因此，本研究不仅为我们理解 GFSs 生态系统中的微生物提供了全新的视角，更为未来针对正在消失的 GFSs 生态系统的气候变化微生物学研究提供了宝贵的全球性参考，也为保护这一脆弱的生态系统敲响了警钟，呼吁我们尽快采取行动，探索其遗传潜力，以应对气候变化带来的挑战。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>有关Rarefaction的探讨，一篇10年前的文章</title>
        <link>https://jb-cao.github.io/Cao-blog/p/rarefaction-10/</link>
        <pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/rarefaction-10/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/rarefaction-10/images/fig1.png" alt="Featured image of post 有关Rarefaction的探讨，一篇10年前的文章" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;最近有审稿人的comments中建议阅读大佬Susan Holmes (2014) 的经典论文《Waste Not, Want Not: Why Rarefying Microbiome Data Is Inadmissible》，参考在自己的分析中。这篇文章深入探讨了微生物组数据分析中常用的稀释（rarefying）方法的缺陷，并提出了更合适的统计模型。虽然这篇文章已经发表了10多年，但其观点仍然具有重要的参考价值。&lt;/p&gt;
&lt;h2 id=&#34;-微生物组测序的统计挑战&#34;&gt;🌱 微生物组测序的统计挑战&lt;/h2&gt;
&lt;p&gt;高通量 DNA 测序技术让微生物组研究进入爆发期。通过测定来自不同环境或样本（如人体肠道、土壤、水体）的 16S rRNA 序列或宏基因组原始读数，研究者可以获得一个 OTU（操作分类单位，又可视作微生物“物种”）在各样本中的丰度矩阵。&lt;/p&gt;
&lt;p&gt;但一个关键问题是：不同样本之间测序深度存在显著差异——每个样本的读数（library size）可能相差一个数量级。这样直接比较 OTU 计数会导致误导。为此，研究者常用两种“归一化”方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;按比例（proportion）处理&lt;/strong&gt;：将各 OTU 计数除以总读数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稀释抽平（rarefying）&lt;/strong&gt;：随机抽取每个样本相同数量的读数（即归到最小 library size）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然而，McMurdie 和 Holmes 指出，这两种方法都存在严重统计缺陷。作者主张，应该使用更先进的统计模型，比如基于负二项分布的差异表达分析方法（edgeR、DESeq），这些方法能更好地处理 library size 差异和数据方差结构。&lt;/p&gt;
&lt;h2 id=&#34;稀释法的两个主要问题&#34;&gt;稀释法的两个主要问题&lt;/h2&gt;
&lt;h3 id=&#34;损失统计能力statistical-power&#34;&gt;损失统计能力（statistical power）&lt;/h3&gt;
&lt;img src=&#34;images/fig1.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;论文通过例子演示了 rarefying 带来的信息损失，例如样本 B 从 1000 个读数降到 100 后，估计微生物丰度比例的方差显著增加，导致对显著性差异的检验能力下降。即使两个样本在真实生态差异上有明显变化，稀释后信号可能被掩盖。&lt;/p&gt;
&lt;h3 id=&#34;丢弃样本&#34;&gt;丢弃样本&lt;/h3&gt;
&lt;p&gt;在 rarefying 流程中，通常设定一个最小读数阈值，低于阈值的样本被剔除。例如，如果用 500 读数标准化，而一个 sample 只有 300，则该 sample 会被完全删除。论文中指出，这可能导致有效样本被剔除，从而降低聚类分析或差异检测的结果质量。&lt;/p&gt;
&lt;h2 id=&#34;替代方案基于负二项分布的混合模型&#34;&gt;替代方案：基于负二项分布的混合模型&lt;/h2&gt;
&lt;p&gt;论文提出将微生物组计数数据视作负二项分布（Negative Binomial, NB）的一种表现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;样本 j 的总体读数可视为 Poisson 随机变量。&lt;/li&gt;
&lt;li&gt;OTU i 在样本 j 的计数$K[i,j] ~ NB(mean = s_j × μ_i, dispersion = φ_i)$，其中$s_j$ 是 library size 缩放因子，$μ_i$ 是 OTU 的相对丰度，$φ_i$ 捕捉 biological variability 和过度离散性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种模型有三个优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;统计理论支持：standard 方法来自 RNA-Seq 领域（edgeR、DESeq）。&lt;/li&gt;
&lt;li&gt;变异估计更准确：考虑方差随着丰度增长而变化，避免样本深度不同导致的 heteroscedasticity。&lt;/li&gt;
&lt;li&gt;没丢样本：所有样本保留，避免信息丢失。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外还提及另一种方法，zero-inflated Gaussian 模型（metagenomeSeq），适合候选 OTU 零计数很多的情况，但在生物重复较少时假阳性率仍然较高。&lt;/p&gt;
&lt;h2 id=&#34;模拟实验&#34;&gt;模拟实验&lt;/h2&gt;
&lt;p&gt;McMurdie 和 Holmes 为了系统地评估不同归一化和统计分析方法的性能，精心设计了两类模拟实验，分别聚焦于 &lt;strong&gt;样本聚类准确性&lt;/strong&gt; 与 &lt;strong&gt;差异丰度检出能力&lt;/strong&gt;。这些实验通过真实数据构造，并在可控的干预条件下测试各方法的稳健性与准确度，具有非常强的说服力。&lt;/p&gt;
&lt;img src=&#34;images/fig2.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;a样本聚类的准确性clustering-accuracy&#34;&gt;A:样本聚类的准确性（Clustering Accuracy）&lt;/h3&gt;
&lt;p&gt;作者从真实的微生物组数据集中（如“soil”和“ocean”数据）选取样本，构建两个组成明显不同的样本群体，并在这些群体中模拟不同的测序深度（library size），例如一个样本有 10,000 reads，而另一个只有 1,000 reads，反映现实中常见的不平衡情况。&lt;/p&gt;
&lt;p&gt;接着，他们使用不同的归一化方式处理这些样本，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;稀释（rarefying）&lt;/strong&gt;：所有样本统一稀释至相同深度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比例归一化（proportions）&lt;/strong&gt;：每个 OTU 相对其样本总数转换为相对丰度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于模型的方法（edgeR / DESeq）&lt;/strong&gt;：使用负二项分布估计归一化因子并建模。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;metagenomeSeq&lt;/strong&gt;：使用零膨胀正态模型（zero-inflated Gaussian）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;归一化后，再对 OTU 表进行距离计算（Bray-Curtis 或 UniFrac），最后进行聚类（如 PAM 或 hierarchical clustering）以观察样本是否能准确归类。&lt;/p&gt;
&lt;img src=&#34;images/fig4.png&#34; title=&#34;&#34;/&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;稀释法准确率最低&lt;/strong&gt;，尤其当稀释程度较高（即大部分样本初始 read 数远高于稀释阈值）时，稀释过程导致数据大幅减少，聚类准确率明显下降；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比例归一化方法略好但仍不稳定&lt;/strong&gt;，尤其在物种丰富度差异大时，常低估丰度低但重要的 OTU；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;edgeR 和 DESeq 准确率最高且最稳定&lt;/strong&gt;，能有效识别样本之间真实的结构差异；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;metagenomeSeq 表现介于中间&lt;/strong&gt;，在某些条件下表现尚可，但 replicates 少时不稳定。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这说明：&lt;strong&gt;基于模型的方法不仅能保留样本完整性，还能在复杂多变的测序深度下维持稳定的聚类表现&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;b差异丰度检测能力differential-abundance-detection&#34;&gt;B:差异丰度检测能力（Differential Abundance Detection）&lt;/h3&gt;
&lt;p&gt;作者构建了一个 OTU 表，其中一部分 OTU 被设定为“差异丰度 OTU”——它们在组 A 与组 B 中的丰度存在系统性差异（如增加 2 倍或 5 倍），而其余 OTU 丰度一致不变。&lt;/p&gt;
&lt;p&gt;通过不同方法处理这些数据并检测差异 OTU，然后使用 &lt;strong&gt;ROC 曲线和 AUC（Area Under Curve）&lt;/strong&gt; 来衡量每种方法检出真实差异 OTU 的能力与假阳性控制水平。&lt;/p&gt;
&lt;img src=&#34;images/fig5.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;edgeR 与 DESeq 明显优于其他方法，具体表现为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AUC 高达 0.95–0.98&lt;/strong&gt;，说明检出真正差异 OTU 的能力极强；&lt;/li&gt;
&lt;li&gt;假阳性率控制良好，尤其在样本数较多时尤为明显；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稀释法表现最差&lt;/strong&gt;，不仅灵敏度低（漏检多），而且假阳性率高，尤其当稀释阈值较低时更严重；&lt;/li&gt;
&lt;li&gt;metagenomeSeq 在 replicates 较多时接近 edgeR，但在 n=2~3 样本时性能急剧下降。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，作者强调，&lt;strong&gt;稀释法带来的最大问题是“有效样本数的减少”&lt;/strong&gt;——本来可以使用 10,000 个 reads 做差异分析，稀释后只剩 1,000 个，等效于用更小的样本重复去估计参数，导致功效大幅下降。&lt;/p&gt;
&lt;p&gt;McMurdie &amp;amp; Holmes 在文中总结如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;明确反对 rarefying&lt;/strong&gt;：既浪费数据又带来分析偏差，是 inadmissible 的 normalization 方法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;推荐基于统计混合模型的方法&lt;/strong&gt;：借用 RNA-Seq 的 edgeR、DESeq，甚至 metagenomeSeq。作者还将这些方法整合进 R 包 phyloseq 中，方便微生物组分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;树立统计意识&lt;/strong&gt;：研究者应理解 library size、overdispersion 的本质，并采用合适的 GLM（Generalized Linear Model）模型或经验贝叶斯方法，而不是简单采样。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这篇论文自 2014 年发布后对微生物组数据分析流程影响深远：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推动了差异丰度分析方法的演进，例如 ANCOM、ALDEx2、Songbird 等工具开始强调 compositional data 和统计模型。&lt;/li&gt;
&lt;li&gt;2024 年，Schloss 又在 mSphere 中重访 rarefying，提出一些更新观点，可视为对这篇论文的回应和延伸。&lt;/li&gt;
&lt;li&gt;微生物组数据本质是&lt;strong&gt;成分数据（compositional）&lt;/strong&gt;，总和约束 → 需要特殊方法处理，而 NB 模型正是合理起点之一。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;McMurdie, P.J., and Holmes, S. (2014). Waste not, want not: why rarefying microbiome data is inadmissible. PLOS Comput. Biol. 10, e1003531. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1371/journal.pcbi.1003531&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1371/journal.pcbi.1003531&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>室内微生物组相关研究</title>
        <link>https://jb-cao.github.io/Cao-blog/p/indoor/</link>
        <pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/indoor/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/indoor/images/ind3.png" alt="Featured image of post 室内微生物组相关研究" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;在现代社会，人们平均有超过90%的时间在室内度过——无论是家中、办公室，还是学校或医院。然而，我们很少意识到，这些封闭空间并非“无菌”环境，而是充满了肉眼看不见的微生物群落，它们构成了复杂的室内微生物组（Indoor Microbiome）。&lt;/p&gt;
&lt;p&gt;从地板上的灰尘到空调系统的滤网，从厨房台面到浴室的水龙头，微生物无处不在。它们有些来自人体（如皮肤和肠道菌群），有些通过空气、物品或宠物进入室内，还有些在建筑材料和管道中顽强生存。近年来，科学研究逐渐揭示，这些微小的生命不仅影响我们的健康——从免疫系统的发育到过敏和感染的风险——还可能通过“微生物-环境-宿主”的互动，塑造我们的长期福祉。&lt;/p&gt;
&lt;p&gt;随着城市化进程加速和建筑密闭性提高，室内微生物组的平衡变得愈发重要。本文介绍一些关于室内微生物组的研究进展，探讨它们对人类健康的潜在影响。&lt;/p&gt;
&lt;h2 id=&#34;室内微生物组与健康&#34;&gt;室内微生物组与健康&lt;/h2&gt;
&lt;p&gt;Gilbert, J.A., Hartmann, E.M. The indoors microbiome and human health. Nat Rev Microbiol 22, 742–755 (2024). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41579-024-01077-3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41579-024-01077-3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先看一篇比较新的发表在《Nature Reviews Microbiology》的综述文章对室内微生物有个整体的概念。这篇文章探讨了建筑环境——人类大部分时间居住的地方——的微生物生态对免疫、内分泌和神经健康的影响，还提出了利用室内微生物组来改善健康的策略。&lt;/p&gt;
&lt;h3 id=&#34;室内微生物组&#34;&gt;室内微生物组&lt;/h3&gt;
&lt;p&gt;室内微生物组与室外环境存在显著差异，主要受人类活动和建筑特性的影响。室内环境通常干燥且营养匮乏，微生物大多来自人体和环境输入。人类皮肤相关的细菌如葡萄球菌和链球菌在频繁接触的表面占主导，而建筑管道内部则以环境菌为主。不同场所的微生物特征各异：农场家庭富含动物粪便相关菌种，医院环境则常见致病菌如假单胞菌。每个人每小时会向周围释放大量微生物颗粒，使得每个室内空间都形成独特的微生物群落。空气流通和建筑材料选择会显著影响微生物定植，例如厨房台面的微生物组成与居民对食品安全的重视程度相关，而浴室则容易滋生肠道相关菌群。即使在严格消毒的医院，耐甲氧西林金黄色葡萄球菌等病原体仍可能持续存在，凸显了室内微生物管理的重要性。&lt;/p&gt;
&lt;img src=&#34;images/ind1.png&#34; title=&#34;&#34; width=&#34;60%&#34;/&gt;
&lt;h3 id=&#34;室内微生物生态学&#34;&gt;室内微生物生态学&lt;/h3&gt;
&lt;p&gt;要实现健康的室内环境，必须将微生物组研究与室内环境质量概念相结合。早期的研究主要集中于阐述室内空间中的细菌和真菌的分类多样性。随着技术进步，研究者开始对包括古菌和病毒在内的广义微生物多样性进行特征阐述，并探索它们的功能代谢特性。全面了解室内微生物组的真实功能和分类多样性，将使我们更接近实现健康建筑设计的崇高目标。&lt;/p&gt;
&lt;img src=&#34;images/ind2.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;抗菌耐药性&#34;&gt;抗菌耐药性&lt;/h4&gt;
&lt;p&gt;室内微生物组中抗菌耐药性基因的分布是一个重要研究领域。多个研究发现抗菌化学品和清洁实践与室内尘埃中的抗菌耐药性基因存在关联。医院环境尤其值得关注，研究表明高流量诊所地面上存在比其他环境更多的临床相关抗菌耐药性基因。患者与环境之间可能存在抗菌耐药性基因的交换，这种现象在新生儿重症监护环境中尤为明显。&lt;/p&gt;
&lt;p&gt;建筑管道系统是另一个值得关注的区域。淋浴软管和喷头中的微生物组受到管道材料类型和水源的影响，而水槽排水口由于接收药物和个人护理产品残留，其抗菌耐药性问题尤为突出。&lt;/p&gt;
&lt;h4 id=&#34;细菌和真菌的生存能力和代谢&#34;&gt;细菌和真菌的生存能力和代谢&lt;/h4&gt;
&lt;p&gt;室内微生物的生存能力和代谢活动受到多种因素影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计因素：如照明和材料选择会影响微生物种类及其生存时间&lt;/li&gt;
&lt;li&gt;湿度条件：不同程度的湿润可以诱导真菌生长，使用&amp;quot;湿润时间&amp;quot;框架可以对其进行定量建模&lt;/li&gt;
&lt;li&gt;水的存在：在持续潮湿环境（如建筑管道）中，微生物群落的丰度和多样性受到水流速率的强烈影响&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值得注意的是，在遭受湿气问题的建筑物内部，发霉材料与相连空间之间的物理距离会影响表面真菌的分布。实验室模拟中还观察到细菌与真菌之间的代谢互动。&lt;/p&gt;
&lt;h4 id=&#34;病毒和古菌&#34;&gt;病毒和古菌&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;病毒动态：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;托儿所的病毒组呈现季节性变化，冬季以人源病毒为主&lt;/li&gt;
&lt;li&gt;病毒来源多样，包括人类、宠物、植物及外部环境&lt;/li&gt;
&lt;li&gt;噬菌体在调节细菌群体方面具有重要作用，可能成为控制耐药菌的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;古菌特征：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;传统检测方法可能低估了古菌存在&lt;/li&gt;
&lt;li&gt;最新研究表明古菌确实存在于室内尘埃中，且可能具有生存能力&lt;/li&gt;
&lt;li&gt;产甲烷古菌等严格厌氧菌在特定条件下仍可在室内传播&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;人类与建筑之间的微生物交换&#34;&gt;人类与建筑之间的微生物交换&lt;/h4&gt;
&lt;p&gt;人类是室内微生物的主要来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新医院研究表明高接触环境中皮肤相关微生物占主导&lt;/li&gt;
&lt;li&gt;这一现象在其他环境（飞机舱、交通系统等）中也得到证实&lt;/li&gt;
&lt;li&gt;研究显示健康成人的微生物组也会受到建筑环境的影响&lt;/li&gt;
&lt;li&gt;肠道来源的严格厌氧菌（包括某些古菌）在特定条件下仍可在室内存活&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些发现突显了人-环境微生物交换的双向性，为健康建筑设计提供了重要依据。&lt;/p&gt;
&lt;h3 id=&#34;室内微生物组对人类健康的影响&#34;&gt;室内微生物组对人类健康的影响&lt;/h3&gt;
&lt;p&gt;室内微生物组通过多种途径影响人类健康。微生物暴露不仅可能导致感染性疾病，还会影响免疫系统发育，并与多种慢性疾病的发生发展相关。城市化进程带来的微生物多样性降低，可能与抑郁症、肥胖、过敏性疾病等健康风险的增加存在关联。&lt;/p&gt;
&lt;img src=&#34;images/ind3.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;感染性疾病&#34;&gt;感染性疾病&lt;/h4&gt;
&lt;p&gt;建筑环境在疾病传播中扮演重要角色，这在COVID-19大流行中得到充分印证。医院获得性感染尤其值得关注，其本质是患者、医护人员与医院微生物环境互动的结果。值得注意的是，某些常见共生菌（如金黄色葡萄球菌）在医院环境中可能演变为耐药菌株（如MRSA）。消毒剂和抗菌材料的广泛使用可能通过选择压力促进耐药性的产生，这一现象在家庭环境中同样存在。儿童因免疫系统发育不完善，更容易受到环境病原体的影响。&lt;/p&gt;
&lt;h4 id=&#34;代谢性疾病&#34;&gt;代谢性疾病&lt;/h4&gt;
&lt;p&gt;城市化带来的生活方式改变显著影响了人类微生物组。肠道菌群通过调节能量代谢和脂肪储存，在肥胖发生中起关键作用。研究表明，户外活动时间的减少和自然环境接触的匮乏，可能导致肠道菌群多样性下降，进而增加代谢疾病风险。虽然直接证据有限，但室内微生物多样性降低可能是推动肥胖流行的重要因素之一。&lt;/p&gt;
&lt;h4 id=&#34;心理健康&#34;&gt;心理健康&lt;/h4&gt;
&lt;p&gt;建筑环境可能通过&amp;quot;肠-脑轴&amp;quot;影响心理健康。现代建筑环境中微生物暴露模式的改变，加上城市生活压力，可能导致肠道菌群失调，进而影响神经递质产生、诱发炎症反应，最终增加抑郁和焦虑风险。这一领域的研究尚处于起步阶段，但已显示出微生物-神经-免疫互作的重要性。&lt;/p&gt;
&lt;h4 id=&#34;过敏性疾病&#34;&gt;过敏性疾病&lt;/h4&gt;
&lt;p&gt;著名的&amp;quot;卫生假说&amp;quot;为理解微生物暴露与过敏的关系提供了框架。阿米什人与赫特莱特儿童的对比研究显示，丰富的农场微生物暴露可显著降低哮喘风险。室内环境中的微生物代谢产物（如脂多糖）通过调节Th1/Th2免疫平衡影响过敏发生。生命早期接触特定细菌（如厚壁菌门）对预防过敏至关重要，而建筑潮湿等问题可能促进致敏微生物的生长。&lt;/p&gt;
&lt;p&gt;这些发现突显了建筑环境设计在维护健康方面的重要性，需要平衡感染防控与有益微生物暴露的关系。&lt;/p&gt;
&lt;h3 id=&#34;创建健康建筑&#34;&gt;创建健康建筑&lt;/h3&gt;
&lt;p&gt;在建筑创新浪潮中，&amp;ldquo;健康建筑&amp;quot;理念正成为连接人居环境与生态健康的重要纽带。这一理念超越了传统建筑标准，将微生物组管理纳入整体设计框架，创造性地平衡了健康效益与可持续性目标。&lt;/p&gt;
&lt;img src=&#34;images/ind4.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;现代健康建筑通过三大核心要素重塑人居环境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生物友好设计&lt;/strong&gt;：采用透气性建材和动态通风系统，促进有益微生物定植&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能调控系统&lt;/strong&gt;：实时监测温湿度等参数，优化微生物生长条件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自然融合设计&lt;/strong&gt;：通过垂直绿化和室内园艺增加环境微生物多样性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;尽管前景广阔，健康建筑的推广仍面临显著障碍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;成本瓶颈&lt;/strong&gt;：初期建设费用比传统建筑高出15-30%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改造难题&lt;/strong&gt;：现有建筑结构限制创新技术的整合应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准缺失&lt;/strong&gt;：全球范围内缺乏统一的微生物安全评估体系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前沿研究正在探索三种突破性干预路径：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;城市再野化&lt;/strong&gt;
通过立体绿化系统和生态走廊设计，将自然微生物群落引入城市空间。研究显示，接触多样化环境微生物可使儿童过敏风险降低40%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;活性建材开发&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;3D打印生物材料成功包埋枯草芽孢杆菌孢子&lt;/li&gt;
&lt;li&gt;智能水凝胶材料可特异性激活对抗病原菌&lt;/li&gt;
&lt;li&gt;自修复混凝土利用微生物矿化作用延长建筑寿命&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;微生物组精准调控&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;益生菌清洁剂重建表面微生物平衡&lt;/li&gt;
&lt;li&gt;噬菌体涂层有效控制医院耐药菌传播&lt;/li&gt;
&lt;li&gt;空气循环系统选择性富集有益气溶胶微生物&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着合成生物学进步，下一代健康建筑可能实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态响应型微生物群落调控&lt;/li&gt;
&lt;li&gt;个性化微生物环境定制&lt;/li&gt;
&lt;li&gt;建筑-人体微生物组双向调节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种创新范式正在重新定义建筑与健康的边界，为城市化进程中的公共卫生挑战提供全新解决方案。尽管仍需克服技术标准化和长期安全性评估等障碍，健康建筑已展现出改变人类生活方式的巨大潜力。&lt;/p&gt;
&lt;h2 id=&#34;住宅区四季室内外空气微生物组&#34;&gt;住宅区四季室内外空气微生物组&lt;/h2&gt;
&lt;p&gt;Indoor/outdoor airborne microbiome characteristics in residential areas across four seasons and its indoor purification (2024). Environ. Int. 190, 108857. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1016/j.envint.2024.108857&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1016/j.envint.2024.108857&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;发表在Environment International（IF=9.7）的一篇文章，这个研究系统调查了中国广州6个典型住宅区室内外空气微生物组在四季中的分布特征、影响因素及健康风险，并评估了空气净化器的去除效果。研究通过高通量测序和培养方法，揭示了微生物群落结构、粒径分布及其与环境因素的关联。&lt;/p&gt;
&lt;img src=&#34;images/season.jpg&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;核心发现&#34;&gt;核心发现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;微生物浓度与粒径分布&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;季节性差异&lt;/strong&gt;：夏季微生物浓度最高（细菌64-905 CFU/m³，真菌4-580 CFU/m³），冬季PM2.5浓度最高（室内68.42μg/m³）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;粒径特征&lt;/strong&gt;：74.6%的微生物为可吸入颗粒（&amp;lt;4.7μm），其中1.1-4.7μm占比最高（秋季达87.5%），易沉积于肺泡区。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;微生物群落组成&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优势菌群&lt;/strong&gt;：室内外均以&lt;em&gt;Anoxybacillus&lt;/em&gt;（细菌）和&lt;em&gt;Cladosporium&lt;/em&gt;（真菌）为主，后者冬季占比高达65.8%。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能预测&lt;/strong&gt;：室内微生物含人类肠道相关基因，且医院环境中耐药基因（如MRSA）丰度显著高于其他场所。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;环境驱动因素&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;关键关联&lt;/strong&gt;：温度与&lt;em&gt;Peanibacillus&lt;/em&gt;正相关（r&amp;gt;0.6, p&amp;lt;0.05），PM2.5促进&lt;em&gt;Stenotrophomonas&lt;/em&gt;生长；臭氧（O₃）影响细菌代谢。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;来源解析&lt;/strong&gt;：中性模型显示细菌扩散随机性高于真菌（R²=0.694-0.846），秋季随机分布最显著。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;健康风险&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;暴露评估&lt;/strong&gt;：儿童吸入剂量（ADD）高于成人，秋季风险最高；但危害商数（HQ）均&amp;lt;1，属可接受范围。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;致病潜力&lt;/strong&gt;：检出机会致病菌如&lt;em&gt;Rhodococcus&lt;/em&gt;（肺脓肿）和&lt;em&gt;Stenotrophomonas&lt;/em&gt;（耐药性强）。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;净化效果&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;空气净化器&lt;/strong&gt;：对1.1-4.7μm细菌去除率最高（秋季达49.4%），革兰阴性菌去除优于阳性菌；但对真菌效果有限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;研究意义与局限&#34;&gt;研究意义与局限&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;实践价值&lt;/strong&gt;：为湿热气候区住宅微生物污染控制提供数据支持，建议结合通风与净化策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;创新点&lt;/strong&gt;：首次系统量化净化器对微生物粒径选择性去除效应。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;局限性&lt;/strong&gt;：样本量较小（6个住宅），未考虑居民行为对微生物的直接影响。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;室内空气微生物的高度分辨率分析&#34;&gt;室内空气微生物的高度分辨率分析&lt;/h2&gt;
&lt;p&gt;Shen, F., Wang, M., Ma, J., Sun, Y., Zheng, Y., Mu, Q., Li, X., Wu, Y., and Zhu, T. (2024). Height-resolved analysis of indoor airborne microbiome: comparison with floor dust-borne microbiome and the significance of shoe sole dust. Environ. Sci. Technol. 58, 17364–17375. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1021/acs.est.4c06218&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1021/acs.est.4c06218&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;发表在Environmental Science &amp;amp; Technology（IF=11.3）的一篇文章，通过创新的被动采样方法，系统分析了室内空气中微生物群落在不同高度（天花板附近H1、成人呼吸高度H2、地面附近H3）的垂直分布特征，并与地板灰尘微生物组进行比较。研究首次量化了鞋底灰尘对室内空气微生物的贡献，揭示了传统地板灰尘样本作为空气微生物替代指标的局限性。&lt;/p&gt;
&lt;img src=&#34;images/height.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;核心发现-1&#34;&gt;核心发现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;空气微生物的垂直分层现象&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多样性梯度&lt;/strong&gt;：细菌和真菌的α多样性（如Chao1指数）随高度降低而增加（H1&amp;lt;H2&amp;lt;H3），但香农指数无显著差异，表明物种分布不均匀。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;群落差异&lt;/strong&gt;：细菌在H1与H3间存在弱分层（ANOSIM R=0.07），真菌分层更明显（R=0.18）。中高度（H2）细菌群落变异最大，可能与人类活动扰动相关。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;空气与地板灰尘微生物组的显著差异&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;组成差异&lt;/strong&gt;：空气中以变形菌门（41.4%）为主，地板灰尘中厚壁菌门（31.4%）更丰富。芽孢杆菌属（空气）与葡萄球菌属（灰尘）分别为优势菌。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;功能差异&lt;/strong&gt;：空气微生物代谢相关基因（如脂质代谢、异生物质降解）更活跃，而灰尘微生物的遗传信息处理通路更丰富（图5）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;鞋底灰尘的关键作用&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;贡献量化&lt;/strong&gt;：鞋底灰尘贡献4%空气细菌和14%空气真菌，与地板灰尘贡献相当（细菌4.3% vs 真菌12.6%）。对地板灰尘的贡献更高（细菌25.5%、真菌52.7%）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生态过程&lt;/strong&gt;：随机过程（如扩散限制）主导微生物群落构建（&amp;gt;80%），鞋底灰尘通过漂变过程（drift）显著影响真菌群落（贡献79%）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;健康暴露启示&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;采样方法革新&lt;/strong&gt;：矿物油被动采样器实现长期连续采样，克服传统主动采样噪音干扰，更贴近真实暴露场景。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险评估&lt;/strong&gt;：地板灰尘不能准确代表可吸入微生物，需开展高度分辨研究（如儿童爬行区与成人呼吸区差异）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创新点与局限&#34;&gt;创新点与局限&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;方法创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首次采用多高度同步被动采样&lt;/li&gt;
&lt;li&gt;建立鞋底灰尘贡献的定量模型（FEAST算法）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实际意义&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为&amp;quot;再野化&amp;quot;室内微生物组提供新思路（通过鞋底引入有益环境微生物）&lt;/li&gt;
&lt;li&gt;提示需关注鞋底作为病原传播载体的风险&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;研究局限&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未比较主动/被动采样器的捕获效率&lt;/li&gt;
&lt;li&gt;样本量较小（5个场所）&lt;/li&gt;
&lt;li&gt;未评估室外空气影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;新加坡食品中心微生物组&#34;&gt;新加坡食品中心微生物组&lt;/h2&gt;
&lt;p&gt;Teo, J.J.Y., Ho, E.X.P., Ng, A.H.Q., How, S.H.C., Chng, K.R., Ateş, Y.C., Fau’di, M.T., Aung, K.T., and Nagarajan, N. (2024). City-wide metagenomic surveillance of food centres reveals location-specific microbial signatures and enrichment of antibiotic resistance genes. Preprint at medRxiv, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1101/2024.07.28.24310840&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1101/2024.07.28.24310840&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1101/2024.07.28.24310840&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1101/2024.07.28.24310840&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;images/food.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;这项研究首次对新加坡16个食品中心(又称小贩中心)进行了城市规模的宏基因组监测(n=240样本)，旨在了解这些高人流环境中微生物(细菌、古菌、真菌、病毒)和非微生物DNA的分布特征。食品中心作为亚洲许多大城市主要的食品消费场所，其微生物组成可能对公共卫生有重要影响，特别是在全球食源性和污染物相关疾病发病率上升的背景下。研究重点关注了食品中心特有的微生物特征、抗生素抗性基因(ARGs)的富集情况，以及与食品相关的微生物特征。&lt;/p&gt;
&lt;p&gt;研究团队在两个时间点(2019年3月和2022年7月)采集了样本，采用MetaSUB协议对食品中心桌面进行拭子采样，使用Isohelix DNA Buccal Swabs收集样本。DNA提取后进行了深度shotgun宏基因组测序(平均每样本2000万reads)。数据分析使用了Kraken 2和Bracken进行分类分析，并采用多种统计和机器学习方法进行特征分析。&lt;/p&gt;
&lt;h3 id=&#34;主要发现&#34;&gt;主要发现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;食品中心特有的微生物特征
研究发现食品中心宏基因组中富含与食品相关的DNA特征，这些特征可以部分解释观察到的微生物谱(解释了44%的变异)。研究发现了特定的食物-微生物关联，如肠杆菌科与鱼类之间的关联。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置特异性微生物特征
通过机器学习分析，研究确定了22种微生物物种可以作为不同食品中心高度准确(&amp;gt;80%)的位置特异性标志，其中一些标志在3年后仍然存在。这些标志性微生物的平均相对丰度为4.5%，表明它们是宏基因组中的非优势物种。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抗生素抗性基因富集
食品中心显示出相对于其他非医疗环境(&amp;gt;2.5倍)和医院环境(某些病原体高出1个数量级)的抗生素抗性基因(ARGs)富集。特别是，粘菌素抗性在食品中心最为富集(&amp;gt;1.5倍)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;病原体富集情况
研究发现了高优先级ESKAPE病原体(如肺炎克雷伯菌、肠杆菌属等)在食品中心显著富集(&amp;gt;3倍)，甚至比医院环境还要高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这项研究首次大规模应用shotgun宏基因组方法对食品中心环境进行监测，证明了该方法在追踪环境中微生物和相关关注基因方面的实用性。研究发现食品中心具有独特的微生物特征，这些特征既反映了食品来源的变化，也反映了地理位置和相关环境因素的影响。研究结果强调了食品中心环境作为抗生素抗性监测重要节点的公共卫生意义，并为未来旨在降低感染风险的各种清洁和行为干预策略研究提供了基础。&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Gilbert, J.A., Hartmann, E.M. The indoors microbiome and human health. Nat Rev Microbiol 22, 742–755 (2024). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41579-024-01077-3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41579-024-01077-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Indoor/outdoor airborne microbiome characteristics in residential areas across four seasons and its indoor purification (2024). Environ. Int. 190, 108857. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1016/j.envint.2024.108857&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1016/j.envint.2024.108857&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Shen, F., Wang, M., Ma, J., Sun, Y., Zheng, Y., Mu, Q., Li, X., Wu, Y., and Zhu, T. (2024). Height-resolved analysis of indoor airborne microbiome: comparison with floor dust-borne microbiome and the significance of shoe sole dust. Environ. Sci. Technol. 58, 17364–17375. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1021/acs.est.4c06218&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1021/acs.est.4c06218&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Teo, J.J.Y., Ho, E.X.P., Ng, A.H.Q., How, S.H.C., Chng, K.R., Ateş, Y.C., Fau’di, M.T., Aung, K.T., and Nagarajan, N. (2024). City-wide metagenomic surveillance of food centres reveals location-specific microbial signatures and enrichment of antibiotic resistance genes. Preprint at medRxiv, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1101/2024.07.28.24310840&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1101/2024.07.28.24310840&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1101/2024.07.28.24310840&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1101/2024.07.28.24310840&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>在低生物量微生物组研究中预防和报告污染｜Nature Microbiology指南</title>
        <link>https://jb-cao.github.io/Cao-blog/p/lowmass-nm/</link>
        <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/lowmass-nm/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/lowmass-nm/images/fig2.png" alt="Featured image of post 在低生物量微生物组研究中预防和报告污染｜Nature Microbiology指南" /&gt;&lt;p&gt;我们实验室经常处理低微生物生物量样本（如宿主相关的呼吸道，阴道等微生物组，或是环境相关的沙子，冻土等微生物组），最近看到Nature Microbiology发表了一篇关于低微生物生物量样本污染的指南。&lt;/p&gt;
&lt;img src=&#34;images/title.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;发布日期：2025年6月20日
原文：&lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41564-025-02035-2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41564-025-02035-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;众多重要环境中微生物生物量水平较低，包括某些人体组织、大气环境、植物种子、处理后的饮用水、超干旱土壤以及深层地下环境，部分环境甚至完全不存在常驻微生物群落。这些低微生物生物量环境对基于DNA的标准测序方法提出了独特挑战——当检测工作接近技术极限时，外部污染源的干扰必然成为关键问题。同样地，低生物量样本更容易受到交叉污染的严重影响，适用于高生物量样本的操作流程若直接应用于低微生物生物量样本，很可能导致误导性结果。本共识声明系统阐述了降低污染与交叉污染的应对策略，重点关注标记基因和宏基因组分析领域。我们同时制定了污染物信息报告与去除流程的最低标准规范。从样本采集处理到数据分析报告，研究全流程各环节都必须建立污染防控与识别机制。我们强烈建议研究者在设计、实施和报告微生物组研究（特别是低生物量系统研究）时采纳这些建议方案。&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;过去二十年，随着非培养方法的普及，微生物组研究迅猛发展。标记基因测序和宏基因组测序已成为探索细菌、古菌、真菌、原生生物及病毒多样性的主流手段。尽管学界已就微生物组研究的最佳实践达成诸多共识，但这些建议主要基于高生物量样本（如表层土壤、污水和人类粪便）的研究经验。此类样本中微生物DNA含量较高，目标信号远强于污染噪声，不易产生假阳性结果。&lt;/p&gt;
&lt;p&gt;然而，许多系统的微生物生物量极低，接近常规DNA测序的检测极限（图1）。由于测序数据的比例特性，微量污染物即可严重影响研究结果，这在低生物量系统研究中尤为突出。这类系统包括：大气、保存不佳的古样本、深层地下环境、超干旱土壤、永久冻土、饮用水、金属表面、岩石、高盐卤水、雪和冰芯等。&lt;/p&gt;
&lt;p&gt;某些宿主相关系统（如人类呼吸道、母乳、胎儿组织、血液，以及植物种子、部分动物肠道等）虽含大量宿主DNA，但微生物DNA含量极低。更有研究报道，人类胎盘、特定动物肠道及极端环境中甚至完全检测不到常驻微生物。&lt;/p&gt;
&lt;img src=&#34;images/fig1.png&#34; title=&#34;&#34;/&gt;
&lt;blockquote&gt;
&lt;p&gt;图 1 | 宿主、自然环境和人工环境系统中原核生物（细菌和古菌）细胞的典型数量（对数尺度）。估算值采用不依赖培养的方法（主要为直接细胞计数）获得，但我们注意到这些是平均近似值，并且从特定环境中采集的样本之间的细胞数量可能存在相当大的差异。细胞数量/计数来自已发表的文献，并根据通常用于 DNA 提取的样本量（体积或重量）进行了调整。详情请参阅补充表 1。图中不同颜色的点表示环境的一般类别。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;研究低微生物生物量环境需要严格把控样本采集、实验操作和数据分析各环节，以降低并识别污染物。污染物来源广泛（如人体、采样设备、试剂耗材、实验室环境），可出现在采样、储存、DNA提取、测序等任何阶段。另一个突出问题是样本间交叉污染（如孔间DNA渗漏，图2）。&lt;/p&gt;
&lt;p&gt;虽然已有多种生物信息学去污染方法，但难以准确区分真实信号与污染噪声，尤其对严重污染的测序数据。尽管已有研究提出污染防控指南，但污染问题依然存在，且对照实验的使用率十年未增。这导致学界对部分微生物组研究（特别是低生物量系统研究）的可靠性存疑。操作不当轻则影响研究质量与结果可比性，重则导致错误结论——污染可能扭曲生态与进化特征、造成病原体暴露途径误判，或导致微生物存在的假阳性判定。例如关于&amp;quot;胎盘微生物组&amp;quot;的争议，促使人们重视污染问题与最佳实践。类似争议也存在于人类血液、脑组织、肿瘤组织，以及深层地下环境、高层大气等系统的研究中。&lt;/p&gt;
&lt;p&gt;本文提出一套污染最小化方案及报告标准（经微生物组领域专家共识制定）。这些建议适用于所有微生物组研究（尤其低生物量系统、病原体追踪等易受污染影响的领域），虽以标记基因（如16S rRNA测序）和宏基因组测序为重点，但同样适用于宏转录组、DNA稳定同位素探针、qPCR和培养等方法。遵循这些建议将提升研究质量，有效规避低生物量系统研究中的常见问题。尽管无法完全消除污染，但通过系统防控可将其影响降至最低。&lt;/p&gt;
&lt;img src=&#34;images/fig2.png&#34; title=&#34;&#34;/&gt;
&lt;blockquote&gt;
&lt;p&gt;图 2 | 概念图说明了微生物组研究三个步骤中污染和交叉污染的发生方式，并提出了缓解控制措施。目标样本（红色光滑形状表示）可能被外部污染物（灰色阴影尖锐形状表示）污染。这些外部污染物可能是来自采样群落以外来源的细胞或 DNA（例如，实验室试剂、采样设备）。此外，目标样本也可能受到交叉污染的影响，在采样、实验室处理和/或通过“标签切换”（例如，当条形码读取被错误分配给错误的样本时会发生这种情况）过程中，细胞或 DNA 被无意地与其他样本（棕色阴影光滑形状表示）交换。此外，污染物和交叉污染物会在整个工作流程中累积。准备，制备。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;低生物量系统的采样策略&#34;&gt;低生物量系统的采样策略&lt;/h2&gt;
&lt;p&gt;污染可能发生在从采样到测序的任何环节（图2）。采样阶段的主要污染源包括操作人员、采样设备及周边环境（如患者血液样本接触皮肤，或沉积物样本混入上层水体）。由于大多数DNA检测方法的非特异性，采样过程中引入的微生物DNA很难与目标样本DNA区分。因此，建议采用污染防控型采样设计，以最大限度减少并识别污染。&lt;/p&gt;
&lt;p&gt;采样时的污染防控措施需根据具体系统调整，但以下核心原则普遍适用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全面评估污染源：从原位环境到采样容器，识别样本可能接触的所有污染源，并在采样前后采取防控措施。&lt;/li&gt;
&lt;li&gt;采样前准备：
&lt;ul&gt;
&lt;li&gt;确保采样试剂（如保存液）无DNA污染&lt;/li&gt;
&lt;li&gt;通过预实验优化流程并发现问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;采样过程控制：
&lt;ul&gt;
&lt;li&gt;实时监控样本接触的物体和环境&lt;/li&gt;
&lt;li&gt;采用去污染措施或物理隔离阻断污染&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;人员培训：对采样人员进行标准化操作培训，确保流程规范执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需特别注意：初始样本的微生物生物量越低，污染对最终测序数据的比例影响越大。建议尽可能采取以下措施（参见表1）：&lt;/p&gt;
&lt;img src=&#34;images/table1.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;污染源去污染措施&#34;&gt;污染源去污染措施&lt;/h3&gt;
&lt;p&gt;所有采样设备、工具、容器及手套均需进行去污染处理。首选一次性无DNA耗材（如拭子与采集管），若需重复使用则须严格消毒：先用80%乙醇灭活污染微生物，再以核酸降解溶液清除残留DNA，这对连续使用同一设备的场景尤为重要。手套需同等处理且在采样前避免接触任何物品。用于采集或储存样本的塑料/玻璃器皿应经过高压灭菌或紫外辐照预处理，并保持密封至采样时刻。需注意无菌状态不等同于无DNA残留——即便活细胞已被清除，游离DNA仍可能存留于处理后的表面。因此建议在安全可行条件下，采用次氯酸钠、UV-C辐照、过氧化氢、环氧乙烷气体或商用DNA清除剂进行深度处理。&lt;/p&gt;
&lt;h3 id=&#34;个人防护装备应用规范&#34;&gt;个人防护装备应用规范&lt;/h3&gt;
&lt;p&gt;采样操作应遵循最小接触原则。操作人员需根据环境穿戴防护装备（手套、护目镜、防护服/洁净服及鞋套等），以隔绝呼吸气溶胶、衣物皮屑等人体污染源。航天洁净室与古DNA实验室的防护标准具有示范价值：前者要求全覆盖式防护，后者采用口罩、防护面罩及三层可更换手套的配置。尽管极端场景才需如此严密的防护，但常规研究中适度使用PPE仍是经济高效降低人源污染的关键措施。&lt;/p&gt;
&lt;h3 id=&#34;污染源对照样本采集&#34;&gt;污染源对照样本采集&lt;/h3&gt;
&lt;p&gt;设置采样对照对识别污染来源、评估防控效果及数据校正至关重要。对照类型包括空采集管、环境空气拭子、PPE表面拭子、操作接触面拭子及保存液等分试样等。涉及钻探或切割操作的研究常将工作流体作为阴性对照，部分实验还通过示踪染料标记流体污染。例如胎儿胎粪研究通过采集消毒后产妇皮肤拭子与手术室空气拭子，证实胎粪微生物组与阴性对照无差异。建议每4个样本至少设置1个对照，且所有对照需与实验样本同步经历全流程处理，以便结合DNA提取与建库阶段的阴性对照精准追溯污染环节。所有对照信息均需完整记录并报告（参见表2与框1）。&lt;/p&gt;
&lt;img src=&#34;images/table2.png&#34; title=&#34;&#34;/&gt;
&lt;h2 id=&#34;实验室污染防控与识别规范&#34;&gt;实验室污染防控与识别规范&lt;/h2&gt;
&lt;p&gt;实验室操作流程（包括DNA提取、PCR扩增、文库构建和测序）既可能引入污染物，也会放大其影响。常见污染源包括试剂耗材（如提取试剂盒、保存液、离心管乃至纯化水）中可扩增的游离DNA或顽固菌种（如Ralstonia、Pseudomonas）残留，以及操作人员、实验室环境或其他样本的交叉污染。研究表明，实验室污染特征会随月份、季节及操作者变化，而样本管间DNA气溶胶扩散或&amp;quot;标签跳跃&amp;quot;现象更会导致数据误判。因此，必须通过实验室分区设计、规范操作和系统对照来防控污染。以下为关键措施（参见表1）：&lt;/p&gt;
&lt;h3 id=&#34;实验室空间管理&#34;&gt;实验室空间管理&lt;/h3&gt;
&lt;p&gt;分子实验区应严格划分前处理区（样本制备/DNA提取）与后处理区（PCR/文库构建），并建立单向工作流。所有操作需在生物安全柜内完成，使用专用移液器与滤芯吸头。实验前后需用DNA降解溶液彻底消毒台面，并辅以UV-C辐照。人员须穿戴专用PPE，不同区域设备不得混用，且一次性防护装备应按&amp;quot;洁净区→污染区&amp;quot;单向穿行。定期清洁地面及水平面以控制灰尘污染。&lt;/p&gt;
&lt;h3 id=&#34;试剂质量控制&#34;&gt;试剂质量控制&lt;/h3&gt;
&lt;p&gt;优先选用经认证的无DNA试剂，但使用前仍需通过qPCR或测序验证其洁净度。建议将大宗试剂分装为小份，每批次单独设立阴性对照以监控污染。塑料耗材使用前需UV-C灭菌，样本管进入工作区前应彻底表面消毒。若外包测序环节，需确认服务商具备低生物量样本处理经验，并建议进行预实验。&lt;/p&gt;
&lt;h3 id=&#34;对照系统设置&#34;&gt;对照系统设置&lt;/h3&gt;
&lt;p&gt;每个实验批次需同步设置多类型对照：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采样对照（环境空白、试剂空白等）&lt;/li&gt;
&lt;li&gt;过程对照（无样本DNA提取、无模板PCR等）&lt;/li&gt;
&lt;li&gt;阳性对照（梯度稀释的模拟群落标准品）&lt;/li&gt;
&lt;li&gt;交叉污染监控对照（如掺入特异性寡核苷酸）&lt;br&gt;
所有对照应与样本同步进行全流程处理并测序，即使阴性对照PCR产物不可见也需测序验证。建议每批次试剂均设立独立对照，因不同批次的污染物谱可能存在差异。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;样本处理策略&#34;&gt;样本处理策略&lt;/h3&gt;
&lt;p&gt;高低生物量样本应分开处理，96孔板布局时需注意中心孔位更易发生交叉污染。推荐使用双索引纠错条形码，必要时可采用亚硫酸盐转化等化学标记技术，以区分预处理后引入的污染DNA。单管操作虽可降低交叉污染风险，但需权衡通量需求。&lt;/p&gt;
&lt;h2 id=&#34;检测并潜在去除序列数据中的污染物&#34;&gt;检测并潜在去除序列数据中的污染物&lt;/h2&gt;
&lt;p&gt;在分析微生物组测序数据时，污染识别与清除是至关重要的环节，尤其对于低生物量样本。即便采用最严格的采样和实验流程，污染风险仍无法完全消除。通过系统比对阳性/阴性对照与样本中的序列、分类单元或基因，结合专业去污染软件（表3），可评估污染程度并进行针对性处理。但需注意，宏基因组数据因其复杂性较标记基因更难净化，且去污染过程可能导致信息失真。当信噪比过低时，建议直接弃用受污染数据，但保留原始记录（参见表2与框1）以追溯污染来源。&lt;/p&gt;
&lt;img src=&#34;images/table3.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;分析测序对照并检查意外分类单元&#34;&gt;分析测序对照并检查意外分类单元&lt;/h3&gt;
&lt;p&gt;质量控制阶段应重点分析三类信息：阴性对照中的非目标DNA、阳性对照分类单元在样本中的分布、以及污染物在读段中的占比。标记基因数据可通过比对ASVs与常见污染物数据库进行净化，而宏基因组数据则需将样本读段映射至对照组的MAGs。需警惕那些生态学上不合理的分类单元（如南极高空出现人体共生菌、脑组织中发现光合蓝藻等），这些异常信号往往提示污染存在。&lt;/p&gt;
&lt;h3 id=&#34;考虑使用净化软件但要注意其局限性&#34;&gt;考虑使用净化软件，但要注意其局限性&lt;/h3&gt;
&lt;p&gt;去污染软件虽能辅助识别外源污染物（如decontam基于检出频率或丰度特征），但对交叉污染识别有限（SCRuB等工具例外）。使用时应考虑其假设前提与适用场景，注意假阳性与假阴性风险。宏基因组分析更需谨慎：即便设置阴性对照，低覆盖度污染物仍可能残留，且近缘物种序列难以区分。建议结合qPCR定量、细胞计数等生物量指标综合判断，同时认识到基于短读长组装的MAGs只能反映部分读段信息这一技术局限。&lt;/p&gt;
&lt;h3 id=&#34;防胜于治污染防控优先原则&#34;&gt;防胜于治：污染防控优先原则&lt;/h3&gt;
&lt;p&gt;研究者应在开展大规模采样与测序前，投入充分精力优化污染防控方案。尽管微量污染难以避免，但系统性污染可被有效控制——已有研究成功获取了极低生物量生态系统的高质量数据，甚至证实了某些环境不存在常驻微生物。这些成果均依赖于全流程污染防控体系的建立，包括无污染采样流程开发、试剂与水质验证，以及测序数据的严谨分析。通过多维度对照实验，可追溯污染来源（如采样操作、试剂或人员），并据此迭代优化实验方案。&lt;/p&gt;
&lt;p&gt;对于已存在显著污染的数据集，事后去污染措施往往收效有限。例如近期一项全球大气微生物组研究中，近半数序列（包括已知试剂污染物如假单胞菌属）被迫剔除，导致群落组成与驱动因素的分析可靠性存疑。任何去污染算法均非完美， retrospective处理可能导致假阳性/假阴性结果。当标记基因或宏基因组数据需剔除大量序列时，应重新评估样本数据的有效性；若污染问题持续且严重，则需质疑整个数据集的可靠性。在关键研究中，跨实验室重复验证仍是确认结果可信度的金标准。&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;基于DNA技术的微生物组研究中，特别是在处理低生物量样本时，必须预设交叉污染难以完全避免。为此，研究者应当双管齐下：一方面通过标准化操作最大限度降低污染风险，另一方面设置系统对照以准确评估污染性质与程度。尤为关键的是，必须完整报告三项核心信息：污染防控的具体措施、检出污染物的特征、以及后续分析中对可疑污染数据的处理方案。这种全流程透明化记录将显著提升研究结果的可信度。需要说明的是，本文提出的建议并非强制性操作清单，而是旨在推动学界更系统地审视污染问题。我们相信，通过强化对污染和交叉污染问题的认知与管理，不仅能够提升微生物组研究的整体质量，更有助于解决既往研究中因污染导致的可重复性争议。最终目标是为微生物组科学建立更可靠的方法学基础，使研究成果能够经得起时间和实践的检验。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>基因组同线性（synteny）分析和可视化</title>
        <link>https://jb-cao.github.io/Cao-blog/p/synteny/</link>
        <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/synteny/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/synteny/images/emales.png" alt="Featured image of post 基因组同线性（synteny）分析和可视化" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;在基因组学研究中，比较基因组学（Comparative Genomics）是一项核心方法，它通过对不同物种或同一物种不同个体的基因组进行比较，揭示基因的功能、结构和进化历史。在这一领域中，“同线性（synteny）”和“共线性（collinearity）”是关键概念，它们在理解基因组结构的保守性和演化过程中起着重要作用。&lt;/p&gt;
&lt;img src=&#34;images/intro.jpg&#34; title=&#34;&#34;/&gt;
&lt;p&gt;在基因组比较中，“同线性”和“共线性”常被用来描述不同物种或同一物种不同个体之间基因组结构的保守性。同线性指的是在不同基因组中，一组同源基因位于各自染色体上的相似位置，而不考虑这些基因的排列顺序。共线性则进一步要求这些同源基因在染色体上的排列顺序也保持一致。简而言之，共线性是同线性的一种更严格形式。&lt;/p&gt;
&lt;p&gt;根据同线性区域的大小和复杂性，研究人员将其分为“宏同线性（macrosynteny）”和“微同线性（microsynteny）”。宏同线性通常指染色体级别的大尺度保守区域，适用于研究远缘物种之间的基因组结构演化；而微同线性则关注较小的基因簇或基因对之间的保守性，常用于近缘物种或亚种之间的精细比较。&lt;/p&gt;
&lt;p&gt;同线性分析在比较基因组学中具有广泛的应用价值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;揭示基因组进化历史&lt;/strong&gt;：通过识别同线性区域，可以推断物种间的基因组重排事件，如倒位、易位、重复和缺失等，从而重建基因组的进化轨迹。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;识别同源基因&lt;/strong&gt;：同线性分析有助于区分直系同源基因（orthologs）和旁系同源基因（paralogs），这对于功能基因的注释和研究具有重要意义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;研究全基因组复制事件&lt;/strong&gt;：在植物等多倍体物种中，同线性分析可用于检测和分析全基因组复制（WGD）事件，理解基因组扩张与物种多样性的关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;辅助基因功能预测&lt;/strong&gt;：通过比较模型生物与目标物种之间的同线性区域，可以推测未知基因的功能，尤其在缺乏实验验证的情况下尤为重要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;评估基因组组装质量&lt;/strong&gt;：同线性分析可以作为评估新组装基因组质量的工具，检测可能的组装错误或缺失区域。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着高通量测序技术的发展，许多生物信息学工具被开发用于同线性分析和可视化，搜索一下就有一大堆，尤其是可视化工具，所以这里只简单提一下我知道的各种工具，大家可以根据喜好自行选择尝试使用。&lt;/p&gt;
&lt;h2 id=&#34;分析软件&#34;&gt;分析软件&lt;/h2&gt;
&lt;p&gt;同线性分析涉及到全基因组比对，是一个计算密集型的过程。尽管各种软件在输入输出格式上有所差异，但它们的共同目标是识别基因组之间的同线性区块（syntenic blocks），即在不同基因组中保守的基因排列区域。&lt;/p&gt;
&lt;h3 id=&#34;mummer&#34;&gt;MUMmer&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mummer4/mummer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mummer4/mummer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;br&gt;
MUMmer 是一个用于快速比对大型序列的开源软件包。它能够高效地比对整个基因组、基因组组装结果以及部分（草图）基因组序列。MUMmer 的最新版本（4.x）引入了新的后缀树算法，进一步提高了比对效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;
MUMmer 可在其 GitHub 页面上获取&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar -zxvf mummer-4.0.0beta2.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; mummer-4.0.0beta2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/data/tengwenkai/software/MUMmer4.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者conda安装：&lt;code&gt;conda install bioconda::mummer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单使用&lt;/strong&gt;&lt;br&gt;
MUMmer 提供了多个实用工具，其中 &lt;code&gt;nucmer&lt;/code&gt; 是最常用的比对脚本，用于标准的 DNA 序列比对。例如，使用 &lt;code&gt;nucmer&lt;/code&gt; 对两个基因组进行比对后，可以使用 &lt;code&gt;show-coords&lt;/code&gt; 工具查看比对坐标。此外，&lt;code&gt;promer&lt;/code&gt; 工具可以基于输入序列的六帧翻译生成比对结果，适用于蛋白质序列的比对。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nucmer &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;lt;Reference&amp;gt; &amp;lt;Query&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Reference：参考基因组，含有多条序列的FASTA文件名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Query：要匹配的基因组，含有多条序列的FASTA文件名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --mum, --mumreference&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;默认&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, --maxmatch：与mumer相同
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -b, --breaklen：一个比对尝试延伸的最大距离，默认为200
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -c, --mincluster：一个匹配聚类簇的最短长度，默认为65
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -D, --diagdiff：一个聚类中两个邻接匹配的最大对角差分，默认5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -d, --diagfactor一个聚类中两个邻接匹配的最大对角差分与gap长度的比值，默认为0.12
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --noextend：不执行聚类簇延长步骤，默认关闭
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -f, --forward：只使用查询序列的正向链
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -g, --maxgap：一个聚类中两个邻接匹配的最大gap长度，默认为90
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -l, --minmatch：一个匹配的最短长度，默认为20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -L, --minalign：一个聚类延伸后比对的最短长度，默认为0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -r, --reverse：只使用查询序列的反向互补链
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --nosimplify：不简化比对，当使用序列与自身比对来寻找重复时可以选此选项，默认关闭
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -p, --prefix：输出结果delta文件的前缀，默认为out
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --sam-short：保存SAM短格式到文件路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    --sam-long：保存SAM长格式到文件路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -t, --threads：程序运行使用的核数
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用MUMmer进行局部比对（适合低相似度基因组）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nucmer --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;out genome1.fna genome2.fna 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;delta-filter -q -r out.delta &amp;gt; out.filtered.delta  &lt;span class=&#34;c1&#34;&gt;# 保留唯一最佳比对&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;show-coords -rcl out.filtered.delta &amp;gt; out.coords   &lt;span class=&#34;c1&#34;&gt;# 输出坐标&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;MUMmer 的高效性能使其成为进行全基因组比对和同线性分析的有力工具，尤其适用于处理大型基因组数据。&lt;/p&gt;
&lt;h3 id=&#34;mcscanx&#34;&gt;MCScanX&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/wyp1125/MCScanX&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/wyp1125/MCScanX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;br&gt;
MCScanX 是一个用于检测基因组间同线性和共线性关系的工具包。它实现了改进的 MCScan 算法，能够识别同线性区块，并提供多种可视化和分析工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;
MCScanX 可在其 GitHub 页面上获取，下载源代码并按照说明进行编译安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip MCscanX.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; MCScanX
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;简单使用&lt;/strong&gt;&lt;br&gt;
MCScanX 的使用需要两个主要输入文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BLASTP 比对结果文件（&lt;code&gt;xyz.blast&lt;/code&gt;）&lt;/strong&gt;&lt;br&gt;
该文件为标准的 BLASTP 输出，格式为 m8。每行表示一对同源基因的比对结果，包含以下字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gene1   gene2   identity   alignment_length   mismatches   gap_opens   q_start   q_end   s_start   s_end   e_value   bit_score
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AT1G50920   AT1G50920    100.00  671     0       0       1       671     1       671     0.0     1316
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建议使用以下命令生成该文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;blastall -i query_file -d database -p blastp -e 1e-10 -b 5 -v 5 -m 8 -o xyz.blast
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中，&lt;code&gt;-b 5 -v 5&lt;/code&gt; 参数限制每个基因的比对结果为前 5 个，以提高分析的准确性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基因注释文件（&lt;code&gt;xyz.gff&lt;/code&gt;）&lt;/strong&gt;&lt;br&gt;
该文件包含基因在染色体上的位置信息，格式为制表符分隔的四列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chromosome   gene_id   start_position   end_position
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;at1   AT1G01010   3631   5899
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;at1   AT1G01020   5928   8737
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chromosome&lt;/code&gt; 字段应使用两字母的物种缩写加染色体编号，例如 Arabidopsis thaliana 的第二染色体应为 &lt;code&gt;at2&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;每个基因只能出现一次，重复的基因会导致错误。&lt;/li&gt;
&lt;li&gt;该文件可通过解析 GFF3 文件生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在进行多个基因组比较时，可将所有物种的 BLAST 输出合并为一个 &lt;code&gt;xyz.blast&lt;/code&gt; 文件，所有基因注释信息合并为一个 &lt;code&gt;xyz.gff&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt;xyz.blast&lt;/code&gt; 和 &lt;code&gt;xyz.gff&lt;/code&gt; 文件放在同一目录下，使用以下命令运行 MCScanX：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./MCScanX xyz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中，&lt;code&gt;xyz&lt;/code&gt; 为输入文件的前缀，MCScanX 将自动识别并处理对应的 &lt;code&gt;.blast&lt;/code&gt; 和 &lt;code&gt;.gff&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;输出结果解析&lt;/p&gt;
&lt;p&gt;运行完成后，MCScanX 会生成以下主要输出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;xyz.collinearity&lt;/code&gt; 文件&lt;/strong&gt;&lt;br&gt;
该文本文件包含识别到的同线性区块信息，每个区块以 &lt;code&gt;## Alignment&lt;/code&gt; 开头，包含区块编号、得分、e-value、基因对数量等信息。示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Alignment 0: score=9171.0 e_value=0 N=187 at1&amp;amp;at1 plus
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0-0: AT1G17240 AT1G72300 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0-1: AT1G17290 AT1G72330 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0-186: AT1G22340 AT1G78270 3e-174
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;每行表示一对共线性基因对，最后一列为比对的 e-value。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;xyz.html&lt;/code&gt; 目录&lt;/strong&gt;&lt;br&gt;
该目录包含多个 HTML 文件，用于可视化同线性区块在染色体上的分布。每个 HTML 文件对应一个参考染色体，展示了该染色体上的基因及其与其他染色体的同线性关系。这些文件可通过网页浏览器查看，便于直观分析。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，MCScanX 提供了多种可视化工具，如 dot plot、circle plot 等，便于用户直观地观察基因组间的同线性关系。&lt;/p&gt;
&lt;h3 id=&#34;mugsy&#34;&gt;Mugsy&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/kloetzl/mugsy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/kloetzl/mugsy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;br&gt;
Mugsy 是一个用于多个完整基因组比对的工具，特别适用于比对密切相关的基因组。它不需要参考基因组，能够处理混合的草图和完整基因组数据，识别包括重复、重排和大规模序列增减等在内的遗传变异。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;
Mugsy 可在其官方网站上获取&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://sourceforge.net/projects/mugsy/files/latest/download
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar xvzf download
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#将Mugsy安装路径加到PATH里&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/picb/evolgen/users/gushanshan/software/mugsy/mugsy_1.2.2:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者conda安装：&lt;code&gt;conda install bioconda::mugsy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单使用&lt;/strong&gt;&lt;br&gt;
Mugsy 的输入为多组基因组序列（FASTA 格式）。文件要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个或多个FASTA文件&lt;/li&gt;
&lt;li&gt;每个文件应该包括单个物种的所有序列&lt;/li&gt;
&lt;li&gt;FASTA的header中不能包括：或-&lt;/li&gt;
&lt;li&gt;模糊字符将被转换成N&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用示例命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./mugsy --directory output_dir genome1.fasta genome2.fasta genome3.fasta
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行后，Mugsy 会在指定的输出目录中生成多个文件，包括比对结果和同线性区块信息。这些结果可用于进一步的比较基因组分析。&lt;/p&gt;
&lt;h2 id=&#34;可视化软件&#34;&gt;可视化软件&lt;/h2&gt;
&lt;p&gt;可以用来画synteny图的软件就太多了，各种编程语言都有，还有很多在线网站，风格各异，这里推荐一些，可以根据demo效果或者整理input格式的难度挑选一下：&lt;/p&gt;
&lt;h3 id=&#34;r&#34;&gt;R&lt;/h3&gt;
&lt;p&gt;我用来做可视化最多的工具还是R语言，所以优先介绍几个R包了：&lt;/p&gt;
&lt;h4 id=&#34;gggenomes&#34;&gt;gggenomes&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://thackl.github.io/gggenomes/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://thackl.github.io/gggenomes/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gggenomes是用于比较基因组学的多功能图形包。基于ggplot的语法，非常好上手用，主页提供的demo代码也非常好看：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gggenomes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# to inspect the example data shipped with gggenomes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gggenomes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;gggenomes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;genes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;emale_genes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seqs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;emale_seqs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;links&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;emale_ava&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;feats&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emale_tirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ngaros&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emale_ngaros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emale_gc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;add_sublinks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emale_prot_ava&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# synchronize genome directions based on links&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_feat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_link&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_bin_label&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_gene&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_gene_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nudge_y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;check_overlap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_feat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;feats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ngaros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_feat_note&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Ngaro-transposon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;feats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ngaros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;nudge_y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjust&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;geom_wiggle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linetype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;GC-content&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;feats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;lavenderblush4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;position_nudge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;scale_fill_brewer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Genes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;palette&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dark2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;na.value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cornsilk3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;images/emales.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;syntenyplotter&#34;&gt;syntenyPlotteR&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Farre-lab/syntenyPlotteR&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Farre-lab/syntenyPlotteR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个包也是用ggplot画的，但是不是ggplot语法，draw.linear函数输出包含线性样式对齐的图像文件。默认情况下，该函数将文件保存到临时目录，可以使用目录参数（即Directory =&amp;ldquo;path/to/to/Directory&amp;rdquo;）覆盖。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syntenyPlotteR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;old_wd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;setwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;syntenyPlotteR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# example data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;draw.linear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;example_linear&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;example_lengths.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;example_alignment_1.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;example_alignment_2.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;example_alignment_3.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;setwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;old_wd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;images/syntenyPlotteR.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;macrosyntr&#34;&gt;macrosyntR&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SamiLhll/macrosyntR&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/SamiLhll/macrosyntR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一个用于在全基因组范围内评估同线性保守性的R软件包。它通过读取正交同源基因表和BED格式的基因组注释文件，自动识别显著保守的连锁群，并基于网络贪婪算法将这些连锁群排序展示在牛津网格图或弦图中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;准备输入数据&lt;/strong&gt;&lt;br&gt;
要开始比较物种，您需要准备以下两类文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;正交同源基因表（两列格式）&lt;br&gt;
• 包含待比较物种之间的正交同源基因对（每行一对）。&lt;br&gt;
• 可通过工具生成，例如：&lt;br&gt;
◦ &lt;code&gt;rbhxpress&lt;/code&gt; 的输出结果&lt;br&gt;
◦ &lt;code&gt;OrthoFinder&lt;/code&gt; 的结果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BED 格式的基因组注释文件&lt;br&gt;
• 列出所有物种的正交同源基因的基因组坐标和序列名称。&lt;br&gt;
• 关键要求：&lt;br&gt;
◦ BED 文件中的基因名称必须与正交同源基因表（文件1）的列名匹配。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;macrosyntR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Load table of orthologs and integrate with genomic coordinates :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orthologs_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Bflo_vs_Pech.tab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                     &lt;span class=&#34;n&#34;&gt;bedfiles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Bflo.bed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                     &lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Pech.bed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Draw an oxford grid :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_oxford_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;sp1_label&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B.floridae&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;sp2_label&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;P.echinospica&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Automatically reorder the Oxford grid and color the detected clusters (communities):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_oxford_grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;sp1_label&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B.floridae&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;sp2_label&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;P.echinospica&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;reorder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;color_by&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;clust&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot the significant linkage groups :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_macrosynteny&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compute_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Call the reordering function, test significance and plot it :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_reordered&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;reorder_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_macrosynteny&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compute_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_reordered&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_macrosynteny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;images/example.png&#34; title=&#34;&#34;/&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# load data &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_orthologs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orthologs_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Single_copy_orthologs.tsv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                     &lt;span class=&#34;n&#34;&gt;bedfiles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Bflo.bed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                  &lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Pech.bed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                  &lt;span class=&#34;nf&#34;&gt;system.file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Pyes.bed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;macrosyntR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Change the chromosome names to keep only numbers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp1.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp1.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;BFL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp2.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp2.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PEC&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp3.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;levels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp3.Chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;chr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot an automatically ordered chord diagram colored by the linkage groups :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;plot_chord_diagram&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;n&#34;&gt;species_labels&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;B. flo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;P. ech&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;P. yes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;n&#34;&gt;color_by&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;LGs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legend.position&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The linkage groups were automatically computed but you can also get them as a table using :&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_linkage_groups&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compute_linkage_groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_orthologs_with_3_sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;images/Chord_diagram_3species.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;
&lt;h4 id=&#34;plotsr&#34;&gt;plotsr&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/schneebergerlab/plotsr&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/schneebergerlab/plotsr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Plotsr使用了多个染色体级组件之间的基因组结构注释来产生多个基因组之间同义和结构重排的高质量可视化：&lt;/p&gt;
&lt;img src=&#34;images/plotsr.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;示例里面用了minimap2对齐基因组，并使用SamTools索引对齐BAM文件，然后用Syri在基因组之间找到同线性和结构重排，最后用Plotsr做可视化。&lt;/p&gt;
&lt;h4 id=&#34;jcvi&#34;&gt;JCVI&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/tanghaibao/jcvi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/tanghaibao/jcvi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JCVI 库是一个基于 Python 的多功能工具库，发在了imeta上面，其模块化设计提供了一系列高效工具，涵盖以下核心功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;格式解析与数据操作&lt;/li&gt;
&lt;li&gt;可视化与图形生成&lt;/li&gt;
&lt;li&gt;基因组算法支持&lt;/li&gt;
&lt;li&gt;开发与维护理念&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们关注其synteny图的可视化：&lt;/p&gt;
&lt;img src=&#34;images/jcvi.jpg&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;pygenomeviz&#34;&gt;pyGenomeViz&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/moshi4/pyGenomeViz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/moshi4/pyGenomeViz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pyGenomeViz 是一款基于 matplotlib 开发的 Python 基因组可视化工具包，专注于 比较基因组学 分析。该工具旨在以简洁美观的方式绘制 多基因组间的特征比对 和 序列相似性关联。&lt;/p&gt;
&lt;p&gt;• 支持输入格式：Genbank / GFF 格式文件&lt;br&gt;
• 输出格式灵活：可保存为 JPG、PNG、SVG、PDF 或 HTML&lt;br&gt;
• 交互式可视化：在 Jupyter Notebook 中动态调整与查看&lt;br&gt;
• 自动化分析集成：可嵌入基因组分析脚本或工作流，实现批量绘图&lt;br&gt;
（适用于 基因组共线性分析、基因簇比较 和 进化研究 等场景。）&lt;/p&gt;
&lt;p&gt;这个工具主页的介绍也非常详细，可以一步一步学习&lt;/p&gt;
&lt;img src=&#34;images/pygenomeviz_gallery.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;perl&#34;&gt;Perl&lt;/h3&gt;
&lt;h4 id=&#34;circos&#34;&gt;circos&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://circos.ca/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://circos.ca/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鼎鼎大名的circos，这个值得有空单独介绍了，能画出来的图很夸张。&lt;/p&gt;
&lt;img src=&#34;images/circos-example.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;网上的教程也非常多，可以跟着官方教程仔细学一遍：&lt;a class=&#34;link&#34; href=&#34;https://circos.ca/support/getting_started/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://circos.ca/support/getting_started/&lt;/a&gt;。
我们可以通过修改配置文件一步一步的画出自己想要的图。&lt;/p&gt;
&lt;img src=&#34;images/circos-quick-start.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;genomesyn&#34;&gt;GenomeSyn&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jmsong2/GenomeSyn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jmsong2/GenomeSyn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个软件内置了MUMmer帮忙跑分析，属于是一键出图了，我们也可以自己跑MUMmer筛选位点，出的图效果也不错，但主页说的在线服务已经没有了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GenomeSyn -t &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; -g1 rice_MH63.fa -g2 rice_ZS97.fa -cf1 rice_MH63vsZS97.delta.filter.coords 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GenomeSyn -t &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; -g1 ../data/rice_MH63.fa -g2 ../data/rice_ZS97.fa -cf1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	../data/rice_MH63vsZS97.delta.filter.coords
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;images/GenomeSyn.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;ngenomesyn&#34;&gt;NGenomeSyn&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/hewm2008/NGenomeSyn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/hewm2008/NGenomeSyn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NGenomeSyn是于基于多个基因组共线性关系的可视工具，该软件可以添加多个基因组一起进行分析绘图（可超过12个），各基因组顺序可以自由定制以及添加特殊属性。绘图效果规律鲜明，结果易于呈现出各类共线性，大尺度变异，细部标识特殊基因区域等。&lt;/p&gt;
&lt;p&gt;这里放两个展示其特点的例子：&lt;/p&gt;
&lt;img src=&#34;images/PMID34990066Fig2.png&#34; title=&#34;&#34;/&gt;
&lt;img src=&#34;images/realityData.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;在线网站&#34;&gt;在线网站&lt;/h3&gt;
&lt;p&gt;能实现这类可视化的在线网站也有非常多，有些是生物公司的云平台需要注册一下，我这里提几个免费且无需注册的网站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pyGenomeViz：&lt;a class=&#34;link&#34; href=&#34;https://pygenomeviz.streamlit.app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pygenomeviz.streamlit.app/&lt;/a&gt; ，简单功能实现&lt;/li&gt;
&lt;li&gt;chiplot：&lt;a class=&#34;link&#34; href=&#34;https://www.chiplot.online/McScanX_synteny_plot.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.chiplot.online/McScanX_synteny_plot.html&lt;/a&gt; ，国产，直接接上McScanX结果可视化&lt;/li&gt;
&lt;li&gt;SynVisio：&lt;a class=&#34;link&#34; href=&#34;https://synvisio.github.io/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://synvisio.github.io/#/&lt;/a&gt; ，直接接上McScanX结果可视化，各种展示形式&lt;/li&gt;
&lt;li&gt;shinyCircos：&lt;a class=&#34;link&#34; href=&#34;https://venyao.xyz/shinyCircos/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://venyao.xyz/shinyCircos/&lt;/a&gt; ，画环形弦图的，觉得circos难用可以试试&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://thisvsthat.io/collinearity-vs-synteny&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://thisvsthat.io/collinearity-vs-synteny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dewey, C.N. (2019). Whole-Genome Alignment. In: Anisimova, M. (eds) Evolutionary Genomics. Methods in Molecular Biology, vol 1910. Humana, New York, NY. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1007/978-1-4939-9074-0_4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1007/978-1-4939-9074-0_4&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>宏基因组分箱（binning）｜4. DAS Tool优化binning结果</title>
        <link>https://jb-cao.github.io/Cao-blog/p/binning-4-das-tool-binning/</link>
        <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/binning-4-das-tool-binning/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/binning-4-das-tool-binning/images/workflow.png" alt="Featured image of post 宏基因组分箱（binning）｜4. DAS Tool优化binning结果" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;在宏基因组学研究中，准确地将组装后的基因组片段（contigs）归属到各自的微生物基因组中，是解析微生物群落功能和生态关系的关键步骤。然而，很多分箱（binning）方法在面对复杂的微生物群落时，常常难以重建出高质量的基因组，且不同工具在不同样本和生态环境中的表现差异显著。&lt;/p&gt;
&lt;p&gt;为了解决这一问题，研究人员开发了DAS Tool（Dereplication, Aggregation and Scoring Tool），这是一种自动化的方法，能够整合多个已有的分箱算法的结果，生成优化的、非冗余的高质量基因组集合。在多个复杂环境样本中，DAS Tool展示了比任何单一分箱工具更强的能力，能够恢复更多接近完整的基因组，包括一些之前未被发现的谱系。本文将介绍使用DAS Tool优化宏基因组分箱结果，提升基因组重建的质量和数量。&lt;/p&gt;
&lt;img src=&#34;images/logo.png&#34; title=&#34;&#34; width=&#34;60%&#34;/&gt;
&lt;p&gt;DAS Tool的文章于2018年发表于Nature Microbiology，软件主页：&lt;a class=&#34;link&#34; href=&#34;https://github.com/cmks/DAS_Tool&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/cmks/DAS_Tool&lt;/a&gt;，logo也很有意思。&lt;/p&gt;
&lt;h3 id=&#34;工作流程&#34;&gt;工作流程&lt;/h3&gt;
&lt;img src=&#34;images/workflow.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;&lt;strong&gt;Step 1｜整合多种分箱结果&lt;/strong&gt;&lt;br&gt;
DAS Tool 的输入包括：一个宏基因组组装（scaffolds）和来自不同 binning 工具的多个 bin 结果（每种颜色表示一个工具的输出）。这些分箱工具可能依据不同特征（如 GC 含量、k-mer 频率或丰度信息）进行聚类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2｜识别单拷贝基因并打分&lt;/strong&gt;&lt;br&gt;
DAS Tool 会在 scaffolds 上预测单拷贝标志基因（single-copy marker genes），并以此对每个 bin 进行质量打分（例如完整度和污染度），用于后续筛选。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3｜合并候选 bin 并去除冗余&lt;/strong&gt;&lt;br&gt;
来自不同工具的 bin 可能存在重叠。DAS Tool 会将这些候选 bin 进行去冗余整合，构建一个统一的候选 bin 集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4｜迭代优化与筛选&lt;/strong&gt;&lt;br&gt;
DAS Tool 通过迭代方式从所有候选 bin 中优先选择得分最高的，并在每轮迭代中更新剩余 bin 的得分（考虑重复和覆盖情况），最终输出一个非冗余、高质量的 bin 集合。&lt;/p&gt;
&lt;p&gt;这个流程的关键在于：&lt;strong&gt;充分融合多个 binning 工具的优点&lt;/strong&gt;，利用标志基因和打分机制，&lt;strong&gt;自动筛选出最优的 bin 组合&lt;/strong&gt;，有效提升基因组重建的质量和覆盖范围。&lt;/p&gt;
&lt;h3 id=&#34;效果评估&#34;&gt;效果评估&lt;/h3&gt;
&lt;h4 id=&#34;das-tool在模拟微生物群落中的表现验证&#34;&gt;DAS Tool在模拟微生物群落中的表现验证&lt;/h4&gt;
&lt;img src=&#34;images/fig2.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;为了验证 DAS Tool 的效果，研究者将其应用于 &lt;strong&gt;CAMI challenge&lt;/strong&gt; 提供的三种复杂度不同的模拟微生物群落数据集（包含 40、132 和 596 个基因组）。使用五种主流 binning 工具（ABAWACA、CONCOCT、MaxBin 2、MetaBAT、ESOM）分别预测分箱，并用 DAS Tool 进行整合优化。&lt;/p&gt;
&lt;p&gt;在高复杂度（596 个基因组）数据集中，DAS Tool 重建的高质量基因组数量（F1 分数 &amp;gt; 0.6）显著高于任何单一工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DAS Tool：&lt;/strong&gt; 共识菌株 41 个、唯一菌株 299 个&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;次优 MaxBin 2：&lt;/strong&gt; 共识菌株 23 个、唯一菌株 253 个&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ESOM：&lt;/strong&gt; 虽对唯一菌株效果尚可（173 个），但对存在菌株变异的基因组恢复能力较差（仅 6 个）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，DAS Tool 重建的基因组 F1 分数中位数也优于其它工具，尤其在处理菌株变异时展现出更强的能力。不仅在高复杂度样本中表现优越，在中低复杂度数据集上也优于单一方法。&lt;/p&gt;
&lt;h4 id=&#34;das-tool在真实环境样本中的应用&#34;&gt;DAS Tool在真实环境样本中的应用&lt;/h4&gt;
&lt;img src=&#34;images/fig3.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;Probst 等人曾从高 CO₂ 冷泉系统中构建了一个经过精细人工筛选的基因组分箱集，成为评估 DAS Tool 表现的理想样本。这些数据来自对不同滤膜（3.0 μm 与 0.2 μm）过滤后的样品进行组装，并采用三种 binning 方法 + 人工校正获得结果。&lt;/p&gt;
&lt;p&gt;研究者对原始发表的 bins 及不同 binning 工具（ABAWACA 1.0/1.07、ESOM、CONCOCT、MetaBAT、MaxBin 2）与 DAS Tool 的整合结果进行了对比评估。质量评估采用 &lt;strong&gt;CheckM&lt;/strong&gt;，高质量定义为 &lt;strong&gt;&amp;gt;90% 完整度且污染率 &amp;lt;5%&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;主要发现如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用3种工具整合的 DAS Tool&lt;/strong&gt; 已超过任一单一方法的效果，但略低于人工精修结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用7种工具整合的 DAS Tool&lt;/strong&gt; 成果优于原始发表结果：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0.2 μm 样本：&lt;/strong&gt; DAS Tool 重建 36 个近全基因组，高于原始的 32 个；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3.0 μm 样本：&lt;/strong&gt; DAS Tool 重建 38 个，高于原始的 31 个；&lt;/li&gt;
&lt;li&gt;草稿级基因组数量也全面提升。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;当适度放宽污染率阈值时，草稿基因组数量进一步增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在真实环境样本中，DAS Tool 同样展现出强大整合能力，尤其当结合更多 binning 工具时，不仅能提高高质量基因组的数量，也能有效替代部分人工精修过程。&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;h4 id=&#34;1-最简单的安装方式使用-conda&#34;&gt;1. 最简单的安装方式：使用 conda&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda config --add channels defaults
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda config --add channels bioconda
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda config --add channels conda-forge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda install -c bioconda das_tool
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但我发现conda安装好了之后也需要下载github主页的db.zip文件并解压，后续运行需指定db目录，不然默认用当前目录下的db：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 下载并解压缩DASTool.zip存档:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip DAS_Tool-1.x.x.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ./DAS_Tool-1.x.x
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Unzip SCG database:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip ./db.zip -d db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;2-手动安装需满足以下依赖项&#34;&gt;2. 手动安装（需满足以下依赖项）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;R (&amp;gt;= 3.2.3)&lt;/strong&gt;：https://www.r-project.org&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R 包&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data.table&lt;/code&gt; (&amp;gt;= 1.9.6)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magrittr&lt;/code&gt; (&amp;gt;= 2.0.1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docopt&lt;/code&gt; (&amp;gt;= 0.7.1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ruby (&amp;gt;= 2.3.1)&lt;/strong&gt;：https://www.ruby-lang.org&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pullseq (&amp;gt;= 1.0.2)&lt;/strong&gt;：https://github.com/bcthomas/pullseq&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prodigal (&amp;gt;= 2.6.3)&lt;/strong&gt;：https://github.com/hyattpd/Prodigal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coreutils（仅 macOS 需要）&lt;/strong&gt;：https://www.gnu.org/software/coreutils&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;以下三种搜索引擎之一：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DIAMOND (&amp;gt;= 0.9.14)&lt;/strong&gt;：推荐，用于大数据集：https://ab.inf.uni-tuebingen.de/software/diamond&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BLAST+ (&amp;gt;= 2.5.0)&lt;/strong&gt;：https://blast.ncbi.nlm.nih.gov/Blast.cgi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;USEARCH (&amp;gt;= 8.1)&lt;/strong&gt;：http://www.drive5.com/usearch/download.html
&lt;blockquote&gt;
&lt;p&gt;注意：USEARCH 免费版仅支持最多 4GB 内存，因此推荐使用 DIAMOND 或 BLAST+。&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 下载并解压缩DASTool.zip存档:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip DAS_Tool-1.x.x.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ./DAS_Tool-1.x.x
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Unzip SCG database:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip ./db.zip -d db
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Run DAS Tool:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./DAS_Tool -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ R
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; repo=&amp;#39;http://cran.us.r-project.org&amp;#39; #select a repository
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; install.packages(&amp;#39;data.table&amp;#39;, repos=repo, dependencies = T)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; install.packages(&amp;#39;magrittr&amp;#39;, repos=repo, dependencies = T)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; install.packages(&amp;#39;docopt&amp;#39;, repos=repo, dependencies = T)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; q() #quit R-session
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;3-使用-docker&#34;&gt;3. 使用 Docker&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./DAS_Tool-1.x.x
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker build -t cmks/das_tool .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;参数说明&#34;&gt;参数说明&lt;/h3&gt;
&lt;p&gt;安装完成后，可以通过 &lt;code&gt;DAS_Tool -h&lt;/code&gt; 查看可用参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -i &amp;lt;contig2bin&amp;gt; -c &amp;lt;contigs_fasta&amp;gt; -o &amp;lt;输出前缀&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;主要参数：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -i, --bins&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;contig2bin&amp;gt;                 多个 contig-to-bin 表格文件（以逗号分隔）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -c, --contigs&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;contigs&amp;gt;                 组装后的 contig（FASTA 格式）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -o, --outputbasename&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;前缀&amp;gt;             输出文件名前缀
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -l, --labels&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;标签&amp;gt;                     每个 binning 工具的名称（以逗号分隔）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --search_engine&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;搜索工具&amp;gt;             用于识别单拷贝基因的搜索工具（diamond/blastp/usearch）&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：diamond&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -p, --proteins&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;蛋白文件&amp;gt;               预测蛋白（可选），跳过基因预测步骤（FASTA 格式）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --write_bin_evals                       输出原始 bin 评估结果
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --write_bins                            输出最终整合的 bin（FASTA）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --write_unbinned                        输出未归类的 contigs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -t, --threads&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;线程数&amp;gt;                  并行线程数 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --score_threshold&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;阈值&amp;gt;               bin 筛选的得分阈值（0~1）&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：0.5&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --duplicate_penalty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;重复惩罚&amp;gt;         单拷贝基因重复的惩罚因子（0~3）&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：0.6&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --megabin_penalty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;megabin惩罚&amp;gt;        超大 bin 的惩罚因子（0~3）&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：0.5&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --dbDirectory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;数据库路径&amp;gt;             单拷贝基因数据库路径 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;默认：db&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --resume                                使用之前预测过的单拷贝基因结果
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --debug                                 输出调试信息
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -v, --version                           查看版本
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help                              查看帮助
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;输入文件准备&#34;&gt;输入文件准备&lt;/h3&gt;
&lt;h4 id=&#34;1-多个-binning-工具的输出---bins--i&#34;&gt;1. 多个 binning 工具的输出 [&lt;code&gt;--bins&lt;/code&gt;, &lt;code&gt;-i&lt;/code&gt;]&lt;/h4&gt;
&lt;p&gt;每个 binning 工具生成的 contig-to-bin 表格，TSV 格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Contig_1    bin.01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Contig_8    bin.01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Contig_42   bin.02
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Contig_49   bin.03
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;不是所有 binning 工具都直接生成此格式。可使用官方提供的脚本 &lt;code&gt;Fasta_to_Contigs2Bin.sh&lt;/code&gt; 进行转换，在github主页上：&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：将 MaxBin 输出 fasta 文件转为 contigs2bin 表格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/biosoft/DAS_Tool/src/Fasta_to_Contig2Bin.sh -i /maxbin/output/folder -e fa &amp;gt; maxbin.contigs2bin.tsv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;某些工具如 CONCOCT 输出为 CSV，可用 perl 一行命令转为 TSV：&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl -pe &lt;span class=&#34;s2&#34;&gt;&amp;#34;s/,/\tconcoct./g;&amp;#34;&lt;/span&gt; concoct_clustering_gt1000.csv &amp;gt; concoct.contigs2bin.tsv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;2-组装后的-contig-文件---contigs--c&#34;&gt;2. 组装后的 contig 文件 [&lt;code&gt;--contigs&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;]&lt;/h4&gt;
&lt;p&gt;FASTA 格式，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;Contig_1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ATCATCGTCCGCATCGACGAATTCGGCGAACGAGTACCCCTGACCATCTCCGATTA...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;Contig_2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GATCGTCACGCAGGCTATCGGAGCCTCGACCCGCAAGCTCTGCGCCTTGGAGCAGG...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;3-可选预测蛋白序列---proteins&#34;&gt;3. 可选：预测蛋白序列 [&lt;code&gt;--proteins&lt;/code&gt;]&lt;/h4&gt;
&lt;p&gt;若已有 prodigal 预测结果（&lt;code&gt;.faa&lt;/code&gt; 格式），可跳过基因预测步骤。&lt;/p&gt;
&lt;h3 id=&#34;运行-das-tool&#34;&gt;运行 DAS Tool&lt;/h3&gt;
&lt;p&gt;基本命令格式如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool -i &amp;lt;binning_results.tsv&amp;gt; -l &amp;lt;binning_labels&amp;gt; -c &amp;lt;scaffolds.fasta&amp;gt; -o &amp;lt;输出前缀&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：多个 binning 工具的 contigs-to-bin TSV 文件（用逗号连接），注意逗号之间绝对不能有空格，不然会引发Docopt报错&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：与 &lt;code&gt;-i&lt;/code&gt; 对应的 binning 工具名称（用逗号连接）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;：组装后 contigs 的 FASTA 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;：输出文件名前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool -i bins.tsv -l metabat,maxbin,concoct -c assembly.fasta -o DAS_Tool_output
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;输出结果&#34;&gt;输出结果&lt;/h3&gt;
&lt;p&gt;运行后将生成以下输出文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*_DASTool_summary.tsv&lt;/code&gt;：输出 bin 的质量与完整性评估汇总&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*_DASTool_contigs2bin.tsv&lt;/code&gt;：最终 contigs-to-bin 映射表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*_allBins.eval&lt;/code&gt;：若启用 &lt;code&gt;--write_bin_evals&lt;/code&gt;，输出输入 bin 的评估结果&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DASTool_bins/&lt;/code&gt;：若启用 &lt;code&gt;--write_bins&lt;/code&gt;，输出整合后的 bin（FASTA 格式）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例数据与测试&#34;&gt;示例数据与测试&lt;/h3&gt;
&lt;p&gt;使用 GitHub 提供的 &lt;code&gt;sample_data&lt;/code&gt;：&lt;/p&gt;
&lt;h4 id=&#34;示例-1使用-4-个-bin-工具结果运行-das-tool&#34;&gt;示例 1：使用 4 个 bin 工具结果运行 DAS Tool&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool -t &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_maxbin2_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_metabat_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_tetraESOM_contigs2bin.tsv &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--dbDirectory ~/db/DAS_Tool_db &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-l concoct,maxbin,metabat,tetraESOM &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-c sample_data/sample.human.gut_contigs.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-o sample_output2/DASToolRun1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用了4核，对于一个32M的contig文件，用时1min，内存占用200MB。&lt;/p&gt;
&lt;h4 id=&#34;示例-2设置更多参数跳过基因预测输出评估结果输出最终的bins使用多线程&#34;&gt;示例 2：设置更多参数，跳过基因预测，输出评估结果，输出最终的bins，使用多线程&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool -t &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_maxbin2_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_metabat_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;sample_data/sample.human.gut_tetraESOM_contigs2bin.tsv &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--dbDirectory ~/db/DAS_Tool_db &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-l concoct,maxbin,metabat,tetraESOM &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-c sample_data/sample.human.gut_contigs.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-o sample_output2/DASToolRun2 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--proteins sample_output2/DASToolRun1_proteins.faa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--write_bin_evals &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--write_bins &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--score_threshold 0.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;承接metawrap输出结果&#34;&gt;承接MetaWRAP输出结果&lt;/h3&gt;
&lt;p&gt;MetaWRAP是我们之前介绍过的一个binning流程工具，假如我们一开始已经用MetaWRAP进行了3种工具的binning，现在我们想用DAS_Tool来进行进一步的优化，那么可以用如下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;KY01867_1_T006D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metawrap binning -o l -t &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -a contigs/contigs_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.fasta &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --metabat2 --maxbin2 --concoct reads/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;*.fastq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那么在INITIAL_BINNING_${i}文件夹下会有如下文件夹：&lt;/p&gt;
&lt;p&gt;INITIAL_BINNING_KY01867_1_T006D/
├── concoct_bins
├── maxbin2_bins
├── metabat2_bins
└── work_files&lt;/p&gt;
&lt;p&gt;我们使用DAS_Tool进行整合：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#整理list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir tmp/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm tmp/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find INITIAL_BINNING_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/metabat2_bins/ -type f -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin.[0-9].fa&amp;#34;&lt;/span&gt; -exec cp &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; tmp/ &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/biosoft/DAS_Tool/src/Fasta_to_Contig2Bin.sh -i tmp/ -e fa &amp;gt; DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/metabat_contigs2bin.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/biosoft/DAS_Tool/src/Fasta_to_Contig2Bin.sh -i INITIAL_BINNING_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/maxbin2_bins/ -e fa &amp;gt; DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/maxbin_contigs2bin.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm tmp/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp INITIAL_BINNING_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/concoct_bins/bin.*.fa tmp/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/biosoft/DAS_Tool/src/Fasta_to_Contig2Bin.sh -i tmp/ -e fa &amp;gt; DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/concoct_contigs2bin.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#运行DAS_Tool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAS_Tool -t &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -i DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/concoct_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/maxbin_contigs2bin.tsv,&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/metabat_contigs2bin.tsv &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--dbDirectory ~/db/DAS_Tool_db &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-l concoct,maxbin,metabat &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-c INITIAL_BINNING_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/work_files/assembly.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-o DAS_Tool_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/DASToolRun2 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--write_bin_evals &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--write_bins
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Sieber, C.M.K., Probst, A.J., Sharrar, A. et al. Recovery of genomes from metagenomes via a dereplication, aggregation and scoring strategy. Nat Microbiol 3, 836–843 (2018). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41564-018-0171-1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41564-018-0171-1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>宏基因组中病毒序列的宿主预测</title>
        <link>https://jb-cao.github.io/Cao-blog/p/virus-host/</link>
        <pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/virus-host/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/virus-host/images/IPEV.png" alt="Featured image of post 宏基因组中病毒序列的宿主预测" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;在宏基因组学的研究领域中，对病毒序列宿主的预测已经成为一项极具挑战性但又至关重要的任务。病毒是一种非细胞生命形态的微生物，它们必须依赖宿主细胞才能进行繁殖和生存。然而，在复杂的生态环境中，病毒所感染的宿主往往是未知的。病毒宿主预测就是通过各种技术手段和方法，利用病毒基因组中的信息来推测其可能感染的宿主（如细菌等微生物）的过程。&lt;/p&gt;
&lt;p&gt;目前已有的宿主预测方法已经有很多了，比如2022年前就有以下工具：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;模型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;预测水平&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;WIsH&lt;/td&gt;
          &lt;td&gt;马尔可夫模型&lt;/td&gt;
          &lt;td&gt;针对潜在宿主基因组训练了一个同质的马尔可夫模型，并计算原核生物基因组作为查询病毒宿主的可能性。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PHP&lt;/td&gt;
          &lt;td&gt;高斯混合模型&lt;/td&gt;
          &lt;td&gt;利用 - mers频率（可反映病毒和宿主共享的密码子使用模式）来训练高斯混合模型。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HoPhage&lt;/td&gt;
          &lt;td&gt;深度学习模型和马尔可夫链算法&lt;/td&gt;
          &lt;td&gt;使用每个候选宿主基因组的编码序列（CDS）构建马尔可夫链模型，然后计算查询噬菌体片段感染候选宿主基因组的可能性。还使用深度学习模型，并最终将深度学习模型的结果与马尔可夫模型的结果整合用于宿主预测。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;VPF-Class&lt;/td&gt;
          &lt;td&gt;基于序列匹配的模型&lt;/td&gt;
          &lt;td&gt;利用从IMG/VR系统下载的病毒蛋白家族（VPFs）来估计查询病毒与已知宿主病毒之间的相似性。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RaFAH&lt;/td&gt;
          &lt;td&gt;随机森林模型&lt;/td&gt;
          &lt;td&gt;使用MMseqs2生成蛋白质簇并构建轮廓隐马尔可夫模型（HMMs）。然后，使用HMM比对输出的特征训练多类别随机森林模型。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HostG&lt;/td&gt;
          &lt;td&gt;图卷积网络（GCN）&lt;/td&gt;
          &lt;td&gt;利用病毒和原核生物之间共享的蛋白质簇创建知识图谱，并训练GCN进行预测。&lt;/td&gt;
          &lt;td&gt;属&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PHIST&lt;/td&gt;
          &lt;td&gt;基于比对的模型&lt;/td&gt;
          &lt;td&gt;基于病毒和宿主基因组之间的精确匹配来预测病毒的宿主原核生物。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PredPHI&lt;/td&gt;
          &lt;td&gt;卷积神经网络（CNN）&lt;/td&gt;
          &lt;td&gt;利用蛋白质序列中的化学成分信息（如氨基酸丰度）训练CNN进行宿主预测。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PHIAF&lt;/td&gt;
          &lt;td&gt;生成对抗网络（GAN）和卷积神经网络（CNN）&lt;/td&gt;
          &lt;td&gt;使用来自DNA和蛋白质序列的特征（如 - mers频率和分子量）训练CNN进行宿主预测，并应用GAN从已知的病毒 - 宿主相互作用生成伪病毒 - 宿主对以扩充数据集。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vHULK&lt;/td&gt;
          &lt;td&gt;多层感知机模型（MLP）&lt;/td&gt;
          &lt;td&gt;将宿主预测表述为一个多类别分类问题，输入为病毒，标签为原核生物，模型使用的特征是针对噬菌体蛋白家族pVOGs数据库的蛋白质轮廓比对结果。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DeepHost&lt;/td&gt;
          &lt;td&gt;卷积神经网络（CNN）&lt;/td&gt;
          &lt;td&gt;设计了一种基因组编码方法，使用 - mers特征将各种长度的基因组编码成3D矩阵，并训练CNN模型进行宿主预测。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;VHM-net&lt;/td&gt;
          &lt;td&gt;马尔可夫随机场&lt;/td&gt;
          &lt;td&gt;利用马尔可夫随机场框架，通过结合病毒和原核生物之间的多种特征（如CRISPRs、WIsH的输出得分、BLASTN比对等）来预测病毒是否感染目标原核生物。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CHERRY&lt;/td&gt;
          &lt;td&gt;图卷积编码器和解码器用于链接预测&lt;/td&gt;
          &lt;td&gt;将宿主预测问题表述为多模态图中的链接预测问题，并设计了用于宿主预测的编码器 - 解码器结构。多模态图将不同类型的特征（包括蛋白质组织、CRISPR、序列相似性和 - mers频率）集成到节点和边中，边连接来自标记（训练）和未标记（测试）数据的病毒和原核生物。&lt;/td&gt;
          &lt;td&gt;种&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;主要原理&#34;&gt;主要原理&lt;/h3&gt;
&lt;p&gt;（一）基于比对的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;基于病毒间相似性或病毒与原核生物基因组相似性&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;这类方法主要利用病毒之间或病毒与原核生物基因组之间的相似性来实现宿主识别。例如，VPF - Class方法，它利用从IMG/VR系统下载的病毒蛋白家族（VPFs）。通过计算查询病毒与已知宿主病毒之间的VPFs相似性，根据与VPFs的比对结果，就能对查询的每个病毒片段（contig）给出宿主预测结果。&lt;/li&gt;
&lt;li&gt;PHIST方法则是利用病毒基因组与原核生物基因组之间的序列匹配来进行宿主预测。它通过识别病毒和原核生物基因组共有的 - mers（长度为k的连续核苷酸序列），从而估计病毒 - 原核生物对形成真实相互作用（即感染关系）的概率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用CRISPR的比对预测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;一些原核生物会通过CRISPR（成簇的规律间隔的短回文重复序列）记录病毒感染信息以预防再次感染。部分基于比对的工具利用这一特性来预测宿主。比如使用BLAST（基本局部比对搜索工具）等方法，通过搜索原核生物和病毒之间的短序列匹配来预测宿主。然而，这种方法存在一定的局限性，因为只有2 - 10%的测序原核生物含有CRISPRs，而且很多病毒与原核生物注释或预测的CRISPRs没有比对结果，所以无法利用这一信号进行宿主预测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（二）基于学习的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;基于序列特征构建模型&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;机器学习和深度学习学习基于学习的方法更加灵活，大多数这类方法是学习基于序列的特征用于宿主预测。&lt;/li&gt;
&lt;li&gt;例如，WIsH方法会针对潜在宿主基因组训练一个同质的马尔可夫模型。该模型随后计算一个原核生物基因组作为查询病毒宿主的可能性，并将可能性最高的原核生物指定为宿主。&lt;/li&gt;
&lt;li&gt;vHULK方法将宿主预测表述为一个多类别分类问题，其中输入是病毒，标签是原核生物。它在其深度学习模型中使用的特征是针对噬菌体蛋白家族pVOGs数据库的蛋白质轮廓比对结果。&lt;/li&gt;
&lt;li&gt;RaFAH方法不使用公共数据库，而是使用MMseqs2软件生成蛋白质簇并构建轮廓隐马尔可夫模型（HMMs）。然后，它利用HMM比对输出的特征并训练一个多类别随机森林模型。&lt;/li&gt;
&lt;li&gt;HoPhage是另一个基于多类别分类模型的宿主预测工具，它使用深度学习和马尔可夫链算法。它通过利用每个候选宿主基因组的编码序列（CDS）构建马尔可夫链模型，计算查询噬菌体片段感染候选宿主基因组的可能性，然后还使用一个深度学习模型，并最终将深度学习模型与马尔可夫模型的结果整合以预测宿主。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于 - mers频率和相关蛋白的特征预测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;PHP方法利用 - mers频率，因为它可以反映病毒和宿主共享的密码子使用模式来预测宿主。&lt;/li&gt;
&lt;li&gt;DeepHost和PHIAF也利用基于 - mers的特征来训练卷积神经网络进行宿主预测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于受体结合蛋白（RBPs）的特征预测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Boeckaerts等人构建学习模型时使用从受体结合蛋白（RBPs）提取的特征进行宿主预测。不过，这一方法存在局限性，因为在所有病毒中注释RBPs并不容易，该作者仅收集了与九个宿主相关的RBPs，所以这个工具只能预测非常有限的宿主物种。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建知识图谱或整合多种特征预测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;HostG利用病毒和原核生物之间共享的蛋白质簇创建知识图谱，并训练图卷积网络进行预测。虽然它预测的准确性较高，但只能预测到属水平的主机。VHM - Net结合了病毒和原核生物之间的多种特征，如CRISPRs、WIsH的输出得分、BLASTN比对得分等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;近几年也有更多方法不断被发表出来，很难评判哪个软件最好用最准确，大家可以挑选最适合自己数据和研究问题的工具。这篇文章简要介绍一下几个我用过的软件。&lt;/p&gt;
&lt;h2 id=&#34;vpf-class基于病毒蛋白家族的病毒分类分配和宿主预测&#34;&gt;VPF-Class：基于病毒蛋白家族的病毒分类分配和宿主预测&lt;/h2&gt;
&lt;p&gt;VPF-Class是一种基于病毒蛋白家族（VPFs）信息的工具，用于对未培养病毒进行分类和宿主预测。它通过将病毒蛋白质分配到已分类的VPFs中，实现了在多个分类级别（包括Baltimore分类系统、病毒科和属）上的自动化分类和宿主预测。VPF-Class在RefSeq数据库中表现出高准确性，属级别的分类准确率接近100%，宿主预测准确率为86.4%。该工具无需下载或选择参考数据库，避免了映射过程中的偏差，使其更易于使用。VPF-Class适用于宏基因组研究、病毒发现和病毒生态学研究，帮助研究人员在没有培养条件的情况下识别新的病毒序列并预测其宿主。&lt;/p&gt;
&lt;img src=&#34;images/vpf-class.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;在VPF-Class中，主要步骤包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VPFs的分类和宿主预测&lt;/strong&gt;：首先，对VPFs进行分类，并根据其与已知病毒的同源关系进行宿主预测。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;病毒基因组的分类和宿主预测&lt;/strong&gt;：利用分类后的VPFs对未培养病毒基因组进行分类和宿主预测。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交叉验证和VPFs的第二轮分类&lt;/strong&gt;：通过比较未培养病毒的分类结果来更新VPFs的分类信息，以提高分类的准确性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;病毒基因组的分类和评分&lt;/strong&gt;：为每个病毒基因组提供分类和宿主预测结果，并计算相应的置信度评分。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装使用&#34;&gt;安装使用&lt;/h3&gt;
&lt;p&gt;在GitHub上的&lt;code&gt;biocom-uib/vpf-tools&lt;/code&gt;项目中，提供了两种安装方法：使用Docker和从源代码构建（但是我的服务器上直接没有sudo权限，docker也用不了，stack也装不了😂，只能在自己的电脑上安装了）。以下是详细的安装步骤：&lt;/p&gt;
&lt;p&gt;方法1：使用Docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker volume create vpf-data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run --rm -it &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;vpf-data:/opt/vpf-tools/vpf-data&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/seqs:/opt/vpf-tools/input-sequences:ro&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/outputs:/opt/vpf-tools/outputs:rw&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    bielr/vpf-tools &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        vpf-class -i seqs/test.fna -o outputs/test-classified
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我尝试将本地的docker转换为HPC上的singularity来运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在 Docker 环境下转换 sif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;:/output quay.io/singularity/docker2singularity &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    bielr/vpf-tools
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker save -o vpf-tools.tar bielr/vpf-tools
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;singularity build vpf-tools.sif docker-archive://vpf-tools.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p &lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/vpf-data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run --rm -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/vpf-data:/opt/vpf-tools/vpf-data&amp;#34;&lt;/span&gt; bielr/vpf-tools cp -r /opt/vpf-tools/vpf-data/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在singularity环境运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 把vpf-tools.sif和vpf-data文件夹拷贝到HPC上&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;singularity &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; --bind &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/vpf-data:/opt/vpf-tools/vpf-data&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                 --bind &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/seqs:/opt/vpf-tools/input-sequences:ro&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                 --bind &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/outputs:/opt/vpf-tools/outputs:rw&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                 vpf-tools.sif &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        vpf-class -i seqs/test.fna -o outputs/test-classified
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法2：从源代码构建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装Stack&lt;/strong&gt;：
使用以下命令安装Stack（适用于Mac OS和Linux，未在Windows上测试）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -sSL https://get.haskellstack.org/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;克隆仓库&lt;/strong&gt;：
克隆&lt;code&gt;vpf-tools&lt;/code&gt;仓库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/biocom-uib/vpf-tools
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; vpf-tools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编译工具&lt;/strong&gt;：
使用Stack编译所有目标：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stack build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第一次编译可能需要一些时间，因为Stack还需要安装GHC并编译所有依赖项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行工具&lt;/strong&gt;：
编译完成后，可以通过在命令前加上&lt;code&gt;stack exec --&lt;/code&gt;来运行工具，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stack &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -- vpf-class --help
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实验性支持OpenMPI&lt;/strong&gt;：
如果需要使用OpenMPI，可以在构建时添加&lt;code&gt;--flag vpf-class:+mpi&lt;/code&gt;标志，然后像其他程序一样使用&lt;code&gt;mpirun&lt;/code&gt;运行工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;补充材料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分类文件&lt;/strong&gt;：
可以在这里找到VPF的分类文件，包括&lt;code&gt;index.yaml&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单个数据文件&lt;/strong&gt;：
可以在这里下载单个数据文件，选择“VPF classification”选项卡。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HMMER模型文件&lt;/strong&gt;：
最新的包含VPF HMMER模型的文件可以从IMG/VR下载（注意：链接可能已失效，可以在这里找到一个副本）。将&lt;code&gt;final_list.hmms&lt;/code&gt;解压到数据目录中，与&lt;code&gt;index.yaml&lt;/code&gt;相邻。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常见问题&#34;&gt;常见问题&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HMMERNotFound&lt;/strong&gt;：
确保HMMER安装正确，并且可以通过&lt;code&gt;$PATH&lt;/code&gt;访问。如果不在&lt;code&gt;$PATH&lt;/code&gt;中，可以使用&lt;code&gt;--hmmer-prefix&lt;/code&gt;指定路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ProdigalNotFound&lt;/strong&gt;：
确保Prodigal已安装，并且可以通过&lt;code&gt;$PATH&lt;/code&gt;访问。如果不在&lt;code&gt;$PATH&lt;/code&gt;中，可以使用&lt;code&gt;--prodigal&lt;/code&gt;指定可执行文件的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stack安装问题&lt;/strong&gt;：
如果在安装过程中遇到问题，请参考Stack文档以确保所有依赖项都满足。（还挺难搞的😂）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conda环境问题&lt;/strong&gt;：
由于一些用户报告了Stack和Conda的问题，建议避免在Conda污染的环境中安装Stack。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cherry图编码器模型准确预测病毒-原核宿主相互作用&#34;&gt;Cherry：图编码器模型准确预测病毒-原核宿主相互作用&lt;/h2&gt;
&lt;p&gt;在微生物群落中，感染细菌和古菌的&lt;strong&gt;原核病毒&lt;/strong&gt;是关键参与者。预测原核病毒的宿主有助于解码微生物之间的动态关系。然而，实验方法无法跟上高通量测序技术产生的噬菌体序列的快速积累，因此需要计算方法来进行宿主预测。尽管取得了一些有希望的结果，但由于已知相互作用的限制和大量测序噬菌体的数量，计算宿主预测仍然是一个挑战。目前最先进的方法在物种水平上的准确率只能达到43%。&lt;/p&gt;
&lt;img src=&#34;images/cherry.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;在这项工作中，研究者将宿主预测问题表述为一个知识图中的链接预测问题，整合了多种基于蛋白质和DNA的序列特征。研究者实现的工具名为CHERRY，可以应用于预测新发现病毒的宿主，并识别感染目标细菌的病毒。研究者展示了CHERRY在这两种应用中的实用性，并将其性能与其他11种流行的宿主预测方法进行了比较。据研究者所知，CHERRY在识别病毒-原核生物相互作用方面具有最高的准确性。它在物种水平上超越了所有现有方法，准确率提高了37%。此外，CHERRY在短片段上的表现比其他工具更稳定。&lt;/p&gt;
&lt;h3 id=&#34;安装使用-1&#34;&gt;安装使用&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CHERRY&lt;/code&gt; 是一个用于预测病毒与原核生物基因组相互作用的 Python 库。使用 Conda 安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;克隆仓库&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/KennthShang/CHERRY.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;创建并激活 Conda 环境&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; CHERRY
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda env create -f CHERRY.yaml -n cherry
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate cherry
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;准备数据库&lt;/strong&gt;：
由于 GitHub 文件大小限制，数据库文件被压缩为 &lt;code&gt;.bz2&lt;/code&gt; 格式。需要解压这些文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; dataset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bzip2 -d protein.fasta.bz2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bzip2 -d nucl.fasta.bz2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ../prokaryote
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gunzip *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;激活环境&lt;/strong&gt;：
每次使用 &lt;code&gt;CHERRY&lt;/code&gt; 之前，确保激活 &lt;code&gt;cherry&lt;/code&gt; 环境：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate cherry
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;使用&#34;&gt;使用&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;输入文件&lt;/strong&gt;：
输入文件应该是一个包含病毒序列的 FASTA 文件。研究者提供了一个示例文件 &lt;code&gt;test_contigs.fa&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行命令&lt;/strong&gt;：
使用以下命令进行宿主预测：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Speed_up.py &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--contigs INPUT_FA&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--len MINIMUM_LEN&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--model MODEL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--topk TOPK_PRED&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--contigs INPUT_FA&lt;/code&gt;：输入的 FASTA 文件（默认为 &lt;code&gt;test_contigs.fa&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--len MINIMUM_LEN&lt;/code&gt;：仅对长度大于等于指定长度的序列进行预测（默认为 8000）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--model MODEL&lt;/code&gt;：使用预训练参数或重新训练的参数进行预测（默认为 &lt;code&gt;pretrain&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--topk TOPK_PRED&lt;/code&gt;：输出前 K 个预测结果（默认为 1）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Speed_up.py --contigs test_contigs.fa --len &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt; --model pretrain --topk &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;输出文件&lt;/strong&gt;：
输出文件格式为 CSV 文件（&lt;code&gt;final_prediction.csv&lt;/code&gt;），包含每个病毒的预测结果。列 &lt;code&gt;contig_name&lt;/code&gt; 是输入文件的访问号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生成分类树&lt;/strong&gt;：
使用以下命令将预测结果转换为完整的分类树：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Taxonomy_tree.py &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--k TOPK_PRED&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要指定 &lt;code&gt;k&lt;/code&gt; 来生成树，输出文件为 &lt;code&gt;Top_k_prediction_taxonomy.csv&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扩展病毒-原核生物相互作用数据库&#34;&gt;扩展病毒-原核生物相互作用数据库&lt;/h4&gt;
&lt;p&gt;如果有比预训练模型更多的病毒-原核生物相互作用信息，可以添加它们来训练自定义模型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加病毒基因组&lt;/strong&gt;：
将病毒基因组添加到 &lt;code&gt;nucl.fasta&lt;/code&gt; 文件中，并运行 &lt;code&gt;python refresh.py&lt;/code&gt; 以生成新的 &lt;code&gt;protein.fasta&lt;/code&gt; 和 &lt;code&gt;database_gene_to_genome.csv&lt;/code&gt; 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加宿主分类信息&lt;/strong&gt;：
在 &lt;code&gt;dataset/virus.csv&lt;/code&gt; 中添加宿主分类信息。表头为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accession（病毒）&lt;/li&gt;
&lt;li&gt;Superkingdom&lt;/li&gt;
&lt;li&gt;Phylum&lt;/li&gt;
&lt;li&gt;Class&lt;/li&gt;
&lt;li&gt;Order&lt;/li&gt;
&lt;li&gt;Family&lt;/li&gt;
&lt;li&gt;Genus&lt;/li&gt;
&lt;li&gt;Species（必填）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加原核生物基因组&lt;/strong&gt;：
将原核生物基因组放入 &lt;code&gt;prokaryote/&lt;/code&gt; 文件夹，并在 &lt;code&gt;dataset/prokaryote.csv&lt;/code&gt; 中添加条目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重新训练模型&lt;/strong&gt;：
使用 &lt;code&gt;retrain&lt;/code&gt; 作为 &lt;code&gt;--mode&lt;/code&gt; 参数运行程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Speed_up.py --mode retrain
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;预测感染特定原核生物的病毒&#34;&gt;预测感染特定原核生物的病毒&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;输入文件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将原核生物基因组放入 &lt;code&gt;new_prokaryote/&lt;/code&gt; 文件夹。&lt;/li&gt;
&lt;li&gt;提供一个包含病毒序列的 FASTA 文件。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;database/prokaryote.csv&lt;/code&gt; 中添加分类信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行命令&lt;/strong&gt;：
使用以下命令进行预测：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Speed_up.py &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--mode MODE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--t THRESHOLD&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--mode MODE&lt;/code&gt;：切换模式为预测病毒或宿主（&lt;code&gt;prokaryote&lt;/code&gt; 或 &lt;code&gt;virus&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--t THRESHOLD&lt;/code&gt;：预测病毒的置信度阈值，阈值越高，精度越高（默认为 0.98）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run_Speed_up.py --contigs test_contigs.fa --mode prokaryote --t 0.98
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;输出文件&lt;/strong&gt;：
输出文件格式为 CSV 文件，包含每个病毒的预测结果。列 &lt;code&gt;prokaryote&lt;/code&gt; 是给定原核生物基因组的访问号，列 &lt;code&gt;virus&lt;/code&gt; 是可能感染这些基因组的病毒列表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;常见问题-1&#34;&gt;常见问题&lt;/h4&gt;
&lt;p&gt;如果程序输出错误（通常是由于机器配置问题）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error: mkl-service + Intel&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;R&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; MKL: &lt;span class=&#34;nv&#34;&gt;MKL_THREADING_LAYER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;INTEL is incompatible with libgomp.so.1 library.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以尝试在运行 &lt;code&gt;run_Speed_up.py&lt;/code&gt; 之前执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MKL_SERVICE_FORCE_INTEL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果不想上面这样安装到本地或者很难运行成功，可以使用作者提供的在线网站phabox（https://phage.ee.cityu.edu.hk/phabox），可以直接上传文件进行预测。还是比较方便且运行较快的。&lt;/p&gt;
&lt;h2 id=&#34;ipev深度学习鉴定原核真核病毒衍生序列&#34;&gt;IPEV：深度学习鉴定原核/真核病毒衍生序列&lt;/h2&gt;
&lt;p&gt;上面👆的CHERRY是只能鉴定潜在的原核生物宿主，而IPEV可以准确预测原核/真核病毒，可以作为一个扩充。&lt;/p&gt;
&lt;p&gt;通过病毒样颗粒富集获得的病毒组包含原核和真核病毒来源的片段混合物。准确识别和分类这些元素对于理解它们在微生物群落中的作用和功能至关重要。然而，病毒基因组的快速突变率对开发高性能分类工具提出了挑战，可能会限制下游分析。&lt;/p&gt;
&lt;img src=&#34;images/IPEV.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;研究者提出了一种新颖的方法 IPEV，用于区分病毒组中的原核和真核病毒。该方法结合了二维卷积神经网络，利用三核苷酸对的相对距离和频率进行识别。IPEV 的交叉验证评估显示其在独立测试集上的精度处于领先地位，与现有方法相比，在查询病毒与已知病毒序列相似性低于 30% 的情况下，F1 分数显著提高了约 22%。此外，IPEV 在海洋和肠道病毒组样本上的准确性优于基于序列比对注释的其他方法。IPEV 相较于现有方法在同一计算配置下最多减少了 1,225 倍的运行时间。研究者还利用 IPEV 分析纵向样本，发现肠道病毒组比以往观察到的持久个人病毒组展现出更高的时间稳定性，为个体肠道病毒组的韧性提供了新的见解。&lt;/p&gt;
&lt;p&gt;IPEV 是一种高性能、用户友好的工具，帮助生物学家在病毒组中识别和分类原核和真核病毒。该工具可在 &lt;a class=&#34;link&#34; href=&#34;https://github.com/basehc/IPEV&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;IPEV GitHub 仓库&lt;/a&gt; 或 &lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/dryinhc/ipev_v1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Hub&lt;/a&gt; 获取。IPEV 基于 Python3.8.6 和 TensorFlow 2.3.1 构建，通过并行处理和算法优化，能够快速获得计算结果。&lt;/p&gt;
&lt;h3 id=&#34;安装使用-2&#34;&gt;安装使用&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IPEV&lt;/code&gt; 是一个用于识别病毒组数据中原核和真核病毒序列的深度学习软件工具。以下是安装和使用 &lt;code&gt;IPEV&lt;/code&gt; 的详细步骤：&lt;/p&gt;
&lt;p&gt;方法一：从 GitHub 使用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;克隆仓库&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/basehc/IPEV.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;创建新环境&lt;/strong&gt;（推荐以避免与现有包冲突）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Conda&lt;/code&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda create -n your_env_name &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.8.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate your_env_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;virtualenv&lt;/code&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 -m venv /path/to/new/virtual/environment
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; /path/to/new/virtual/environment/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;设置操作环境&lt;/strong&gt;：
进入项目目录并安装必要的依赖项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; IPEV
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法二：从 Docker Hub 使用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;拉取镜像&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull dryinhc/ipev_v1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运行容器&lt;/strong&gt;：
打开一个新的终端窗口并运行以下命令以启动基于镜像的容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it --rm dryinhc/ipev_v1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传输数据文件&lt;/strong&gt;：
在新的终端窗口中，将数据文件传输到容器内：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker cp data.fasta dryinhc/ipev_v1:/app/tool/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在容器内运行程序&lt;/strong&gt;：
切换到容器内并运行程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it &amp;lt;container_id&amp;gt; /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; tool
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run.py data.fasta
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;退出容器&lt;/strong&gt;：
按 &lt;code&gt;Ctrl+D&lt;/code&gt; 或输入 &lt;code&gt;exit&lt;/code&gt; 退出容器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;使用-1&#34;&gt;使用&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基本使用&lt;/strong&gt;：
进入 &lt;code&gt;IPEV&lt;/code&gt; 目录并运行示例文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./IPEV
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run.py example.fasta
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;去除非病毒序列&lt;/strong&gt;：
&lt;code&gt;IPEV&lt;/code&gt; 提供了一个功能来过滤掉病毒组数据中的非病毒成分。使用以下命令启用该功能（默认为关闭）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python run.py example.fasta -filter yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;序列评分文件&lt;/strong&gt;：程序会生成一个 TSV 文件，包含每个序列的最终评分，存储在以当前日期和时间命名的文件夹中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;评分直方图&lt;/strong&gt;：程序还会创建一个直方图，显示不同评分在 FASTA 文件中序列中出现的频率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了节省时间，最好将所有序列放在一个单独的 FASTA 文件中，这样程序可以更快地处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果需要去除非病毒序列，请确保在运行时使用 &lt;code&gt;-filter yes&lt;/code&gt; 参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Joan Carles Pons, David Paez-Espino, Gabriel Riera, Natalia Ivanova, Nikos C Kyrpides, Mercè Llabrés, VPF-Class: taxonomic assignment and host prediction of uncultivated viruses based on viral protein families, Bioinformatics, Volume 37, Issue 13, July 2021, Pages 1805–1813, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/bioinformatics/btab026&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/bioinformatics/btab026&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jiayu Shang, Yanni Sun, CHERRY: a Computational metHod for accuratE pRediction of virus–pRokarYotic interactions using a graph encoder–decoder model, Briefings in Bioinformatics, Volume 23, Issue 5, September 2022, bbac182, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/bib/bbac182&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/bib/bbac182&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hengchuang Yin, Shufang Wu, Jie Tan, Qian Guo, Mo Li, Jinyuan Guo, Yaqi Wang, Xiaoqing Jiang, Huaiqiu Zhu, IPEV: identification of prokaryotic and eukaryotic virus-derived sequences in virome using deep learning, GigaScience, Volume 13, 2024, giae018, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/gigascience/giae018&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/gigascience/giae018&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>使用BiG-SLiCE高效聚类大规模BGCs</title>
        <link>https://jb-cao.github.io/Cao-blog/p/big-slice-bgcs/</link>
        <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/big-slice-bgcs/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/big-slice-bgcs/images/bgc_intro.png" alt="Featured image of post 使用BiG-SLiCE高效聚类大规模BGCs" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;随着基因组挖掘技术的进步，生物合成基因簇（BGCs）的研究已成为天然产物发现的核心环节。目前，超过20万个公开的微生物基因组中蕴藏着丰富的化学多样性信息。然而，现有的工具在处理大规模BGCs时，常因基于网络的聚类方法效率低下而面临瓶颈。&lt;/p&gt;
&lt;p&gt;BiG-SLiCE（Biosynthetic Gene clusters - Super Linear Clustering Engine） 应运而生，这是一款专为高效聚类大规模BGCs而设计的工具。它通过将BGCs映射到欧几里得空间，以近乎线性的方式将BGCs分组为基因簇家族（GCFs）。在短短10天内，BiG-SLiCE成功分析了来自209,206个微生物基因组和宏基因组组装基因组（MAGs）的1,225,071个BGCs，并构建了全球次级代谢多样性的分布图谱，揭示了未被开发的生物合成潜力。此外，BiG-SLiCE还提供了“查询模式”，能够快速将新测序的BGCs归类到已有的GCFs中，并配备了强大的可视化引擎，便于用户探索数据。这一工具不仅加速了天然产物的发现，还为构建全球可搜索的BGC网络奠定了基础。&lt;/p&gt;
&lt;p&gt;BiG-SLiCE的开源地址：https://github.com/medema-group/bigslice&lt;/p&gt;
&lt;img src=&#34;images/bgc_intro.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;BGCs（以及GCFs）与催化酶及其编码途径产生的化合物直接相关，因此可以作为探索微生物次级代谢化学空间的代理。通过编目所有已测序微生物基因组中的GCFs，可以全面了解现有的化学多样性，并为未来的先导化合物发现提供方向。例如，可以重点关注具有新颖潜力的物种，或识别已知抗生素生产BGC的天然变体。然而，进行此类全球分析需要能够处理海量数据的聚类算法。尽管过去五年中工具的处理能力有所提升（从2014年的11,000–33,000个BGCs到2019年的73,260个），但与当前可用数据量相比仍显不足。截至2020年3月27日，antiSMASH-DB和IMG-ABC两大BGC数据库共包含565,096个BGCs，预测自85,221个细菌基因组。若考虑未覆盖的基因组和宏基因组，这一数字将更大。例如，NCBI RefSeq数据库中的约180,000个细菌基因组可能产生超过1,000,000个BGCs。&lt;/p&gt;
&lt;p&gt;处理如此大规模的数据集，即使是目前最快的工具（如BiG-SCAPE）在36核CPU上也需要约37,000小时运行时间，这在实际中几乎不可行。主要瓶颈在于构建相似性网络和聚类分析时使用的成对BGC比较方法，其时间复杂度为O(n²)。因此，迫切需要一种能够更好适应基因组数据增长的替代方法。为此，研究者开发了&lt;strong&gt;BiG-SLiCE&lt;/strong&gt;（Biosynthetic Genes Super-Linear Clustering Engine），它将BGCs映射到欧几里得空间，采用分区聚类算法，时间复杂度接近线性[∼O(n)]，从而能够快速分析大规模BGC数据集，实现真正全球化的GCF分析。&lt;/p&gt;
&lt;img src=&#34;images/method.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;为了实现大规模分析，&lt;strong&gt;BiG-SLiCE&lt;/strong&gt;在设计时将&lt;strong&gt;可扩展性和速度&lt;/strong&gt;作为首要目标。与之前的工具&lt;strong&gt;BiG-SCAPE&lt;/strong&gt;（能够敏感捕捉BGCs之间域结构和序列相似性的细微差异）不同，BiG-SLiCE能够在36核CPU、128GB内存的机器上，以不到一周的时间处理超过120万个BGCs的输入数据，同时保持足够的灵敏度以区分输入BGCs中的关键生物合成“信号”。此外，为了便于用户探索和分析结果，BiG-SLiCE还提供了交互式、易于使用的可视化输出，且对软硬件要求极低。&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;安装方法非常简单，用以下两种选一个即可&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;从PyPI安装（稳定版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install bigslice
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;从源码安装（开发版——仅适用于熟悉操作的用户）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://github.com/medema-group/bigslice.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后下载最新的HMM模型（约271MB压缩文件）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;download_bigslice_hmmdb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果感觉下载太慢了，也可以手动下载：&lt;a class=&#34;link&#34; href=&#34;https://github.com/medema-group/bigslice/releases/download/v2.0.0rc/bigslice-models.2022-11-30.tar.gz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/medema-group/bigslice/releases/download/v2.0.0rc/bigslice-models.2022-11-30.tar.gz&lt;/a&gt;，下载后重命名为bigslice_models.tar.gz放到&lt;code&gt;whcih download_bigslice_hmmdb&lt;/code&gt;的统一目录下再运行即可，就会跳过下载步骤。&lt;/p&gt;
&lt;p&gt;最后检查安装是否成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bigslice --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;成功安装后，将显示如下信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==============
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BiG-SLiCE version 2.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HMM databases version: bigslice-models-2022-11-30
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Biosynthetic-pfam md5: 37495cac452bf1dd8aff2c4ad92065fe
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Sub-pfam md5: 2e6b41d06f3c318c61dffb022798091e
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==============
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;big-slice-运行模式&#34;&gt;BiG-SLiCE 运行模式&lt;/h3&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;strong&gt;[模式1] 聚类分析&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;解析输入数据集，构建GCF模型（BIRCH聚类），并根据指定阈值（T）进行成员分配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i|--input_folder &amp;lt;folder_path&amp;gt;&lt;/code&gt;：输入文件夹路径，需包含 &lt;code&gt;datasets.tsv&lt;/code&gt; 文件及数据集子文件夹。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--resume&lt;/code&gt;：继续上一次的聚类运行（不要与 &lt;code&gt;--input_folder&lt;/code&gt; 同时使用）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--complete&lt;/code&gt;：构建GCF模型时，仅使用完整的BGCs（antiSMASH &amp;gt; 4.2 标注为 &lt;code&gt;on_contig_edge = False&lt;/code&gt; 的BGCs）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--threshold&lt;/code&gt;：用于GCF模型构建（BIRCH算法）和成员分配的聚类阈值（T）。与 &lt;code&gt;--threshold_pct&lt;/code&gt; 互斥，使用 &lt;code&gt;-1&lt;/code&gt; 关闭此参数（默认：300）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--threshold_pct&lt;/code&gt;：基于数据间成对距离的随机采样计算聚类阈值（T），取第N百分位值作为阈值。与 &lt;code&gt;--threshold&lt;/code&gt; 互斥，使用 &lt;code&gt;-1&lt;/code&gt; 关闭此参数（默认：-1）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-1&#34;&gt;&lt;strong&gt;[模式2] GCF查询&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;基于[模式1]生成的GCF模型，从输入文件夹中的BGC GenBank文件中提取特征并进行成员分配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--query &amp;lt;folder_path&amp;gt;&lt;/code&gt;：输入文件夹路径，需包含所有BGC的GenBank文件（支持antiSMASH4的 &lt;code&gt;clusterXXX.gbk&lt;/code&gt;、antiSMASH5的 &lt;code&gt;regionXXX.gbk&lt;/code&gt; 或MIBiG ≥ 2.0的 &lt;code&gt;BGCXXXXXXX.gbk&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--query_name&lt;/code&gt;：为查询运行指定唯一名称，便于在输出可视化中追踪。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-2&#34;&gt;&lt;strong&gt;[模式1+2] 通用参数&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;适用于聚类和查询模式的参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--run_id&lt;/code&gt;：指定运行ID进行查询（或继续聚类），而非使用最新运行（可在输出可视化中查看运行ID列表）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--n_ranks &amp;lt;N_RANKS&amp;gt;&lt;/code&gt;：为每个BGC的成员分配过程取N个最佳GCF匹配（默认：5）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--program_db_folder &amp;lt;PROGRAM_DB_FOLDER&amp;gt;&lt;/code&gt;：HMM库路径（默认：&lt;code&gt;/mnt/local_scratch/kauts001/general-env/bin/bigslice-models&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cpuram优化&#34;&gt;&lt;strong&gt;CPU/RAM优化&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t|--num_threads&lt;/code&gt;：并行运行的作业数（默认：56）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--hmmscan_chunk_size&lt;/code&gt;：将 &lt;code&gt;biosyn_pfam&lt;/code&gt; 扫描拆分为每组N个BGCs的块（默认：100）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--subpfam_chunk_size&lt;/code&gt;：将 &lt;code&gt;sub_pfam&lt;/code&gt; 扫描拆分为每组N个BGCs的块（默认：100）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--extraction_chunk_size &amp;lt;EXTRACTION_CHUNK_SIZE&amp;gt;&lt;/code&gt;：将特征提取拆分为每组N个BGCs的块（默认：100）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--scratch&lt;/code&gt;：不将Sqlite3数据库加载到内存中（降低RAM使用，但可能降低速度）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;misc-其他可选参数&#34;&gt;[Misc] 其他可选参数：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h, --help&lt;/code&gt;
显示帮助信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--export-tsv &amp;lt;folder_path&amp;gt;&lt;/code&gt;
将现有的预计算输出数据导出为TSV格式文件（指定目标文件夹路径）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--program_db_folder PROGRAM_DB_FOLDER&lt;/code&gt;
指定HMM库的路径（默认路径：/share/home/jianglab/pengchen/miniconda3/envs/antismash_5.2.0/bin/bigslice-models）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--version&lt;/code&gt;
显示BiG-SLiCE的版本信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;p&gt;可以使用提供的示例输入文件夹进行“最小化”测试运行：&lt;/p&gt;
&lt;p&gt;下载&lt;a class=&#34;link&#34; href=&#34;https://github.com/medema-group/bigslice/tree/master/misc/input_folder_template&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/medema-group/bigslice/tree/master/misc/input_folder_template&lt;/a&gt;这个文件夹，里面只有1个dataset，1个genome，2个gbk。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bigslice -i input_folder_template/ test_out/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里我遇到了一个问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AttributeError: &amp;#39;pyhmmer.plan7.TopHits&amp;#39; object has no attribute &amp;#39;query_accession&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;应该是pyhmmer的版本问题，我尝试安装v0.10.7版本后解决：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install pyhmmer==0.10.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过以上步骤，可以轻松安装并运行 BiG-SLiCE，开始大规模 BGC 聚类分析！我测试了运行了2min，消耗内存160MB&lt;/p&gt;
&lt;h3 id=&#34;input-files&#34;&gt;Input files&lt;/h3&gt;
&lt;p&gt;为了充分利用BiG-SLiCE的强大功能，其输入的BGC文件需要按数据集和基因组的结构进行组织。一个典型的输入文件夹可能如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;input_folder/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── datasets.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── dataset_1/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── genome_1A/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── genome_1A.region001.gbk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── genome_1A.region002.gbk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── genome_1B/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── dataset_2/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── genome_2A/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── dataset_3/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── genome_3A/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── taxonomy/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── taxonomy_dataset_1.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ├── taxonomy_dataset_2.tsv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;datasets.tsv 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该文件需要严格命名为 datasets.tsv，并放置在输入文件夹的根目录中。它是一个描述所有BGC元数据的文件，BiG-SLiCE使用它来解析输入文件夹中的所有BGC数据。该文件应该是一个以制表符分隔的文件（.tsv），每一行按以下顺序包含以下内容：
•	数据集名称
•	数据集文件夹的路径（相对于输入文件夹根目录的路径）
•	分类信息文件路径（见 &amp;lt;taxonomy_X.tsv&amp;gt; 文件）
•	数据集描述&lt;/p&gt;
&lt;p&gt;以 # 开头的行将被解析器跳过，因此可以用来定义表头等。可以从代码库下载一个模板 datasets.tsv 文件作为起始点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;dataset_X&amp;gt; 文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据集是BiG-SLiCE中用来分组基因组和BGCs的灵活分类方案。例如，可以根据样本来源将Metagenome-Assembled Genomes（MAGs）归为一个数据集，也可以根据原始文献将基因组和MAGs归类，用于元分析研究。每个数据集文件夹下应直接包含基因组文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;genome_X&amp;gt; 文件夹与 &amp;lt;genome_X.regionXXX.gbk&amp;gt; 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些文件夹是由antiSMASH运行产生的输出文件夹，包含 &amp;lt;genome_name&amp;gt;.regionXXX.gbk（antiSMASH 5）或 &amp;lt;genome_name&amp;gt;.clusterXXX.gbk（antiSMASH 4）文件。此外，MIBiG &amp;gt;= 2.0格式的文件（名为 BGCXXXXXXX.gbk，可以通过“Download GenBank summary file”获取）也被BiG-SLiCE接受。请确保不修改这些命名格式，因为BiG-SLiCE依赖它们快速区分集群文件（clustergbks）和常规基因组文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;taxonomy_X.tsv&amp;gt; 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然可以从antiSMASH 5（和MIBiG &amp;gt;= 2.0）生成的cluster genbank文件中提取分类信息（因为这些文件保留了原始基因组的注释），但这些信息并没有统一的方式来为提供的分类名（通常是分号分隔的 ;）指定等级（如：界、门、纲、目、科、属、种等）。为了确保最佳的注释质量和分析结果，BiG-SLiCE要求用户为每个数据集手动提供分类学元数据（如果可能的话），并以制表符分隔的文件（.tsv）格式包含以下内容（按照此顺序）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Genome folder name (ends with &amp;#39;/&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Kingdom / Domain name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Class name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Order name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Family name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Genus name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Species name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Organism / Strain name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为了确保所有数据集中的分类名称一致，建议使用相同的参考数据库为分类名称指定等级。为了帮助用户自动化这一过程，BiG-SLiCE提供了一些Python脚本，可以基于原始输入基因组（而非集群基因组文件）使用GTDB工具包为分类信息赋予等级（此脚本仅适用于完整的古菌和细菌基因组，下载脚本）。如果基因组来自NCBI RefSeq/GenBank（即具有GCF_*或GCA_*号的基因组），可以使用此脚本从GTDB API提取分类信息。&lt;/p&gt;
&lt;h3 id=&#34;output&#34;&gt;Output&lt;/h3&gt;
&lt;p&gt;输出文件夹结构：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test_out/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── config.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── controllers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── __init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── __pycache__
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── run.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── static
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── views
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── LICENSE.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── result
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── cache
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── data.db
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── start_server.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;直接这样的输出db文件是很难查看的，新版介绍可以用&lt;code&gt;--export-tsv&lt;/code&gt;导出表格，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;bigslice&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tsv&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result_tsv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但是目前有&lt;code&gt;AttributeError: &#39;tuple&#39; object has no attribute &#39;values&#39;&lt;/code&gt;的报错，官方还没解决。但是可以自己使用sqlite3对结果的data.db文件进行查看和文件导出。&lt;/p&gt;
&lt;p&gt;或者使用用户交互输出：&lt;/p&gt;
&lt;p&gt;BiG-SLiCE的输出文件夹包含处理后的输入数据（以SQLite3数据库文件的形式）以及一些脚本，这些脚本支持一个小型的Web应用程序来可视化这些数据。要运行该可视化引擎，按照以下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装Web应用的依赖包：
首先，确保安装了所需的依赖包。运行以下命令来安装requirements.txt中列出的所有依赖：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r &amp;lt;output_folder&amp;gt;/requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;启动Flask服务器：
然后，通过以下命令启动Flask服务器：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash &amp;lt;output_folder&amp;gt;/start_server.sh &amp;lt;port(可选)&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;默认情况下，服务器会在端口5000上启动。如果需要自定义端口，可以在命令中指定端口号。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;打开浏览器访问：
启动服务器后，浏览器将显示如下信息：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)&lt;/p&gt;
&lt;p&gt;在浏览器中输入 http://0.0.0.0:5000 即可访问Web应用进行数据可视化。&lt;/p&gt;
&lt;p&gt;通过上述步骤，您可以轻松启动BiG-SLiCE的可视化应用，查看处理结果和数据分析图表，如下图所示：&lt;/p&gt;
&lt;img src=&#34;images/web.png&#34; title=&#34;&#34;/&gt;
&lt;h2 id=&#34;bgc-atlas&#34;&gt;BGC Atlas&lt;/h2&gt;
&lt;p&gt;上次提到过的&lt;a class=&#34;link&#34; href=&#34;../bgc-atlas&#34; &gt;BGC Atlas&lt;/a&gt;，那个数据库用的就是BiG-SLiCE的输出结果。该数据库可供下载的有这几个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;complete-bgcs.tar.gz
A tarball containing the GBK files for only the complete BGC (3.5GB).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;all-bgcs.tar.gz
A tarball containing the GBK files for all BGCs (13GB).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bigslice_2.0.0_T0.4_16April.tar.gz
A tarball containing the BiG-SliCE clustering of complete BGCs (2.0 GB).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;atlas_17_07_2004.sql
The sql dump of the BGC-Atlas database (2.0 GB).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bigslice_2.0.0_T0.4_16April.tar.gz文件解压后就是BiG-SLiCE的输出文件夹，里面有result文件夹，里面有data.db文件，这个就是BiG-SLiCE处理后的数据库文件。&lt;/p&gt;
&lt;p&gt;另外atlas_17_07_2004.sql里面有所有用到的宏基因组metadata，但它是个PostgreSQL database dump，作为文本文件可以直接打开，但不好转换为数据库或是表格，需要用一下postgresql。&lt;/p&gt;
&lt;h3 id=&#34;使用案例&#34;&gt;使用案例&lt;/h3&gt;
&lt;p&gt;比如我们自己产生的BGC想要和BGC Atlas进行比较，就可以用[模式2] GCF查询：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bigslice --query gbk_files/ --query_name test_MAGs bigslice_2.0.0_T0.4_16April/ -t &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后就会在big_slice_test_out目录下产生一个report文件夹（如果原来没有的话），report文件夹下可以找到自己本次运行的结果。可以考虑用户交互输出或用数据库软件查看结果。&lt;/p&gt;
&lt;p&gt;主要是查看distance（membership_value）这一列，按默认定义的话&amp;lt;0.4才可以认为我们的query和数据库已有的部分聚成了GCF。&lt;/p&gt;
&lt;p&gt;然后我们可以查看相应的GCF中有哪些BGCs以及所对应的metadata：&lt;/p&gt;
&lt;p&gt;比如我们的BGC和BGC Atlas中的GCF 13734的distance&amp;lt;0.4，可以认为也是GCF 13734的一员，然后快速的方法是去官网查询&lt;a class=&#34;link&#34; href=&#34;https://bgc-atlas.cs.uni-tuebingen.de/bgcs?gcf=13734&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bgc-atlas.cs.uni-tuebingen.de/bgcs?gcf=13734&lt;/a&gt;，可以看到一共有258条核心BGC，我们可以下载相应的metadata（一次最多1000条），然后和我们的进行比较分析。&lt;/p&gt;
&lt;p&gt;但上述方法只适合查询的BGC不多的情况，很多的话最好还是考虑用代码处理atlas_17_07_2004.sql文件，获取metadata，需要使用postgresql进行处理：&lt;/p&gt;
&lt;p&gt;假设你已经会用并成功运行了postgresql（有点难）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew services start postgresql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;createdb -U asa atlas_db
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 导入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;psql -U asa -d atlas_db -f atlas_17_07_2004.sql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查看表
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;atlas_db=# \dt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                List of relations
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Schema |          Name           | Type  | Owner 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------+-------------------------+-------+-------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | antismash_runs          | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | antismash_runs_bk       | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | assembly2biome          | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | assembly2longestbiome   | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | bigscape_clustering     | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | bigscape_networks       | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | bigslice_gcf            | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | bigslice_gcf_membership | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | biomes                  | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | mgnify_asms             | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | mgnify_asms_old         | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | mibig_membership        | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | protoclusters           | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | protoclusters_bk        | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | regions                 | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | regions_backup          | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | regions_bk              | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | sample_metadata         | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; public | sample_metadata_old     | table | asa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(19 rows)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;atlas_db=# SELECT * FROM assembly2longestbiome limit 10;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   assembly   |                  longest_biome                  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------+-------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00002187 | root:Host-associated:Animal:Digestive system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00002188 | root:Environmental:Terrestrial:Soil:Forest soil
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00002318 | root:Host-associated:Animal:Digestive system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00002319 | root:Host-associated:Animal:Digestive system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00002320 | root:Host-associated:Animal:Digestive system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00003147 | root:Host-associated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00003148 | root:Host-associated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00004354 | root:Environmental
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00004355 | root:Environmental
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; MGYA00004356 | root:Environmental
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(10 rows)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#导出csv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;psql -U asa -d atlas_db -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;COPY assembly2longestbiome TO STDOUT WITH CSV HEADER&amp;#34;&lt;/span&gt; &amp;gt; assembly2longestbiome.csv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后就可以查看csv并和自己的数据整合分析。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Satria A Kautsar, Justin J J van der Hooft, Dick de Ridder, Marnix H Medema, BiG-SLiCE: A highly scalable tool maps the diversity of 1.2 million biosynthetic gene clusters, GigaScience, Volume 10, Issue 1, January 2021, giaa154. &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/gigascience/giaa154&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/gigascience/giaa154&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>BGC Atlas助力宏基因组中生物合成基因簇的发现与分析</title>
        <link>https://jb-cao.github.io/Cao-blog/p/bgc-atlas/</link>
        <pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/bgc-atlas/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/bgc-atlas/images/bgc_atlas.png" alt="Featured image of post BGC Atlas助力宏基因组中生物合成基因簇的发现与分析" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;次级代谢产物（Secondary Metabolites）是微生物在生长过程中产生的非必需化合物，尽管对微生物自身的生长发育并非不可或缺，却在生态和生理功能中扮演着重要角色。这些化合物在医药、生物技术和农业领域具有广泛的应用潜力。它们的合成由生物合成基因簇（Biosynthetic Gene Clusters, BGCs）编码，这些基因簇共同指导次级代谢产物的生物合成。随着宏基因组学技术的发展，研究人员能够直接从环境样本中研究BGCs，发现了许多编码全新化学结构的未知基因簇。&lt;/p&gt;
&lt;p&gt;上次介绍过一下生物合成基因簇家族（GCF）相关的&lt;a class=&#34;link&#34; href=&#34;../gcf-big-fam&#34; &gt;Big-Fam数据库&lt;/a&gt;，但它的源数据来自培养的微生物基因组或存放在公共存储库中的MAG的数据。而且它不提供相应数据的下载，上传还是AntiSmash的id，想要跟自己宏基因组产生的大量BGCs比较不太可能。&lt;/p&gt;
&lt;p&gt;本文介绍一个比较新的名为&lt;strong&gt;BGC Atlas&lt;/strong&gt;的网络资源（&lt;a class=&#34;link&#34; href=&#34;https://bgc-atlas.cs.uni-tuebingen.de&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bgc-atlas.cs.uni-tuebingen.de&lt;/a&gt;），它为探索和分析宏基因组中的BGC多样性提供了便捷的工具。该工具最近发表在了NAR上：&lt;/p&gt;
&lt;p&gt;Caner Bağcı, et.al, BGC Atlas: a web resource for exploring the global chemical diversity encoded in bacterial genomes, Nucleic Acids Research, Volume 53, Issue D1, 6 January 2025, Pages D618–D624, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/nar/gkae953&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/nar/gkae953&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BGC Atlas从公开数据集中识别并聚类BGCs，提供了一个集中化的数据库和网络界面，支持基于元数据的BGC和基因簇家族（Gene Cluster Families, GCFs）的探索。通过对MGnify平台上超过35,000个数据集的分析，BGC Atlas识别了近180万个BGCs，并将其聚类为GCFs。分析结果显示，核糖体合成并经翻译后修饰的肽类（RiPPs）是最丰富的化合物类别，且大多数GCFs表现出高度的环境特异性。&lt;/p&gt;
&lt;h2 id=&#34;database&#34;&gt;Database&lt;/h2&gt;
&lt;img src=&#34;images/bgc_atlas.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;数据收集与预处理&#34;&gt;数据收集与预处理&lt;/h3&gt;
&lt;p&gt;研究者从公共数据库MGnify收集了宏基因组数据集及其对应的元数据。这些数据集涵盖了海洋、土壤、人体相关及其他环境样本。对于每个样本，研究者获取了FASTA格式的组装contigs以及描述样本环境和生物学背景的元数据（上图）。&lt;/p&gt;
&lt;h3 id=&#34;bgc识别&#34;&gt;BGC识别&lt;/h3&gt;
&lt;p&gt;使用antiSMASH（版本7.0.0）识别BGCs，参数设置为&lt;code&gt;--clusterhmmer --tigrfam --asf --cc-mibig --cb-subclusters --cb-knownclusters --pfam2go --rre --tfbs --genefinding-tool prodigal-m --allow-long-headers&lt;/code&gt;。antiSMASH提供了全面的注释信息，包括次级代谢产物类型、预测的化学结构和功能域，并构建了antiSMASH-DB用于存储和比较BGCs。&lt;/p&gt;
&lt;h3 id=&#34;bgc聚类&#34;&gt;BGC聚类&lt;/h3&gt;
&lt;p&gt;使用BiG-SLiCE（版本2.0.0）将BGCs聚类为基因簇家族（GCFs），基于序列相似性和域结构进行分组，形成非冗余的GCFs集合（上图）。聚类过程分为两步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;初始聚类&lt;/strong&gt;：对antiSMASH标注为完整的BGCs进行聚类，距离阈值为0.4，确保核心簇定义明确。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部分BGCs分配&lt;/strong&gt;：将antiSMASH标注为“on contig edge”的部分BGCs和MIBiG数据库中的已知化合物分配到预定义的簇中，距离阈值同样为0.4，保留最佳匹配结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据库与网络界面&#34;&gt;数据库与网络界面&lt;/h3&gt;
&lt;p&gt;BGC识别和聚类结果存储在PostgreSQL数据库中，支持复杂查询和高效数据管理。研究者还开发了BGC Atlas的网络界面，基于node.js、express、pug、leaflet和bootstrap构建，提供以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BGC和GCF探索&lt;/strong&gt;：浏览BGCs、查看详细注释及其在不同环境中的分布。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元数据整合&lt;/strong&gt;：将BGC数据与环境元数据结合，支持生态和进化分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查询功能&lt;/strong&gt;：用户可输入BGC序列，使用BiG-SLiCE查询模式在数据库中搜索相似簇，结果以表格形式展示输入BGC与最接近GCF的距离。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;images/web.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;BGC Atlas 提供了多种视图和功能，用于探索宏基因组样本、BGCs 和 GCFs。所有视图均支持基于自由文本或元数据特征的搜索和过滤。通过“Filter”菜单，用户可以使用布尔逻辑组合多个条件进行查询，例如搜索来自“Arctic”（地理位置特征）环境的“Marine”（生物群落特征）BGCs。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Samples 视图&lt;/strong&gt;：展示所有分析样本及其元数据特征，用户可通过antiSMASH界面进一步探索这些样本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BGCs 视图&lt;/strong&gt;：显示数据库中所有BGCs的表格，支持过滤功能以进行更具体的查询。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GCFs 视图&lt;/strong&gt;：展示所有GCFs的表格，选择特定GCF后，“BGCs”视图将仅显示该GCF的成员BGCs。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种设计使用户能够在不同视图之间切换，结合详细注释和分布信息，深入比较分析BGCs及其所属GCFs，并通过元数据探索其生态学意义（上图）。&lt;/p&gt;
&lt;h2 id=&#34;result&#34;&gt;Result&lt;/h2&gt;
&lt;h3 id=&#34;bgc结构类别的分布&#34;&gt;BGC结构类别的分布&lt;/h3&gt;
&lt;p&gt;研究者对MGnify的35,486个数据集进行了初步分析，发现了约185万个BGCs，分布于多种环境样本中。其中，绝大多数（88.7%）BGCs被antiSMASH标注为“on contig edge”，表明它们的不完整性，这主要是由于宏基因组测序通常产生较短的contigs。尽管如此，超过一半（51.7%）的BGCs长度仍超过5 kb，完整BGCs的中位长度约为21 kb。&lt;/p&gt;
&lt;p&gt;在分析的BGCs中，&lt;strong&gt;核糖体合成并经翻译后修饰的肽类（RiPPs）&lt;strong&gt;占比最高（52.3%），其中环内酯自诱导物是最常见的产物类型（16.5%）。RiPPs的高比例可能与数据库中宿主相关样本的过度代表性有关。多项研究表明，RiPPs是人类微生物组中最常见的BGC类别，特别是在乳酸菌基因组中，其占比可高达76%。其他显著的结构类别包括&lt;/strong&gt;萜类&lt;/strong&gt;、&lt;strong&gt;非核糖体肽&lt;/strong&gt;和&lt;strong&gt;聚酮类&lt;/strong&gt;，这些类别共同构成了宏基因组中观察到的化学多样性。研究者还发现，不同生物群落中产物类别的分布存在显著差异。例如，萜类主要存在于陆地环境样本中，而RiPPs在宿主相关样本中最为丰富。&lt;/p&gt;
&lt;h3 id=&#34;基因簇家族gcfs的栖息地特异性&#34;&gt;基因簇家族（GCFs）的栖息地特异性&lt;/h3&gt;
&lt;p&gt;聚类分析显示，GCFs表现出显著的栖息地特异性，表明某些BGCs适应了特定的环境条件。总体而言，76%的GCFs（至少包含5个BGC成员）仅存在于一种特定栖息地中，这强调了微生物次级代谢的生态专一性。&lt;/p&gt;
&lt;p&gt;在MGnify生物群落分类的第一层级（宿主相关、环境、工程和混合）中，几乎所有GCFs都局限于某一特定类别。这种高度特异性在第二层级（如宿主相关样本中的人类、哺乳动物和鸟类）中依然存在，表明大多数GCFs对特定宿主类型具有专一性。在第三层级（如人类样本中的消化系统与皮肤），这种趋势继续延续，表明GCF特异性甚至延伸到宿主体内的不同部位。然而，随着分类的细化，栖息地特异性逐渐减弱。例如，在第四层级（如人类消化系统中的大肠与后肠），GCFs的专一性下降，表明某些GCFs虽然适应了更广泛的环境（如人类消化系统），但也可能存在于更细分的生态位中。&lt;/p&gt;
&lt;p&gt;在环境样本中也观察到了类似的模式。这些样本在第一层级被广泛分类，而在第二层级（如水生与陆地）中，大多数GCFs仍然高度特异性于这些不同的环境类型。在第三层级（如水生样本中的淡水与海洋），GCFs仍然主要特异性于特定的水生栖息地。然而，到了第四层级（如淡水样本中的地下水、静水与流水），栖息地特异性开始减弱，表明某些GCFs虽然适应了更广泛的水生环境，但也可能存在于更狭窄的亚栖息地中。&lt;/p&gt;
&lt;p&gt;对某些GCFs的详细分析揭示了显著的栖息地特异性模式。例如，&lt;strong&gt;GCF2487&lt;/strong&gt;（一种萜类生产簇）仅在全球的河口样本中发现，凸显了其对该特定环境的适应性。另一方面，&lt;strong&gt;GCF12495&lt;/strong&gt;（一种长度约50 kb的非核糖体肽合成酶BGC家族）仅在来自欧洲、东南亚和北美的哺乳动物粪便样本中被发现。这些特异性BGCs的生态作用表明，微生物可能采用了特定的适应策略以在其各自环境中繁衍生息。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Caner Bağcı, Matin Nuhamunada, Hemant Goyat, Casimir Ladanyi, Ludek Sehnal, Kai Blin, Satria A Kautsar, Azat Tagirdzhanov, Alexey Gurevich, Shrikant Mantri, Christian von Mering, Daniel Udwary, Marnix H Medema, Tilmann Weber, Nadine Ziemert, BGC Atlas: a web resource for exploring the global chemical diversity encoded in bacterial genomes, Nucleic Acids Research, Volume 53, Issue D1, 6 January 2025, Pages D618–D624, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/nar/gkae953&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/nar/gkae953&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>宏基因组分箱（binning）｜3. BASALT优化binning流程</title>
        <link>https://jb-cao.github.io/Cao-blog/p/binning3/</link>
        <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/binning3/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/binning3/images/workflow.png" alt="Featured image of post 宏基因组分箱（binning）｜3. BASALT优化binning流程" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;在微生物组学研究中，基因组binning（分箱，即将测序数据中的reads或contigs分类到不同的基因组中）是一个关键步骤。发表于2018年的MetaWRAP一直没有重大更新，这篇文章将介绍一个较新的binning流程：BASALT及其具体使用方法。&lt;/p&gt;
&lt;p&gt;BASALT （Binning Across a Series of AssembLies Toolkit）是一个高效的基因组binning工具，旨在处理复杂的微生物组数据，特别是在多个组装（assemblies）之间进行binning时表现出色。它通过整合多个组装结果，提高了binning的准确性和完整性，尤其适用于处理高度复杂的微生物群落数据。&lt;/p&gt;
&lt;p&gt;BASALT的文章于2024年发表于Nature Communications，软件主页：&lt;a class=&#34;link&#34; href=&#34;https://github.com/EMBL-PKU/BASALT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/EMBL-PKU/BASALT&lt;/a&gt;。以下是BASALT的主要工作流程模块：&lt;/p&gt;
&lt;img src=&#34;images/workflow.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;功能模块&#34;&gt;功能模块&lt;/h3&gt;
&lt;p&gt;BASALT由四个模块组成：&lt;strong&gt;自动分箱（Automated Binning）&lt;/strong&gt;、&lt;strong&gt;分箱选择（Bin Selection）&lt;/strong&gt;、&lt;strong&gt;优化（Refinement）&lt;strong&gt;和&lt;/strong&gt;缺口填充（Gap Filling）&lt;/strong&gt;。以下是各模块的详细工作流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动分箱模块&lt;/strong&gt;&lt;br&gt;
首先，通过多个分箱工具（每个工具使用不同的阈值）将组装的contigs分类到不同的bin中，生成初始的binsets。接着，通过识别contig ID，将包含相似contig的bin合并为混合bin（hybrid bins）。然后，基于平均核苷酸一致性（ANI）对这些混合binsets进行分组，并通过覆盖度估计（coverage estimation）识别每组中的核心序列（Core sequence identification, CSI），用于比较组内每对bin中的内部序列（inliers）。随后，使用神经网络算法识别冗余bin，并保留非冗余bin用于后续的&lt;strong&gt;离群值去除（Outlier removal, OR）&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分箱选择模块&lt;/strong&gt;&lt;br&gt;
在优化模块中，结合四核苷酸频率（Tetranucleotide Frequency, TNF）和覆盖度相关系数（Coverage Correlation Coefficient, CCC），通过多维内部四分位距（Multidimensional Internal Quartile Range, IQR）检测来识别离群序列（outlier sequences）。接着，通过序列检索步骤（sequence retrieval），利用双端测序（Pair-End, PE）或长读长追踪（Long-Read Tracking）将未分箱的内部序列（un-binned inliers）从短读长（SR）和长读长（LR）contig池中连接并重新迭代，从而生成优化后的bin。成功映射到优化bin的reads会进一步进行抛光（polishing），生成抛光后的bin。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;优化模块&lt;/strong&gt;&lt;br&gt;
在优化模块的最后一步，通过受限的重叠-布局-一致性程序（restrained Overlap–Layout–Consensus program, rOLC），将优化/抛光后的bin与相应的冗余bin进行重叠，然后在短读长（SRS）和长读长（LRS）数据的基础上进行重新组装。重新组装的bin会进一步抛光，并经过另一轮rOLC处理，最终生成最终的bin-set。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;缺口填充模块&lt;/strong&gt;&lt;br&gt;
在缺口填充模块中，长读长测序数据（+LRS）可以用于补充和完善bin中的缺口区域，进一步提高bin的完整性和准确性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;效果评估&#34;&gt;效果评估&lt;/h3&gt;
&lt;h4 id=&#34;利用cami数据集评估basalt的性能&#34;&gt;利用CAMI数据集评估BASALT的性能&lt;/h4&gt;
&lt;p&gt;采用Critical Assessment of Metagenome Interpretation （CAMI）中的CAMI-high数据。使用二代+三代数据混装产生的组装文件，BASALT可以恢复其中的392个满足完整度 ≥ 50，污染度 ≤ 10的MAGs。经过基因组选择、优化和空缺填补每一个模块处理后，所产生的MAGs无论从完整度（Completeness）、污染度（Contamination）和总质量（完整度-5*污染度）上都有很大的提升。&lt;/p&gt;
&lt;img src=&#34;images/compare1.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;与其他主流软件的比较&#34;&gt;与其他主流软件的比较&lt;/h4&gt;
&lt;p&gt;在MAGs（宏基因组组装基因组）的评估中，采用了更为严格的质量标准，即&lt;strong&gt;质量值（完整度 - 5 × 污染度）≥ 50&lt;/strong&gt;。通过对比VAMB、DASTool、metaWRAP和BASALT四个软件的处理结果，发现BASALT的表现显著优于其他工具。具体而言，BASALT比VAMB、DASTool和metaWRAP分别多获得了&lt;strong&gt;63.7%&lt;/strong&gt;、&lt;strong&gt;61.5%&lt;strong&gt;和&lt;/strong&gt;33.3%&lt;strong&gt;的MAGs，其中包括&lt;/strong&gt;69个独有的MAGs&lt;/strong&gt;（图a）。&lt;/p&gt;
&lt;p&gt;在四个软件共同获得的&lt;strong&gt;168个MAGs&lt;/strong&gt;中，BASALT生成的基因组质量也显著高于其他软件（图b）。两两比较的结果进一步显示，BASALT生成的MAGs质量普遍优于其他工具。具体来说，BASALT生成的&lt;strong&gt;质量更好的MAGs数量&lt;/strong&gt;分别是VAMB的&lt;strong&gt;9.6倍&lt;/strong&gt;、DASTool的&lt;strong&gt;14.6倍&lt;/strong&gt;和metaWRAP的&lt;strong&gt;6.1倍&lt;/strong&gt;（图c）。&lt;/p&gt;
&lt;p&gt;此外，在高质量MAGs（质量值 &amp;gt; 90）的获取方面，BASALT的表现同样突出。与VAMB、DASTool和metaWRAP相比，BASALT获得的高质量MAGs数量分别是它们的&lt;strong&gt;2.28倍&lt;/strong&gt;、&lt;strong&gt;3.59倍&lt;/strong&gt;和&lt;strong&gt;2.02倍&lt;/strong&gt;（图d）。&lt;/p&gt;
&lt;img src=&#34;images/compare2.png&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;真实数据集评估&#34;&gt;真实数据集评估&lt;/h4&gt;
&lt;p&gt;除了测试数据集外，作者团队还选用了十个真实数据集，包括&lt;strong&gt;SRS（短读长测序）&lt;/strong&gt;、&lt;strong&gt;SRS+LRS（短读长+长读长测序）&lt;strong&gt;以及&lt;/strong&gt;LRS（HiFi长读长测序）&lt;strong&gt;数据，涵盖了盐湖沉积物、人类肠道、海水、南极土壤、活性污泥（AS）、鸡肠道、羊肠道、热泉、厌氧反应器（AD）等多种环境类型。以高度复杂的盐湖沉积物微生物群落样本为例（仅使用二代测序数据），BASALT比metaWRAP多获得了&lt;/strong&gt;30%的MAGs&lt;/strong&gt;，尤其在恢复低丰度MAGs方面表现出显著优势（图a）。在功能注释分析中，BASALT比metaWRAP多获得了47.6%的非冗余开放式阅读框（ORF）序列（图b），使得BASALT恢复的MAGs在功能模块上更加完整（图c）。&lt;/p&gt;
&lt;img src=&#34;images/compare3.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;从盐湖沉积物样品中，BASALT共获得了&lt;strong&gt;557个MAGs&lt;/strong&gt;，涵盖了&lt;strong&gt;54个门&lt;/strong&gt;；而metaWRAP仅识别了&lt;strong&gt;392个MAGs&lt;/strong&gt;，涵盖&lt;strong&gt;45个门&lt;/strong&gt;，且这些门均被BASALT检测到（图5）。此外，BASALT独特地识别出了metaWRAP未能发现的&lt;strong&gt;9个门&lt;/strong&gt;，其中包括&lt;strong&gt;21个纲水平上的细菌分支&lt;/strong&gt;和&lt;strong&gt;2个目水平上的古菌分支&lt;/strong&gt;（红色高亮分支）。这些独特的分支为挖掘复杂环境中未被探索的微生物及其功能元件提供了重要线索，进一步拓展了对微生物多样性和功能潜力的理解。&lt;/p&gt;
&lt;img src=&#34;images/example1.png&#34; title=&#34;&#34; width=&#34;60%&#34;/&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;由于需要安装许多依赖项，推荐使用conda安装和管理BASALT，命令耗时较长，需要耐心等待：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 我这里安装到~/biosoft/目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/biosoft/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/EMBL-PKU/BASALT.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; BASALT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda env create -n BASALT --file basalt_env.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后要授权BASALT脚本。一般来说conda BASALT环境位于conda安装的子目录envs中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod -R &lt;span class=&#34;m&#34;&gt;777&lt;/span&gt; ~/miniconda3/envs/BASALT/bin/*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后下载神经网络训练模型，可以直接用1脚本下载，如果网络不好可以手动下载（或者在浏览器下载好再ftp上传到服务器）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 1.脚本下载训练模型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python BASALT_models_download.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 2.手动下载训练模型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://figshare.com/ndownloader/files/41093033
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv &lt;span class=&#34;m&#34;&gt;41093033&lt;/span&gt; BASALT.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv BASALT.zip ~/.cache
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/.cache
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip BASALT.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;后续一般会用到checkM，所以也最好按照&lt;a class=&#34;link&#34; href=&#34;../binning2/#%e8%bd%af%e4%bb%b6%e6%95%b0%e6%8d%ae%e5%87%86%e5%a4%87&#34; &gt;上一篇文章&lt;/a&gt;下载配置一下相应数据库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 设置CheckM数据存储位置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;checkm data setRoot ~/db/checkm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;除上述conda方法外，还可以使用脚本直接安装或是利用singularity运行等方法，可参考&lt;a class=&#34;link&#34; href=&#34;https://github.com/EMBL-PKU/BASALT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/EMBL-PKU/BASALT&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;测试数据&#34;&gt;测试数据&lt;/h4&gt;
&lt;p&gt;作者团队准备了测试文件以测试BASALT是否成功安装并且可以顺利运行。从&lt;a class=&#34;link&#34; href=&#34;https://figshare.com/articles/dataset/BASALT_demo_files/22323424&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://figshare.com/articles/dataset/BASALT_demo_files/22323424&lt;/a&gt;下载测试文件（共三个：Data.tar.gz、Final_bestbinset.tar.gz、basalt.sh），然后执行下面的命令运行程序（该过程耗时大约六小时）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip 22323424.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar zxvf Data.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Data/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a assembly.fa -s sample1.R1.fq,sample1.R2.fq -l sample1.nanopore.fq -t &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;命令参数&#34;&gt;命令参数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;用法&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BASALT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ASSEMBLIES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SR_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LONG_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HIFI_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HI_C_DATASET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREADS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXTRA_BINNER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUALITY_CHECK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpn&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MIN_COMPLETENESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctn&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_CONTAMINATION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RUNNING_MODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTIONAL_MODULE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autopara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AUTOBINING_PARAMETERS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;refinepara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;REFINEMENT_PARAMTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;显示帮助信息并退出。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ASSEMBLIES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assemblies&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ASSEMBLIES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;组装序列文件列表，例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;as1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;as2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fa&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SR_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shortreads&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SR_DATASETS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;双端测序数据列表，例如：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r1_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r1_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r2_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r2_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（双端数据需使用&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`/`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;分隔）。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;注意，这里不是随便什么路径，要求一定要在同一个文件夹下。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LONG_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longreads&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LONG_DATASETS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;包含&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ONT和PacBio长读长数据&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（不包括&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HiFi数据&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lr1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lr2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HIFI_DATASETS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hifi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HIFI_DATASETS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HiFi测序数据&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HI_C_DATASET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HIC&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HI_C_DATASET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Hi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C测序数据列表&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hc1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hc2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREADS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;threads&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREADS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;线程数，例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ram&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RAM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;内存大小，最低建议&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXTRA_BINNER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extra_binner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXTRA_BINNER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;额外的分箱工具：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetaBinner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Vamb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;表示在默认使用&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetaBAT2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;、&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MaxBin2和CONCOCT的基础上&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，额外使用&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetaBinner进行分箱&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUALITY_CHECK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quality&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUALITY_CHECK&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;选择&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CheckM版本&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，默认&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checkm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，可指定&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checkm2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，例如：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checkm2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;用于质量检查。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpn&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MIN_COMPLETENESS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;过滤保留&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin的最小完整度&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（默认&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctn&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_CONTAMINATION&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;过滤保留&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin的最大污染度&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（默认&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RUNNING_MODE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;运行模式：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：新建项目&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：继续运行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTIONAL_MODULE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;运行的功能模块（默认运行所有模块）：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autobinning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：自动分箱&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;refinement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：分箱优化&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reassembly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：重新组装&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reassembly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;仅运行重新组装模块。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autopara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AUTOBINING_PARAMETERS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;自动分箱模式：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;more&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sensitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（默认）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sensitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autopara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sensitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;refinepara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;REFINEMENT_PARAMTER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;分箱优化参数：&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（默认）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;例如：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;refinepara&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;BASALT支持单一组装文件或多组装文件进行binning；在样品的物种非常相似，但群落中物种丰度不同的情况下，如时间序列样品，多组装文件可大幅度提高binning的效果，但也可能会导致运算时间过长，但作者推荐用多组装文件模式进行分箱分析。如果运算资源不足，推荐使用多组数据进行合并组装的组装文件进行后续的分箱分析。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单独使用二代测序数据进行 binning 及修正，比较常用&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a as1.fa,as2.fa,as3.fa -s ds1_r1.fq,d1_r2.fq/d2_r1.fq,d2_r2.fq -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用二代测序数据及三代测序数据进行 binning 及修正&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a as1.fa,as2.fa,as3.fa -s ds1_r1.fq,d1_r2.fq/d2_r1.fq,d2_r2.fq -l lr1.fq,lr2.fq -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用 HiFi 数据及二代测序数据进行 binning 及修正&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a as1.fa -hf hifi1.fq -s ds1_r1.fq,d1_r2.fq -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;使用 BASALT 进行基因组的获取，并融合已有的基因组数据&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a as1.fa,as2.fa,as3.fa -s ds1_r1.fq,d1_r2.fq/d2_r1.fq,d2_r2.fq -d m_binset -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;使用 BASALT 进行外源数据基因组的去冗余&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;(a) 数据输入（Data feeding）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -s sample1.R1.fq,sample1.R2.fq/sample2.R1.fq,sample2.R2.fq -d mbin,dbin -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会生成 &lt;code&gt;Date_feeded&lt;/code&gt; 文件夹，其中包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 index 后的组装文件，如 &lt;code&gt;500_mbin.fa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;基因组文件夹，如 &lt;code&gt;500_mbin.fa_BestBinsSet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;覆盖率文件，如 &lt;code&gt;Coverage_matrix_for_binning_500_mbin.fa.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改格式后的 reads 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;(b) 基因组去冗余（De-replication）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -b 500_mbin.fa_BestBinsSet,501_dbin.fa_BestBinsSet &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-c Coverage_matrix_for_binning_500_mbin.fa.txt,Coverage_matrix_for_binning_501_mbin.fa.txt &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-a 500_mbin.fa,501_mbin.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-s sample1.R1.fq,sample1.R2.fq/sample2.R1.fq,sample2.R2.fq -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令输入多个基因组文件夹、组装文件、reads 和覆盖率文件，最终生成去冗余后的基因组文件夹 &lt;code&gt;BestBinset&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;使用 BASALT 进行基因组的修正&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -r BestBinset &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-c Coverage_matrix_for_binning_500_mbin.fa.txt,Coverage_matrix_for_binning_501_mbin.fa.txt &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-a 500_mbin.fa,501_mbin.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-s PE_r1_sample1.R1.fq,PE_r2_sample1.R2.fq/PE_r1_sample2.R1.fq,PE_r2_sample2.R2.fq -t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会生成 &lt;code&gt;BestBinset_outlier_refined&lt;/code&gt; 文件夹，存储优化后的基因组。&lt;/p&gt;
&lt;h3 id=&#34;具体示例&#34;&gt;具体示例&lt;/h3&gt;
&lt;img src=&#34;images/640.webp&#34; title=&#34;&#34;/&gt;
&lt;h4 id=&#34;项目背景&#34;&gt;项目背景&lt;/h4&gt;
&lt;p&gt;在鸟类生长的不同阶段，采集了若干种鸟类的粪便样本，通过宏基因组二代测序分析它们的微生物组。每个样本根据鸟类不同的生长周期进行了采集，并使用 &lt;strong&gt;metaspades&lt;/strong&gt; 软件对数据进行单个样本的组装。在得到单个样本的组装结果后，进一步对同种鸟类在同一生长周期的多个平行样本的数据进行合并组装，以便获取更丰富的群落信息，辅助后续的分箱处理。&lt;/p&gt;
&lt;h4 id=&#34;组装策略&#34;&gt;组装策略&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;单个样本组装&lt;/strong&gt;：使用 &lt;strong&gt;metaspades&lt;/strong&gt; 对每个鸟类在不同生长周期的粪便样本进行单样本组装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多样本合并组装&lt;/strong&gt;：将同一生长周期、同种鸟类的多个平行样本进行合并组装，以提高组装的完整性和准确性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分箱处理&lt;/strong&gt;：在完成组装后，进行基于二代测序数据的分箱，获取更准确的基因组信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以A鸟样本为例&lt;/p&gt;
&lt;p&gt;样本数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A类鸟阶段1样本&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sampleA_s1_1_R1.fq, sampleA_s1_1_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s1_2_R1.fq, sampleA_s1_2_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s1_3_R1.fq, sampleA_s1_3_R2.fq&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A类鸟阶段2样本&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sampleA_s2_1_R1.fq, sampleA_s2_1_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s2_2_R1.fq, sampleA_s2_2_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s2_3_R1.fq, sampleA_s2_3_R2.fq&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A类鸟阶段3样本&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sampleA_s3_1_R1.fq, sampleA_s3_1_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s3_2_R1.fq, sampleA_s3_2_R2.fq&lt;/li&gt;
&lt;li&gt;sampleA_s3_3_R1.fq, sampleA_s3_3_R2.fq&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;组装结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阶段1单样品组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s1_1_assembly.fa, sampleA_s1_2_assembly.fa, sampleA_s1_3_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阶段2单样品组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s2_1_assembly.fa, sampleA_s2_2_assembly.fa, sampleA_s2_3_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阶段3单样品组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s3_1_assembly.fa, sampleA_s3_2_assembly.fa, sampleA_s3_3_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阶段1多样品合并组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s1_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阶段2多样品合并组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s2_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阶段3多样品合并组装结果&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;sampleA_s3_assembly.fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分箱命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阶段1样品分箱命令&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BASALT -a sampleA_s1_assembly.fa, sampleA_s1_1_assembly.fa,sampleA_s1_2_assembly.fa,sampleA_s1_3_assembly.fa &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-s sampleA_s1_1_R1.fq,sampleA_s1_1_R2.fq/sampleA_s1_2_R1.fq,sampleA_s1_2_R2.fq/sampleA_s1_3_R1.fq,sampleA_s1_3_R2.fq &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-t &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; -m &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;注意事项&#34;&gt;注意事项&lt;/h3&gt;
&lt;h4 id=&#34;输入输出&#34;&gt;输入输出&lt;/h4&gt;
&lt;p&gt;BASALT的程序输入 -a,-s等参数不是任意文件的路径，而是要把这些文件放置到脚本运行同一文件夹下，因为&amp;rsquo;/&amp;lsquo;已经被用作文件之间的分隔符了。并且BASALT还不能设定输出路径，在输出时候自动将结果及重要过程文件输出至当前工作路径下，建议用户将需要分析的文件单独建立文件夹存放和运行BASALT，以免重复输出覆盖原有结果。用起来有点麻烦。&lt;/p&gt;
&lt;h4 id=&#34;运行速度&#34;&gt;运行速度&lt;/h4&gt;
&lt;p&gt;在使用单个组装文件时，BASALT的完整流程耗时通常比metaWRAP长，尤其随着样品复杂度的增加，耗时差异会更加显著。然而，文章中也提到，即便不运行gap filling模块，BASALT在基因组质量和数量上通常优于metaWRAP。实际上，在多个组装文件输入模式下，BASALT的效率反而高于metaWRAP，因为BASALT仅需运行一次，且其单独组装、合并组装和去冗余的流程有助于大大提高非冗余基因组的产出。如果用户对基因组的深度挖掘需求不高，且需要加速分箱过程，以下几种策略可能会有所帮助：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;使用MetaBAT2 + Semibin2作为初始Binners&lt;/strong&gt;：这可以显著加快auto-binning的过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只运行auto-binning、bin selection和refinement模块&lt;/strong&gt;：跳过gap filling模块可以有效减少运行时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仅使用合并组装文件&lt;/strong&gt;：在同时输入多个样品时，使用单一的合并组装文件（例如：sampleA1A2A3_assembly.fa）可以减少auto-binning的计算时间，但也可能会减少基因组的产出量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Qiu, Z., Yuan, L., Lian, CA. et al. BASALT refines binning from metagenomic data and increases resolution of genome-resolved metagenomic analysis. Nat Commun 15, 2179 (2024). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1038/s41467-024-46539-7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1038/s41467-024-46539-7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/EMBL-PKU/BASALT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/EMBL-PKU/BASALT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/TlxaiQGjoiE3c0Onqatu8A&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/TlxaiQGjoiE3c0Onqatu8A&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>使用Kraken进行16S/ITS物种注释（超快）</title>
        <link>https://jb-cao.github.io/Cao-blog/p/kraken-16s-its/</link>
        <pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/kraken-16s-its/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/kraken-16s-its/images/k16s1.png" alt="Featured image of post 使用Kraken进行16S/ITS物种注释（超快）" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;上次记录了一下qiime2的&lt;a class=&#34;link&#34; href=&#34;../amplicon-workflow&#34; &gt;扩增子分析流程&lt;/a&gt;。但是实际使用时，在最后一步物种注释时卡住了，如果使用常用的&lt;code&gt;feature-classifier&lt;/code&gt;方法，我尝试使用unite数据库鉴定了100条ITS序列，居然用了半个小时！尴尬的是，我有整整10万条ASV序列，这得跑到猴年马月。我想到做宏基因组时，千万级数量的reads用kraken做物种注释也不需要这么久，肯定有快的方法的。&lt;/p&gt;
&lt;p&gt;然后发现Kraken用于16S已经有文章了：
Lu, J., Salzberg, S.L. Ultrafast and accurate 16S rRNA microbial community analysis using Kraken 2. Microbiome 8, 124 (2020). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1186/s40168-020-00900-2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1186/s40168-020-00900-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kraken 2现在支持16S rRNA数据库，可以直接与QIIME和类似系统进行比较。Kraken 2通过其独特的无对齐算法，能够在极短的时间内完成大量序列的分类，并且支持多线程处理，显著提升了分析效率。此外，Kraken 2还结合了Bracken工具，能够更精确地估计物种的相对丰度，尤其是在处理复杂微生物群落时表现出色。&lt;/p&gt;
&lt;p&gt;但是Kraken2要用在ITS上的话目前是官方没有支持的，需要手动构建相应数据库，这个折腾了一会，具体方法放在后面了。&lt;/p&gt;
&lt;h2 id=&#34;kraken效果&#34;&gt;Kraken效果&lt;/h2&gt;
&lt;h3 id=&#34;速度快&#34;&gt;速度快&lt;/h3&gt;
&lt;img src=&#34;images/k16s1.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;Kraken 2在速度上的表现非常突出。根据Lu和Salzberg的研究，Kraken 2在生成16S rRNA数据库时，比QIIME 2快得多。例如，使用单线程时，Kraken 2生成Greengenes数据库仅需9分钟，而QIIME 2则需要78分钟。对于更大的SILVA数据库，Kraken 2仅需34分钟，而QIIME 2则需要超过58小时。在分类速度上，Kraken 2同样表现出色，单线程下仅需1分钟即可完成一个样本的分类，而QIIME 2则需要35分钟（使用16线程时）。对于大规模数据分析，Kraken 2的速度优势尤为明显，能够显著缩短分析时间。&lt;/p&gt;
&lt;h3 id=&#34;更精确&#34;&gt;更精确&lt;/h3&gt;
&lt;img src=&#34;images/k16s2.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;Kraken 2不仅在速度上占优，其分类精度也优于QIIME 2。研究显示，Kraken 2在分类16S rRNA序列时，能够更准确地识别物种，尤其是在处理复杂微生物群落时。Bracken工具进一步提升了Kraken 2的精度，能够更准确地估计物种的相对丰度。通过重新分配Kraken 2在属或更高分类水平上的分类结果，Bracken能够将分类结果细化到种水平，从而提供更精确的物种丰度估计。此外，Kraken 2的每读长分类功能使其能够为每个读长提供详细的分类信息，进一步提高了分析的准确性。&lt;/p&gt;
&lt;img src=&#34;images/k16s3.png&#34; title=&#34;&#34;/&gt;
&lt;p&gt;总的来说，Kraken 2和Bracken的组合为16S rRNA数据分析提供了一个快速、高效且精确的解决方案，特别适合处理大规模微生物群落数据。&lt;/p&gt;
&lt;h2 id=&#34;kraken-16s&#34;&gt;Kraken-16S&lt;/h2&gt;
&lt;p&gt;Kraken2是直接支持16S常用的三大数据库的(greengenes，rdp，silva)，用起来也非常简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#直接构建数据库，TYPE可选greengenes，rdp，silva&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kraken2-build --db &lt;span class=&#34;nv&#34;&gt;$DBNAME&lt;/span&gt; --special TYPE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#构建完成后就可以鉴定了，内存够的话，1min内都有结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kraken2 rep-seqs/dna-sequences.fasta --db &lt;span class=&#34;nv&#34;&gt;$DBNAME&lt;/span&gt; --out kraken_output --threads &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; --report kraken_report.txt -c 0.05
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#可以借助taxonkit得到类似qiime2标准注释文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cut -f3 kraken_output &amp;gt;tmpid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;taxonkit lineage tmpid --data-dir &lt;span class=&#34;nv&#34;&gt;$DBNAME&lt;/span&gt;/taxonomy/&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;taxonkit reformat --data-dir &lt;span class=&#34;nv&#34;&gt;$DBNAME&lt;/span&gt;/taxonomy/ -P &amp;gt;tmpres
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;paste kraken_output tmpres &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cut -f2,8&amp;gt;kraken_taxonomy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm tmpid tmpres
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;kraken-its&#34;&gt;Kraken-ITS&lt;/h2&gt;
&lt;p&gt;ITS一般用Unite数据库注释，但这个kraken2不支持，我尝试将Unite数据库整理为greengenes的格式，然后用&lt;code&gt;build_gg_taxonomy.pl&lt;/code&gt;生成names.dmp, nodes.dmp, seqid2taxid并建立kraken数据库，最后进行ITS序列鉴定是可行的。&lt;/p&gt;
&lt;p&gt;具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unite官网下载fasta文件，&lt;a class=&#34;link&#34; href=&#34;https://unite.ut.ee/repository.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://unite.ut.ee/repository.php&lt;/a&gt; ，点击General FASTA release下载解压，我用的是sh_general_release_dynamic_all_04.04.2024.fasta文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下命令建立数据库，注意&lt;code&gt;split_fasta.py&lt;/code&gt;和&lt;code&gt;build_gg_taxonomy.pl&lt;/code&gt;在后面，记得拷贝过去用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 手动构建目录结构&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/db/kraken_unite/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pushd&lt;/span&gt; ~/db/kraken_unite/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p data taxonomy library
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pushd&lt;/span&gt; data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 用split_fasta.py把unite数据库提供的fasta格式整理为greengenes的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;GG_VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;unite_all_04.04.2024
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./split_fasta.py -i ../sh_general_release_dynamic_all_04.04.2024.fasta -o &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GG_VERSION&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 用build_gg_taxonomy.pl进一步生成names.dmp, nodes.dmp, seqid2taxid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl ../build_gg_taxonomy.pl &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GG_VERSION&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_taxonomy.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;popd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv data/names.dmp data/nodes.dmp taxonomy/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv data/seqid2taxid.map .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv &lt;span class=&#34;s2&#34;&gt;&amp;#34;data/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GG_VERSION&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fa&amp;#34;&lt;/span&gt; library/unite.fna
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;popd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 用kraken2-build构建用于注释的数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kraken2-build --db ~/db/kraken_unite --build --threads &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;鉴定获得output文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#1秒出结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kraken2 rep-seqs/dna-sequences.fasta --db ~/db/kraken_unite/ --out kraken_output --threads &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; --report kraken_report.txt -c 0.05
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;借助taxonkit获取标准注释文件，taxonkit这软件也很好用。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cut -f3 kraken_output &amp;gt;tmpid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;taxonkit lineage tmpid --data-dir ~/db/kraken_unite/taxonomy/&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;taxonkit reformat  --data-dir ~/db/kraken_unite/taxonomy/ -P &amp;gt;tmpres
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;paste kraken_output tmpres &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cut -f2,8&amp;gt;kraken_taxonomy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm tmpid tmpres
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最后的结果就是类似下面的形式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0229a5c7f887dad960b40a0505cf9776	k__Fungi;p__Ascomycota;c__Saccharomycetes;o__Saccharomycetales;f__Saccharomycetales_fam_Incertae_sedis;g__Candida;s__Candida Candida_albicans
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;f88d9001e10f6d37672514972e6a199e	k__Fungi;p__Ascomycota;c__Saccharomycetes;o__Saccharomycetales;f__Saccharomycetales_fam_Incertae_sedis;g__Candida;s__Candida Candida_albicans
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c3519270e269b92d3577ed450032bbc4	k__Fungi;p__Ascomycota;c__Eurotiomycetes;o__Eurotiales;f__Aspergillaceae;g__Penicillium;s__
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;补充脚本信息：&lt;/p&gt;
&lt;p&gt;1.split_fasta.py：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/share/home/jianglab/pengchen/miniconda3/bin/python3.9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process_fasta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unite_fa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unite_taxonomy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;infile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unite_fa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fa_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unite_taxonomy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tax_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;infile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# Extract information from the header&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;parts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;accession&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;taxonomy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;formatted_taxonomy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;taxonomy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# Write to unite.fa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;fa_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;accession&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# Write to unite_taxonomy.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;tax_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;accession&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;formatted_taxonomy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# Write sequence lines to unite.fa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;fa_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Process a fasta file to generate unite.fa and unite_taxonomy.txt.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-i&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Input fasta file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Output prefix for unite.fa and unite_taxonomy.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;input_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;output_prefix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unite_fa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output_prefix&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fa&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unite_taxonomy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output_prefix&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_taxonomy.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;process_fasta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unite_fa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unite_taxonomy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.build_gg_taxonomy.pl : &lt;a class=&#34;link&#34; href=&#34;https://github.com/DerrickWood/kraken2/blob/master/scripts/build_gg_taxonomy.pl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/DerrickWood/kraken2/blob/master/scripts/build_gg_taxonomy.pl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.taxonkit: &lt;a class=&#34;link&#34; href=&#34;https://github.com/shenwei356/taxonkit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/shenwei356/taxonkit&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Lu, J., Salzberg, S.L. Ultrafast and accurate 16S rRNA microbial community analysis using Kraken 2. Microbiome 8, 124 (2020). &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1186/s40168-020-00900-2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1186/s40168-020-00900-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/DerrickWood/kraken2/wiki/Manual#custom-databases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/DerrickWood/kraken2/wiki/Manual#custom-databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/DerrickWood/kraken2/issues/97&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/DerrickWood/kraken2/issues/97&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>生物合成基因簇家族（GCF）数据库 BiG-FAM</title>
        <link>https://jb-cao.github.io/Cao-blog/p/gcf-big-fam/</link>
        <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://jb-cao.github.io/Cao-blog/p/gcf-big-fam/</guid>
        <description>&lt;img src="https://jb-cao.github.io/Cao-blog/p/gcf-big-fam/images/Screenshot%202025-01-08%20at%2011.53.28.png" alt="Featured image of post 生物合成基因簇家族（GCF）数据库 BiG-FAM" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;生物合成基因簇 (BGC) 的计算分析通过快速研究微生物基因组序列内的次级代谢潜力，彻底改变了天然产物的发现。将同源 BGC 分组为基因簇家族 (GCF) 有助于绘制其结构和分类多样性，并通过对已知功能的 BGC 进行去重复，提供对假定 BGC 新颖性的见解。&lt;/p&gt;
&lt;p&gt;通过将从当前可用的基因组和 MAG 中鉴定出的大规模全球 BGC 集合作为数据源，BiG-FAM 提供了可探索的微生物次生代谢多样性“图集”，以浏览和搜索跨类群的生物合成多样性。
BiG-FAM 有助于查询假定的 BGC，以便根据公开数据与其他已知和预测的 BGC 的关系，快速找到它们在多样性图上的位置，并更好地了解它们的新颖性或（可能的）功能。&lt;/p&gt;
&lt;p&gt;BiG-FAM数据库（2020年）基于从多个公开可用来源获取的 1,225,071 个 BGC 的 GCF 聚类。这项大规模分析是使用 BiG-SLiCE 软件 和任意聚类阈值 (T=900.0) 进行的，结果构建了 29,955 个 GCF 模型，每个模型代表不同的蛋白质结构域和序列特征BGC。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个数据库一直没有更新，而最近几年又是宏基因组测序井喷的时候，里面的GCF数量肯定远低于现在已经发现的GCF，但稍微用一下做参考还是可以的（或者有想法可以自己跑一下更多公开数据说不定也是一篇NAR）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BiG-FAM数据库在线访问：&lt;a class=&#34;link&#34; href=&#34;https://bigfam.bioinformatics.nl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bigfam.bioinformatics.nl&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;images/big-fam.png&#34; title=&#34;&#34;/&gt;
&lt;h2 id=&#34;数据库特征&#34;&gt;数据库特征&lt;/h2&gt;
&lt;h3 id=&#34;超过120万个bgc的gcf数据&#34;&gt;超过120万个BGC的GCF数据&lt;/h3&gt;
&lt;p&gt;BiG-FAM数据库包含29,955个通过BiG-SLiCE 1.0版本计算的GCF，这些数据源自1,225,071个BGC的集合。这些BGC通过antiSMASH v5.1.1从188,622个微生物基因组（包括细菌、真菌和古菌基因组）以及20,584个MAG中预测得到，并补充了来自MIBiG 2.0数据库的实验验证BGC。所有基因组的完整列表及其BGC计数和分类信息见补充表。这些BGC及其对应的GCF涵盖了广泛的生物合成类别和分类群，提供了对微生物次级代谢多样性的全面覆盖。&lt;/p&gt;
&lt;h3 id=&#34;数据库内容的无缝探索&#34;&gt;数据库内容的无缝探索&lt;/h3&gt;
&lt;p&gt;基于BiG-SLiCE 1.0.0生成的核心SQLite3数据存储，作者使用Python Flask库构建了一个功能齐全的Web服务器。为了实现更流畅的浏览体验，特别是在计算密集型的网页中，作者额外实现了一层缓存存储，用于预取复杂SQL查询。此外，这种设置还实现了轻量级的“搜索和过滤”功能，使用户能够根据特定的分类群、来源数据集类型、生物合成类别或蛋白质域来查找BGC或GCF。&lt;/p&gt;
&lt;img src=&#34;images/Screenshot 2025-01-08 at 11.53.28.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;用户提交bgc的快速gcf定位&#34;&gt;用户提交BGC的快速GCF定位&lt;/h3&gt;
&lt;p&gt;使用BiG-SLiCE的一个主要优势在于，每个GCF的共享BGC特征被总结在与底层BGC相同的基于欧几里得距离的特征矩阵中，形成GCF模型。这使得BGC到GCF的线性匹配成为可能，从而可以在几秒钟内将新测序的BGC定位到预计算的生物合成多样性全球图谱中。为了便于使用这一功能，BiG-FAM集成了一个基于Web的“查询”提交系统，用户可以直接提交通过antiSMASH预测的BGC进行GCF分析。生成的BGC到GCF匹配结果将揭示查询BGC的近缘和远缘关系，帮助研究其新颖性、与其他BGC的关系，以及跨分类群的分布和进化。&lt;/p&gt;
&lt;h3 id=&#34;直接链接到bgc和基因组数据库&#34;&gt;直接链接到BGC和基因组数据库&lt;/h3&gt;
&lt;p&gt;尽管BiG-FAM存储并展示了许多与BGC相关的有用信息，但它并非旨在成为一个BGC数据库，因此不包含与GCF无直接关联的信息。为了支持需要这些数据的用户，BiG-FAM存储了来自MIBiG和antiSMASH数据库的BGC元数据链接。这些交叉链接可用于获取更多信息，例如BGC产物的核心结构。此外，每个BGC的摘要页面还提供了原始基因组来源的链接，用户也可以从GCF页面下载合并的URL列表。&lt;/p&gt;
&lt;h2 id=&#34;应用示例&#34;&gt;应用示例&lt;/h2&gt;
&lt;h3 id=&#34;探索ranthipeptide-bgc的多样性&#34;&gt;探索Ranthipeptide BGC的多样性&lt;/h3&gt;
&lt;p&gt;Ranthipeptides（曾被称为“SCIFF肽”）是一类核糖体合成并经翻译后修饰的肽（RiPPs），主要存在于梭菌纲（Clostridia）中，尽管GC含量分析表明其生物合成基因可能通过水平转移传播到其他分类群。近期研究表明，这些肽在群体水平调控中发挥重要作用，例如通过群体感应机制。在作者先前绘制120万个BGC全球多样性的研究中，作者捕获了6,800个推定的ranthipeptide BGC，这些BGC在前体肽侧翼的基因邻域表现出多样性。为了探索这种多样性，作者可以使用BiG-FAM的“GCF搜索”功能，并以该BGC类的两个标志性结构域（AS-TIGR03973和Radical_SAM）作为查询条件。搜索结果显示了79个GCF，每个GCF代表了不同的BGC分布模式及其分类学来源。通过点击每个GCF的详情页面链接，可以获取其分类来源、核苷酸长度、计算半径以及GCF内BGC共享的生物合成特征。此外，所有BGC的概览及其序列链接可以以TSV格式下载。多基因比较可视化功能还提供了ranthipeptide前体基因侧翼基因邻域多样性的整合视图。&lt;/p&gt;
&lt;img src=&#34;images/Screenshot 2025-01-08 at 13.09.04.png&#34; title=&#34;&#34;/&gt;
&lt;h3 id=&#34;对新测序链霉菌株的gcf分析&#34;&gt;对新测序链霉菌株的GCF分析&lt;/h3&gt;
&lt;p&gt;最近，一株从突尼斯薰衣草根际土壤中分离的新链霉菌——Streptomyces tunisialbus的基因组草图被发布。为了展示BiG-FAM如何用于评估新测序BGC的生物合成新颖性并捕捉其远缘关系，作者从ENA下载了该基因组的组装数据，并将其上传至antiSMASH Web服务器，获得了一个唯一的任务ID。该ID可直接用于在BiG-FAM中进行GCF分析。对36个antiSMASH预测的BGC的完整分析在不到一分钟内完成，生成了最佳BGC-to-GCF匹配对的汇总表。其中一个有趣的BGC是来自“Region 15.1”的完整46.5 kb Type-I PKS基因簇，其在ClusterBlast和KnownClusterBlast结果中与公共数据库的基因簇匹配率较低。GCF分析结果显示，该BGC仅与一个单例GCF有显著匹配，进一步检查发现该GCF源自同一基因组的NCBI提交条目。这表明该PKS BGC代表了一种新型BGC，因为它与其他基因组中的GCF成员没有密切关系。通过“追踪”查询BGC的生物合成结构域，可以分析与数百至数千个远缘BGC的关系，展示基因之间的结构域架构相似性。&lt;/p&gt;
&lt;img src=&#34;images/Screenshot 2025-01-08 at 13.09.25.png&#34; title=&#34;&#34;/&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Satria A Kautsar, Kai Blin, Simon Shaw, Tilmann Weber, Marnix H Medema, BiG-FAM: the biosynthetic gene cluster families database, Nucleic Acids Research, Volume 49, Issue D1, 8 January 2021, Pages D490–D497, &lt;a class=&#34;link&#34; href=&#34;https://doi.org/10.1093/nar/gkaa812&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doi.org/10.1093/nar/gkaa812&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
